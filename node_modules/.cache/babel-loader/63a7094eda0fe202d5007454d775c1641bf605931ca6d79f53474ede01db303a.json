{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shapeless\\\\Desktop\\\\miniapp\\\\src\\\\AssessmentPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Autosuggest from 'react-autosuggest';\n\n// Импорт локальных JSON (ФИО)\nimport surnames from './components/autosuggest/surname.json';\nimport firstnames from './components/autosuggest/firstname.json';\nimport patronymics from './components/autosuggest/lastname.json';\n\n// Фон и логотип\nimport backgroundImage from './components/background.png';\nimport logo from './components/logo.png';\n\n// Основные стили\nimport './AssessmentPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AssessmentPage() {\n  _s();\n  // =====================\n  // 1) Состояния для ФИО\n  // =====================\n  const [surnameValue, setSurnameValue] = useState('');\n  const [surnameSuggestions, setSurnameSuggestions] = useState([]);\n  // В JSON у вас, скорее всего, поле \"male\" или \"female\". Проверяйте точную структуру.\n  // Ниже предполагается, что .map(item => item.male || item.female) возвращает строку.\n  const surnameList = surnames.map(item => item.male || item.female);\n  const [firstNameValue, setFirstNameValue] = useState('');\n  const [firstNameSuggestions, setFirstNameSuggestions] = useState([]);\n  const firstNameList = firstnames.map(item => typeof item === 'string' ? item : item.firstName || item.name);\n  const [patronymicValue, setPatronymicValue] = useState('');\n  const [patronymicSuggestions, setPatronymicSuggestions] = useState([]);\n  const patronymicList = patronymics.map(item => typeof item === 'string' ? item : item.patronymic || item.name);\n\n  // =====================\n  // 2) Autosuggest logic\n  // =====================\n  const getSurnameSuggestions = value => {\n    const trimmed = value.trim().toLowerCase();\n    if (trimmed.length < 2) return [];\n    return surnameList.filter(s => s.toLowerCase().startsWith(trimmed));\n  };\n  const getFirstNameSuggestions = value => {\n    const trimmed = value.trim().toLowerCase();\n    if (trimmed.length < 2) return [];\n    return firstNameList.filter(s => s.toLowerCase().startsWith(trimmed));\n  };\n  const getPatronymicSuggestions = value => {\n    const trimmed = value.trim().toLowerCase();\n    if (trimmed.length < 2) return [];\n    return patronymicList.filter(s => s.toLowerCase().startsWith(trimmed));\n  };\n  const surnameInputProps = {\n    placeholder: 'Введите фамилию',\n    value: surnameValue,\n    onChange: (e, {\n      newValue\n    }) => setSurnameValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase()),\n    autoComplete: 'off'\n  };\n  const firstNameInputProps = {\n    placeholder: 'Введите имя',\n    value: firstNameValue,\n    onChange: (e, {\n      newValue\n    }) => setFirstNameValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase()),\n    autoComplete: 'off'\n  };\n  const patronymicInputProps = {\n    placeholder: 'Введите отчество',\n    value: patronymicValue,\n    onChange: (e, {\n      newValue\n    }) => setPatronymicValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase()),\n    autoComplete: 'off'\n  };\n\n  // ======================\n  // 3) Логика начала опроса (ФИО)\n  // ======================\n  const [isStarted, setIsStarted] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleStart = () => {\n    if (!surnameValue.trim() || !firstNameValue.trim() || !patronymicValue.trim()) {\n      setErrorMessage('Пожалуйста, заполните все поля.');\n      return;\n    }\n    setErrorMessage('');\n    setIsStarted(true);\n  };\n\n  // ======================\n  // 4) Вопросы\n  // ======================\n  const questions = [{\n    question: \"1. Какой формат работы вам ближе?\",\n    answers: [\"Когда можно детально разобраться в процессах и построить устойчивую систему\", \"Когда задачи достаточно разнообразны и требуют гибкого подхода\", \"Когда есть чёткий алгоритм действий и понятный конечный результат\"]\n  }, {\n    question: \"2. Если коллега допустил серьёзную ошибку, что для вас логичнее сделать?\",\n    answers: [\"Понять, что пошло не так, и вместе найти пути исправления\", \"В первую очередь скорректировать свои планы с учётом возникших проблем\", \"Сделать выводы для себя и минимизировать влияние на мою работу\"]\n  }\n  // ... остальные вопросы ...\n  ];\n\n  // ======================\n  // 5) Логика шагов вопросов\n  // ======================\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [isFinished, setIsFinished] = useState(false);\n\n  // Для анимации плавного появления/исчезновения вопроса\n  const [fadeTransition, setFadeTransition] = useState(false);\n\n  // Список ответов «вперемешку» (если нужно случайно перемешивать варианты)\n  const [shuffledAnswers, setShuffledAnswers] = useState([]);\n\n  // При загрузке каждого вопроса — перемешиваем ответы\n  useEffect(() => {\n    if (isStarted && currentQuestion < questions.length) {\n      const newShuffled = [...questions[currentQuestion].answers].sort(() => Math.random() - 0.5);\n      setShuffledAnswers(newShuffled);\n      setSelectedAnswer('');\n    }\n  }, [currentQuestion, isStarted]);\n\n  // «Назад»\n  const handlePrevQuestion = () => {\n    if (currentQuestion > 0) {\n      setCurrentQuestion(prev => prev - 1);\n      // Удалим предыдущий ответ из userAnswers\n      setUserAnswers(prev => prev.slice(0, -1));\n      setSelectedAnswer('');\n    }\n  };\n\n  // «Далее»\n  const handleNextQuestion = () => {\n    if (!selectedAnswer) {\n      setErrorMessage('Выберите один из вариантов');\n      return;\n    }\n    setErrorMessage('');\n    setUserAnswers(prev => [...prev, selectedAnswer]);\n    setFadeTransition(true);\n    setTimeout(() => {\n      if (currentQuestion < questions.length - 1) {\n        setCurrentQuestion(prev => prev + 1);\n      } else {\n        // Если это был последний вопрос\n        handleFinish();\n      }\n      setFadeTransition(false);\n    }, 400);\n  };\n\n  // «Завершить»\n  const handleFinish = async () => {\n    setIsFinished(true);\n    const finalAnswers = [...userAnswers];\n    if (selectedAnswer) {\n      finalAnswers.push(selectedAnswer);\n    }\n    console.log('Ответы пользователя:', finalAnswers);\n\n    // Здесь — отправка на сервер\n    const dataToSave = {\n      surname: surnameValue,\n      firstName: firstNameValue,\n      patronymic: patronymicValue,\n      dateTime: new Date().toISOString(),\n      answers: finalAnswers\n    };\n    try {\n      const response = await fetch('/api/proxy/assessment/candidate/save', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(dataToSave)\n      });\n      if (!response.ok) {\n        console.error('Ошибка при сохранении данных в XLSX');\n      }\n    } catch (error) {\n      console.error('Ошибка при отправке данных:', error);\n    }\n  };\n\n  // ======================\n  // 7) Рендер основного контента (по аналогии с FeedbackPage)\n  // ======================\n  const renderMainContent = () => {\n    if (isFinished) {\n      // Спасибо, опрос завершён\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"\\u0421\\u043F\\u0430\\u0441\\u0438\\u0431\\u043E \\u0437\\u0430 \\u043F\\u0440\\u043E\\u0445\\u043E\\u0436\\u0434\\u0435\\u043D\\u0438\\u0435 \\u043E\\u043F\\u0440\\u043E\\u0441\\u0430, \", firstNameValue, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041C\\u044B \\u0441\\u0432\\u044F\\u0436\\u0435\\u043C\\u0441\\u044F, \\u0435\\u0441\\u043B\\u0438 \\u0432\\u0430\\u0448\\u0438 \\u0432\\u0437\\u0433\\u043B\\u044F\\u0434\\u044B \\u0441\\u043E\\u0432\\u043F\\u0430\\u0434\\u0430\\u044E\\u0442 \\u0441 \\u043D\\u0430\\u0448\\u0438\\u043C\\u0438.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this);\n    } else if (isStarted && currentQuestion < questions.length) {\n      // Показ вопроса\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ap-question-block\",\n        style: {\n          opacity: fadeTransition ? 0 : 1,\n          transition: 'opacity 0.4s'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"ap-question-text\",\n          children: questions[currentQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ap-answers-block\",\n          children: shuffledAnswers.map((answer, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `ap-answer-btn ${selectedAnswer === answer ? 'ap-answer-selected' : ''}`,\n            onClick: () => setSelectedAnswer(answer),\n            children: answer\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ap-error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this);\n    } else {\n      // Форма ввода ФИО (до начала опроса)\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"ap-fio-title\",\n          children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448\\u0438 \\u0424\\u0418\\u041E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ap-error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"ap-name-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ap-input-container autosuggest-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Autosuggest, {\n              suggestions: surnameSuggestions,\n              onSuggestionsFetchRequested: ({\n                value\n              }) => setSurnameSuggestions(getSurnameSuggestions(value)),\n              onSuggestionsClearRequested: () => setSurnameSuggestions([]),\n              getSuggestionValue: s => s,\n              renderSuggestion: s => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: s\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 42\n              }, this),\n              inputProps: surnameInputProps\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ap-input-container autosuggest-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u0418\\u043C\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Autosuggest, {\n              suggestions: firstNameSuggestions,\n              onSuggestionsFetchRequested: ({\n                value\n              }) => setFirstNameSuggestions(getFirstNameSuggestions(value)),\n              onSuggestionsClearRequested: () => setFirstNameSuggestions([]),\n              getSuggestionValue: s => s,\n              renderSuggestion: s => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: s\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 42\n              }, this),\n              inputProps: firstNameInputProps\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ap-input-container autosuggest-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u041E\\u0442\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Autosuggest, {\n              suggestions: patronymicSuggestions,\n              onSuggestionsFetchRequested: ({\n                value\n              }) => setPatronymicSuggestions(getPatronymicSuggestions(value)),\n              onSuggestionsClearRequested: () => setPatronymicSuggestions([]),\n              getSuggestionValue: s => s,\n              renderSuggestion: s => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: s\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 42\n              }, this),\n              inputProps: patronymicInputProps\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  // ======================\n  // Итоговый рендер «по логике FeedbackPage»\n  // ======================\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ap-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ap-logo-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Logo\",\n        className: \"ap-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ap-content-wrapper\",\n      children: [renderMainContent(), !isFinished && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [isStarted && currentQuestion > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ap-back-btn-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ap-back-btn\",\n            onClick: handlePrevQuestion,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              viewBox: \"0 0 24 24\",\n              width: \"24\",\n              height: \"24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M12 20l-8-8 8-8\",\n                fill: \"none\",\n                stroke: \"#fff\",\n                strokeWidth: \"2\",\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ap-top-btn-container\",\n          children: !isStarted ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ap-top-btn\",\n            onClick: handleStart,\n            disabled: !surnameValue || !firstNameValue || !patronymicValue,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              viewBox: \"0 0 24 24\",\n              width: \"24\",\n              height: \"24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M12 4l8 8-8 8\",\n                fill: \"none\",\n                stroke: \"#fff\",\n                strokeWidth: \"2\",\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 17\n          }, this) : currentQuestion < questions.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ap-top-btn\",\n            onClick: handleNextQuestion,\n            disabled: !selectedAnswer,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              viewBox: \"0 0 24 24\",\n              width: \"24\",\n              height: \"24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M12 4l8 8-8 8\",\n                fill: \"none\",\n                stroke: \"#fff\",\n                strokeWidth: \"2\",\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }, this) :\n          /*#__PURE__*/\n          // Если это последний вопрос — «Завершить»\n          _jsxDEV(\"button\", {\n            className: \"ap-top-btn finish-btn\",\n            onClick: handleFinish,\n            disabled: !selectedAnswer,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              viewBox: \"0 0 24 24\",\n              width: \"24\",\n              height: \"24\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M9 16.17L4.83 12l-1.42 1.41L9 19l10-10-1.41-1.41z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n}\n_s(AssessmentPage, \"G6HowM2QwYsMgxh5LALTG3H0dkk=\");\n_c = AssessmentPage;\nexport default AssessmentPage;\nvar _c;\n$RefreshReg$(_c, \"AssessmentPage\");","map":{"version":3,"names":["React","useState","useEffect","Autosuggest","surnames","firstnames","patronymics","backgroundImage","logo","jsxDEV","_jsxDEV","Fragment","_Fragment","AssessmentPage","_s","surnameValue","setSurnameValue","surnameSuggestions","setSurnameSuggestions","surnameList","map","item","male","female","firstNameValue","setFirstNameValue","firstNameSuggestions","setFirstNameSuggestions","firstNameList","firstName","name","patronymicValue","setPatronymicValue","patronymicSuggestions","setPatronymicSuggestions","patronymicList","patronymic","getSurnameSuggestions","value","trimmed","trim","toLowerCase","length","filter","s","startsWith","getFirstNameSuggestions","getPatronymicSuggestions","surnameInputProps","placeholder","onChange","e","newValue","charAt","toUpperCase","slice","autoComplete","firstNameInputProps","patronymicInputProps","isStarted","setIsStarted","errorMessage","setErrorMessage","handleStart","questions","question","answers","currentQuestion","setCurrentQuestion","selectedAnswer","setSelectedAnswer","userAnswers","setUserAnswers","isFinished","setIsFinished","fadeTransition","setFadeTransition","shuffledAnswers","setShuffledAnswers","newShuffled","sort","Math","random","handlePrevQuestion","prev","handleNextQuestion","setTimeout","handleFinish","finalAnswers","push","console","log","dataToSave","surname","dateTime","Date","toISOString","response","fetch","method","headers","body","JSON","stringify","ok","error","renderMainContent","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","opacity","transition","answer","idx","onClick","suggestions","onSuggestionsFetchRequested","onSuggestionsClearRequested","getSuggestionValue","renderSuggestion","inputProps","src","alt","xmlns","viewBox","width","height","d","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","disabled","_c","$RefreshReg$"],"sources":["C:/Users/shapeless/Desktop/miniapp/src/AssessmentPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\n\r\n// Импорт локальных JSON (ФИО)\r\nimport surnames from './components/autosuggest/surname.json';\r\nimport firstnames from './components/autosuggest/firstname.json';\r\nimport patronymics from './components/autosuggest/lastname.json';\r\n\r\n// Фон и логотип\r\nimport backgroundImage from './components/background.png';\r\nimport logo from './components/logo.png';\r\n\r\n// Основные стили\r\nimport './AssessmentPage.css';\r\n\r\nfunction AssessmentPage() {\r\n  // =====================\r\n  // 1) Состояния для ФИО\r\n  // =====================\r\n  const [surnameValue, setSurnameValue] = useState('');\r\n  const [surnameSuggestions, setSurnameSuggestions] = useState([]);\r\n  // В JSON у вас, скорее всего, поле \"male\" или \"female\". Проверяйте точную структуру.\r\n  // Ниже предполагается, что .map(item => item.male || item.female) возвращает строку.\r\n  const surnameList = surnames.map(item => item.male || item.female);\r\n\r\n  const [firstNameValue, setFirstNameValue] = useState('');\r\n  const [firstNameSuggestions, setFirstNameSuggestions] = useState([]);\r\n  const firstNameList = firstnames.map(item =>\r\n    typeof item === 'string' ? item : (item.firstName || item.name)\r\n  );\r\n\r\n  const [patronymicValue, setPatronymicValue] = useState('');\r\n  const [patronymicSuggestions, setPatronymicSuggestions] = useState([]);\r\n  const patronymicList = patronymics.map(item =>\r\n    typeof item === 'string' ? item : (item.patronymic || item.name)\r\n  );\r\n\r\n  // =====================\r\n  // 2) Autosuggest logic\r\n  // =====================\r\n  const getSurnameSuggestions = (value) => {\r\n    const trimmed = value.trim().toLowerCase();\r\n    if (trimmed.length < 2) return [];\r\n    return surnameList.filter(s => s.toLowerCase().startsWith(trimmed));\r\n  };\r\n  const getFirstNameSuggestions = (value) => {\r\n    const trimmed = value.trim().toLowerCase();\r\n    if (trimmed.length < 2) return [];\r\n    return firstNameList.filter(s => s.toLowerCase().startsWith(trimmed));\r\n  };\r\n  const getPatronymicSuggestions = (value) => {\r\n    const trimmed = value.trim().toLowerCase();\r\n    if (trimmed.length < 2) return [];\r\n    return patronymicList.filter(s => s.toLowerCase().startsWith(trimmed));\r\n  };\r\n\r\n  const surnameInputProps = {\r\n    placeholder: 'Введите фамилию',\r\n    value: surnameValue,\r\n    onChange: (e, { newValue }) =>\r\n      setSurnameValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase()),\r\n    autoComplete: 'off'\r\n  };\r\n  const firstNameInputProps = {\r\n    placeholder: 'Введите имя',\r\n    value: firstNameValue,\r\n    onChange: (e, { newValue }) =>\r\n      setFirstNameValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase()),\r\n    autoComplete: 'off'\r\n  };\r\n  const patronymicInputProps = {\r\n    placeholder: 'Введите отчество',\r\n    value: patronymicValue,\r\n    onChange: (e, { newValue }) =>\r\n      setPatronymicValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase()),\r\n    autoComplete: 'off'\r\n  };\r\n\r\n  // ======================\r\n  // 3) Логика начала опроса (ФИО)\r\n  // ======================\r\n  const [isStarted, setIsStarted] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleStart = () => {\r\n    if (!surnameValue.trim() || !firstNameValue.trim() || !patronymicValue.trim()) {\r\n      setErrorMessage('Пожалуйста, заполните все поля.');\r\n      return;\r\n    }\r\n    setErrorMessage('');\r\n    setIsStarted(true);\r\n  };\r\n\r\n  // ======================\r\n  // 4) Вопросы\r\n  // ======================\r\n  const questions = [\r\n    {\r\n      question: \"1. Какой формат работы вам ближе?\",\r\n      answers: [\r\n        \"Когда можно детально разобраться в процессах и построить устойчивую систему\",\r\n        \"Когда задачи достаточно разнообразны и требуют гибкого подхода\",\r\n        \"Когда есть чёткий алгоритм действий и понятный конечный результат\"\r\n      ],\r\n    },\r\n    {\r\n      question: \"2. Если коллега допустил серьёзную ошибку, что для вас логичнее сделать?\",\r\n      answers: [\r\n        \"Понять, что пошло не так, и вместе найти пути исправления\",\r\n        \"В первую очередь скорректировать свои планы с учётом возникших проблем\",\r\n        \"Сделать выводы для себя и минимизировать влияние на мою работу\"\r\n      ],\r\n    },\r\n    // ... остальные вопросы ...\r\n  ];\r\n\r\n  // ======================\r\n  // 5) Логика шагов вопросов\r\n  // ======================\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState('');\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n  const [isFinished, setIsFinished] = useState(false);\r\n\r\n  // Для анимации плавного появления/исчезновения вопроса\r\n  const [fadeTransition, setFadeTransition] = useState(false);\r\n\r\n  // Список ответов «вперемешку» (если нужно случайно перемешивать варианты)\r\n  const [shuffledAnswers, setShuffledAnswers] = useState([]);\r\n\r\n  // При загрузке каждого вопроса — перемешиваем ответы\r\n  useEffect(() => {\r\n    if (isStarted && currentQuestion < questions.length) {\r\n      const newShuffled = [...questions[currentQuestion].answers].sort(() => Math.random() - 0.5);\r\n      setShuffledAnswers(newShuffled);\r\n      setSelectedAnswer('');\r\n    }\r\n  }, [currentQuestion, isStarted]);\r\n\r\n  // «Назад»\r\n  const handlePrevQuestion = () => {\r\n    if (currentQuestion > 0) {\r\n      setCurrentQuestion(prev => prev - 1);\r\n      // Удалим предыдущий ответ из userAnswers\r\n      setUserAnswers(prev => prev.slice(0, -1));\r\n      setSelectedAnswer('');\r\n    }\r\n  };\r\n\r\n  // «Далее»\r\n  const handleNextQuestion = () => {\r\n    if (!selectedAnswer) {\r\n      setErrorMessage('Выберите один из вариантов');\r\n      return;\r\n    }\r\n    setErrorMessage('');\r\n    setUserAnswers(prev => [...prev, selectedAnswer]);\r\n    setFadeTransition(true);\r\n    setTimeout(() => {\r\n      if (currentQuestion < questions.length - 1) {\r\n        setCurrentQuestion(prev => prev + 1);\r\n      } else {\r\n        // Если это был последний вопрос\r\n        handleFinish();\r\n      }\r\n      setFadeTransition(false);\r\n    }, 400);\r\n  };\r\n\r\n  // «Завершить»\r\n  const handleFinish = async () => {\r\n    setIsFinished(true);\r\n    const finalAnswers = [...userAnswers];\r\n    if (selectedAnswer) {\r\n      finalAnswers.push(selectedAnswer);\r\n    }\r\n    console.log('Ответы пользователя:', finalAnswers);\r\n\r\n    // Здесь — отправка на сервер\r\n    const dataToSave = {\r\n      surname: surnameValue,\r\n      firstName: firstNameValue,\r\n      patronymic: patronymicValue,\r\n      dateTime: new Date().toISOString(),\r\n      answers: finalAnswers\r\n    };\r\n    try {\r\n      const response = await fetch('/api/proxy/assessment/candidate/save', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(dataToSave),\r\n      });\r\n      if (!response.ok) {\r\n        console.error('Ошибка при сохранении данных в XLSX');\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при отправке данных:', error);\r\n    }\r\n  };\r\n\r\n  // ======================\r\n  // 7) Рендер основного контента (по аналогии с FeedbackPage)\r\n  // ======================\r\n  const renderMainContent = () => {\r\n    if (isFinished) {\r\n      // Спасибо, опрос завершён\r\n      return (\r\n        <div>\r\n          <h2>Спасибо за прохождение опроса, {firstNameValue}!</h2>\r\n          <p>Мы свяжемся, если ваши взгляды совпадают с нашими.</p>\r\n        </div>\r\n      );\r\n    } else if (isStarted && currentQuestion < questions.length) {\r\n      // Показ вопроса\r\n      return (\r\n        <div\r\n          className=\"ap-question-block\"\r\n          style={{ opacity: fadeTransition ? 0 : 1, transition: 'opacity 0.4s' }}\r\n        >\r\n          <h2 className=\"ap-question-text\">\r\n            {questions[currentQuestion].question}\r\n          </h2>\r\n          <div className=\"ap-answers-block\">\r\n            {shuffledAnswers.map((answer, idx) => (\r\n              <button\r\n                key={idx}\r\n                className={`ap-answer-btn ${selectedAnswer === answer ? 'ap-answer-selected' : ''}`}\r\n                onClick={() => setSelectedAnswer(answer)}\r\n              >\r\n                {answer}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          {errorMessage && <p className=\"ap-error-message\">{errorMessage}</p>}\r\n        </div>\r\n      );\r\n    } else {\r\n      // Форма ввода ФИО (до начала опроса)\r\n      return (\r\n        <div>\r\n          <h2 className=\"ap-fio-title\">Введите ваши ФИО</h2>\r\n          {errorMessage && <p className=\"ap-error-message\">{errorMessage}</p>}\r\n          <form className=\"ap-name-form\">\r\n            <div className=\"ap-input-container autosuggest-container\">\r\n              <label>Фамилия</label>\r\n              <Autosuggest\r\n                suggestions={surnameSuggestions}\r\n                onSuggestionsFetchRequested={({ value }) =>\r\n                  setSurnameSuggestions(getSurnameSuggestions(value))\r\n                }\r\n                onSuggestionsClearRequested={() => setSurnameSuggestions([])}\r\n                getSuggestionValue={(s) => s}\r\n                renderSuggestion={(s) => <div>{s}</div>}\r\n                inputProps={surnameInputProps}\r\n              />\r\n            </div>\r\n            <div className=\"ap-input-container autosuggest-container\">\r\n              <label>Имя</label>\r\n              <Autosuggest\r\n                suggestions={firstNameSuggestions}\r\n                onSuggestionsFetchRequested={({ value }) =>\r\n                  setFirstNameSuggestions(getFirstNameSuggestions(value))\r\n                }\r\n                onSuggestionsClearRequested={() => setFirstNameSuggestions([])}\r\n                getSuggestionValue={(s) => s}\r\n                renderSuggestion={(s) => <div>{s}</div>}\r\n                inputProps={firstNameInputProps}\r\n              />\r\n            </div>\r\n            <div className=\"ap-input-container autosuggest-container\">\r\n              <label>Отчество</label>\r\n              <Autosuggest\r\n                suggestions={patronymicSuggestions}\r\n                onSuggestionsFetchRequested={({ value }) =>\r\n                  setPatronymicSuggestions(getPatronymicSuggestions(value))\r\n                }\r\n                onSuggestionsClearRequested={() => setPatronymicSuggestions([])}\r\n                getSuggestionValue={(s) => s}\r\n                renderSuggestion={(s) => <div>{s}</div>}\r\n                inputProps={patronymicInputProps}\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  // ======================\r\n  // Итоговый рендер «по логике FeedbackPage»\r\n  // ======================\r\n  return (\r\n    <div className=\"ap-container\">\r\n      {/* Логотип — как в FeedbackPage: просто img */}\r\n      <div className=\"ap-logo-container\">\r\n        <img src={logo} alt=\"Logo\" className=\"ap-logo\" />\r\n      </div>\r\n\r\n      {/* Контейнер для всего содержимого (вопросы / форма / кнопки) */}\r\n      <div className=\"ap-content-wrapper\">\r\n        {/* Основная часть (вопрос / форма ФИО / «спасибо») */}\r\n        {renderMainContent()}\r\n\r\n        {/* Кнопки. Показываем их только если НЕ завершено */}\r\n        {!isFinished && (\r\n          <>\r\n            {/* Кнопка \"Назад\" (слева сверху) */}\r\n            {isStarted && currentQuestion > 0 && (\r\n              <div className=\"ap-back-btn-container\">\r\n                <button className=\"ap-back-btn\" onClick={handlePrevQuestion}>\r\n                  {/* Стрелка «Назад» */}\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n                    <path\r\n                      d=\"M12 20l-8-8 8-8\"\r\n                      fill=\"none\"\r\n                      stroke=\"#fff\"\r\n                      strokeWidth=\"2\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            {/* Кнопка \"Далее\" / \"Завершить\" / \"Начать\" (справа сверху) */}\r\n            <div className=\"ap-top-btn-container\">\r\n              {/* Если опрос ещё не начался, показываем кнопку \"Начать\" */}\r\n              {!isStarted ? (\r\n                <button\r\n                  className=\"ap-top-btn\"\r\n                  onClick={handleStart}\r\n                  disabled={!surnameValue || !firstNameValue || !patronymicValue}\r\n                >\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n                    <path\r\n                      d=\"M12 4l8 8-8 8\"\r\n                      fill=\"none\"\r\n                      stroke=\"#fff\"\r\n                      strokeWidth=\"2\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n              ) : currentQuestion < questions.length - 1 ? (\r\n                <button\r\n                  className=\"ap-top-btn\"\r\n                  onClick={handleNextQuestion}\r\n                  disabled={!selectedAnswer}\r\n                >\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n                    <path\r\n                      d=\"M12 4l8 8-8 8\"\r\n                      fill=\"none\"\r\n                      stroke=\"#fff\"\r\n                      strokeWidth=\"2\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n              ) : (\r\n                // Если это последний вопрос — «Завершить»\r\n                <button\r\n                  className=\"ap-top-btn finish-btn\"\r\n                  onClick={handleFinish}\r\n                  disabled={!selectedAnswer}\r\n                >\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" fill=\"currentColor\">\r\n                    <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19l10-10-1.41-1.41z\" />\r\n                  </svg>\r\n                </button>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AssessmentPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}