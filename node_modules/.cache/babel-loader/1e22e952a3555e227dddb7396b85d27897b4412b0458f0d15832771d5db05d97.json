{"ast":null,"code":"import React,{useState,useEffect}from'react';import io from'socket.io-client';import backgroundImage from'./components/background.png';import logo from'./components/logo.png';import'./MarzaPollPage.css';// Укажите URL вашего Flask‑сервера (например, через ngrok или домен)\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const socket=io('https://your-server-domain-or-ngrok-url:5000');const MarzaPollPage=()=>{const pollQuestion=\"Зачем продавать маржа?\";const initialOptions=[{text:\"Чтобы отстал руководитель\",votes:0},{text:\"Чтобы перевыполнить план и заработать много деняк\",votes:0},{text:\"Чтобы победить в конкурсе и полетать на самолёте\",votes:0},{text:\"Чтобы клиент меня любил сильнее, чем маму\",votes:0},{text:\"Какого ещё маржа? Я не в курсе\",votes:0}];const[options,setOptions]=useState(initialOptions);const[selectedIndex,setSelectedIndex]=useState(null);const[isSubmitted,setIsSubmitted]=useState(false);// Подключаемся к серверу и получаем обновления результатов\nuseEffect(()=>{socket.on('pollResults',results=>{setOptions(results);});// Получаем начальные данные при подключении\nfetch('https://your-server-domain-or-ngrok-url:5000/api/poll').then(response=>response.json()).then(data=>setOptions(data));return()=>{socket.off('pollResults');};},[]);const totalVotes=options.reduce((sum,o)=>sum+o.votes,0);const handleOptionSelect=index=>{setSelectedIndex(index);};const handleSubmit=()=>{if(selectedIndex===null)return;// Отправляем голос на сервер\nfetch('https://your-server-domain-or-ngrok-url:5000/api/poll/vote',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({index:selectedIndex})}).then(response=>response.json()).then(data=>{if(data.success){setIsSubmitted(true);}}).catch(err=>console.error(err));};return/*#__PURE__*/_jsxs(\"div\",{className:\"marza-container\",style:{backgroundImage:`url(${backgroundImage})`},children:[/*#__PURE__*/_jsx(\"div\",{className:\"marza-logo-container\",children:/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"Logo\",className:\"marza-logo\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"marza-content-wrapper\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"marza-title\",children:pollQuestion}),!isSubmitted?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"marza-options\",children:options.map((option,idx)=>/*#__PURE__*/_jsxs(\"label\",{className:\"marza-option-label\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"marzaPoll\",value:idx,checked:selectedIndex===idx,onChange:()=>handleOptionSelect(idx)}),/*#__PURE__*/_jsx(\"span\",{className:\"marza-option-text\",children:option.text})]},idx))}),/*#__PURE__*/_jsx(\"button\",{className:\"marza-submit-btn\",onClick:handleSubmit,disabled:selectedIndex===null,children:\"\\u0414\\u0430\\u043B\\u0435\\u0435\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"marza-results\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"marza-results-title\",children:\"\\u0420\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\\u044B:\"}),options.map((option,idx)=>{const percent=totalVotes>0?option.votes/totalVotes*100:0;return/*#__PURE__*/_jsxs(\"div\",{className:\"marza-result-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"marza-result-text\",children:[option.text,\" \\u2014 \",option.votes,\" \\u0433\\u043E\\u043B\\u043E\\u0441(\\u043E\\u0432)\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"marza-progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"marza-progress-bar-filled\",style:{width:`${percent}%`}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"marza-result-percent\",children:[percent.toFixed(1),\"%\"]})]},idx);}),/*#__PURE__*/_jsxs(\"p\",{className:\"marza-total-votes\",children:[\"\\u0412\\u0441\\u0435\\u0433\\u043E \\u0433\\u043E\\u043B\\u043E\\u0441\\u043E\\u0432: \",totalVotes]})]})]})]});};export default MarzaPollPage;","map":{"version":3,"names":["React","useState","useEffect","io","backgroundImage","logo","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","socket","MarzaPollPage","pollQuestion","initialOptions","text","votes","options","setOptions","selectedIndex","setSelectedIndex","isSubmitted","setIsSubmitted","on","results","fetch","then","response","json","data","off","totalVotes","reduce","sum","o","handleOptionSelect","index","handleSubmit","method","headers","body","JSON","stringify","success","catch","err","console","error","className","style","children","src","alt","map","option","idx","type","name","value","checked","onChange","onClick","disabled","percent","width","toFixed"],"sources":["C:/Users/shapeless/Desktop/miniapp/src/MarzaPollPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport backgroundImage from './components/background.png';\r\nimport logo from './components/logo.png';\r\nimport './MarzaPollPage.css';\r\n\r\n// Укажите URL вашего Flask‑сервера (например, через ngrok или домен)\r\nconst socket = io('https://your-server-domain-or-ngrok-url:5000');\r\n\r\nconst MarzaPollPage = () => {\r\n  const pollQuestion = \"Зачем продавать маржа?\";\r\n  const initialOptions = [\r\n    { text: \"Чтобы отстал руководитель\", votes: 0 },\r\n    { text: \"Чтобы перевыполнить план и заработать много деняк\", votes: 0 },\r\n    { text: \"Чтобы победить в конкурсе и полетать на самолёте\", votes: 0 },\r\n    { text: \"Чтобы клиент меня любил сильнее, чем маму\", votes: 0 },\r\n    { text: \"Какого ещё маржа? Я не в курсе\", votes: 0 }\r\n  ];\r\n\r\n  const [options, setOptions] = useState(initialOptions);\r\n  const [selectedIndex, setSelectedIndex] = useState(null);\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  // Подключаемся к серверу и получаем обновления результатов\r\n  useEffect(() => {\r\n    socket.on('pollResults', (results) => {\r\n      setOptions(results);\r\n    });\r\n    // Получаем начальные данные при подключении\r\n    fetch('https://your-server-domain-or-ngrok-url:5000/api/poll')\r\n      .then(response => response.json())\r\n      .then(data => setOptions(data));\r\n    return () => {\r\n      socket.off('pollResults');\r\n    };\r\n  }, []);\r\n\r\n  const totalVotes = options.reduce((sum, o) => sum + o.votes, 0);\r\n\r\n  const handleOptionSelect = (index) => {\r\n    setSelectedIndex(index);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (selectedIndex === null) return;\r\n    // Отправляем голос на сервер\r\n    fetch('https://your-server-domain-or-ngrok-url:5000/api/poll/vote', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ index: selectedIndex })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data.success) {\r\n          setIsSubmitted(true);\r\n        }\r\n      })\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  return (\r\n    <div className=\"marza-container\" style={{ backgroundImage: `url(${backgroundImage})` }}>\r\n      <div className=\"marza-logo-container\">\r\n        <img src={logo} alt=\"Logo\" className=\"marza-logo\" />\r\n      </div>\r\n      <div className=\"marza-content-wrapper\">\r\n        <h2 className=\"marza-title\">{pollQuestion}</h2>\r\n        {!isSubmitted ? (\r\n          <>\r\n            <div className=\"marza-options\">\r\n              {options.map((option, idx) => (\r\n                <label key={idx} className=\"marza-option-label\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"marzaPoll\"\r\n                    value={idx}\r\n                    checked={selectedIndex === idx}\r\n                    onChange={() => handleOptionSelect(idx)}\r\n                  />\r\n                  <span className=\"marza-option-text\">{option.text}</span>\r\n                </label>\r\n              ))}\r\n            </div>\r\n            <button className=\"marza-submit-btn\" onClick={handleSubmit} disabled={selectedIndex === null}>\r\n              Далее\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <div className=\"marza-results\">\r\n            <h3 className=\"marza-results-title\">Результаты:</h3>\r\n            {options.map((option, idx) => {\r\n              const percent = totalVotes > 0 ? (option.votes / totalVotes) * 100 : 0;\r\n              return (\r\n                <div key={idx} className=\"marza-result-row\">\r\n                  <div className=\"marza-result-text\">\r\n                    {option.text} — {option.votes} голос(ов)\r\n                  </div>\r\n                  <div className=\"marza-progress-bar\">\r\n                    <div\r\n                      className=\"marza-progress-bar-filled\"\r\n                      style={{ width: `${percent}%` }}\r\n                    ></div>\r\n                  </div>\r\n                  <div className=\"marza-result-percent\">\r\n                    {percent.toFixed(1)}%\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n            <p className=\"marza-total-votes\">Всего голосов: {totalVotes}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarzaPollPage;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}