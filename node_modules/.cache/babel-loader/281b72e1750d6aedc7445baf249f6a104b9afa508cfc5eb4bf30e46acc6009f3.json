{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shapeless\\\\Desktop\\\\miniapp\\\\src\\\\MarzaPollPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport backgroundImage from './components/background.png';\nimport logo from './components/logo.png';\nimport './MarzaPollPage.css';\n\n// Используйте один и тот же домен/порт для всех запросов\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = 'https://rgszh-miniapp.org';\n\n// Подключаем socket.io к серверу\nconst socket = io(SERVER_URL);\nconst MarzaPollPage = () => {\n  _s();\n  const pollQuestion = \"Зачем продавать маржа?\";\n  const initialOptions = [{\n    text: \"Чтобы отстал руководитель\",\n    votes: 0\n  }, {\n    text: \"Чтобы перевыполнить план и заработать много деняк\",\n    votes: 0\n  }, {\n    text: \"Чтобы победить в конкурсе и полетать на самолёте\",\n    votes: 0\n  }, {\n    text: \"Чтобы клиент меня любил сильнее, чем маму\",\n    votes: 0\n  }, {\n    text: \"Какого ещё маржа? Я не в курсе\",\n    votes: 0\n  }];\n  const [options, setOptions] = useState(initialOptions);\n  const [selectedIndex, setSelectedIndex] = useState(null);\n  // Флаг, чтобы запретить повторное голосование\n  const [isVoted, setIsVoted] = useState(false);\n\n  // Подключаемся к серверу и получаем обновления результатов опроса\n  useEffect(() => {\n    socket.on('pollResults', results => {\n      setOptions(results);\n    });\n    // Получаем начальные данные опроса\n    fetch(`${SERVER_URL}/api/poll`).then(response => response.json()).then(data => setOptions(data)).catch(err => console.error(err));\n    return () => {\n      socket.off('pollResults');\n    };\n  }, []);\n  const totalVotes = options.reduce((sum, option) => sum + option.votes, 0);\n\n  // При выборе варианта сразу отправляем голос на сервер\n  const handleOptionSelect = index => {\n    if (isVoted) return;\n    setSelectedIndex(index);\n    fetch(`${SERVER_URL}/api/poll/vote`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        index\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.success) {\n        setIsVoted(true);\n      }\n    }).catch(err => console.error(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"marza-container\",\n    style: {\n      backgroundImage: `url(${backgroundImage})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"marza-logo-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Logo\",\n        className: \"marza-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"marza-content-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"marza-poll-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"marza-title\",\n          children: pollQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"marza-progress-bar-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"marza-progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"marza-progress-bar-filled\",\n              style: {\n                width: `${totalVotes > 0 ? 100 : 0}%`\n              } // можно задать 100%, если хотите показывать общий прогресс\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"marza-progress-counter\",\n            children: totalVotes > 0 ? `Всего голосов: ${totalVotes}` : 'Нет голосов'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), !isVoted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"marza-options\",\n        children: options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"marza-option-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"marzaPoll\",\n            value: idx,\n            checked: selectedIndex === idx,\n            onChange: () => handleOptionSelect(idx)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"marza-option-text\",\n            children: option.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"marza-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"marza-results-title\",\n          children: \"\\u0420\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\\u044B:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), options.map((option, idx) => {\n          const percent = totalVotes > 0 ? option.votes / totalVotes * 100 : 0;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"marza-result-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"marza-result-text\",\n              children: [option.text, \" \\u2014 \", option.votes, \" \\u0433\\u043E\\u043B\\u043E\\u0441(\\u043E\\u0432)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"marza-progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"marza-progress-bar-filled\",\n                style: {\n                  width: `${percent}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"marza-result-percent\",\n              children: [percent.toFixed(1), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(MarzaPollPage, \"gjOYVts1cipOIcVF0+r8dEtTgxI=\");\n_c = MarzaPollPage;\nexport default MarzaPollPage;\nvar _c;\n$RefreshReg$(_c, \"MarzaPollPage\");","map":{"version":3,"names":["React","useState","useEffect","io","backgroundImage","logo","jsxDEV","_jsxDEV","SERVER_URL","socket","MarzaPollPage","_s","pollQuestion","initialOptions","text","votes","options","setOptions","selectedIndex","setSelectedIndex","isVoted","setIsVoted","on","results","fetch","then","response","json","data","catch","err","console","error","off","totalVotes","reduce","sum","option","handleOptionSelect","index","method","headers","body","JSON","stringify","success","className","style","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","width","map","idx","type","name","value","checked","onChange","percent","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/shapeless/Desktop/miniapp/src/MarzaPollPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport backgroundImage from './components/background.png';\r\nimport logo from './components/logo.png';\r\nimport './MarzaPollPage.css';\r\n\r\n// Используйте один и тот же домен/порт для всех запросов\r\nconst SERVER_URL = 'https://rgszh-miniapp.org';\r\n\r\n// Подключаем socket.io к серверу\r\nconst socket = io(SERVER_URL);\r\n\r\nconst MarzaPollPage = () => {\r\n  const pollQuestion = \"Зачем продавать маржа?\";\r\n  const initialOptions = [\r\n    { text: \"Чтобы отстал руководитель\", votes: 0 },\r\n    { text: \"Чтобы перевыполнить план и заработать много деняк\", votes: 0 },\r\n    { text: \"Чтобы победить в конкурсе и полетать на самолёте\", votes: 0 },\r\n    { text: \"Чтобы клиент меня любил сильнее, чем маму\", votes: 0 },\r\n    { text: \"Какого ещё маржа? Я не в курсе\", votes: 0 }\r\n  ];\r\n\r\n  const [options, setOptions] = useState(initialOptions);\r\n  const [selectedIndex, setSelectedIndex] = useState(null);\r\n  // Флаг, чтобы запретить повторное голосование\r\n  const [isVoted, setIsVoted] = useState(false);\r\n\r\n  // Подключаемся к серверу и получаем обновления результатов опроса\r\n  useEffect(() => {\r\n    socket.on('pollResults', (results) => {\r\n      setOptions(results);\r\n    });\r\n    // Получаем начальные данные опроса\r\n    fetch(`${SERVER_URL}/api/poll`)\r\n      .then(response => response.json())\r\n      .then(data => setOptions(data))\r\n      .catch(err => console.error(err));\r\n    return () => {\r\n      socket.off('pollResults');\r\n    };\r\n  }, []);\r\n\r\n  const totalVotes = options.reduce((sum, option) => sum + option.votes, 0);\r\n\r\n  // При выборе варианта сразу отправляем голос на сервер\r\n  const handleOptionSelect = (index) => {\r\n    if (isVoted) return;\r\n    setSelectedIndex(index);\r\n    fetch(`${SERVER_URL}/api/poll/vote`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ index })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data.success) {\r\n          setIsVoted(true);\r\n        }\r\n      })\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  return (\r\n    <div className=\"marza-container\" style={{ backgroundImage: `url(${backgroundImage})` }}>\r\n      <div className=\"marza-logo-container\">\r\n        <img src={logo} alt=\"Logo\" className=\"marza-logo\" />\r\n      </div>\r\n      <div className=\"marza-content-wrapper\">\r\n        {/* Обёртка для заголовка и прогресс-бара */}\r\n        <div className=\"marza-poll-wrapper\">\r\n          <h2 className=\"marza-title\">{pollQuestion}</h2>\r\n          {/* Прогресс-бар, который будет обновляться в режиме реального времени */}\r\n          <div className=\"marza-progress-bar-container\">\r\n            <div className=\"marza-progress-bar\">\r\n              <div\r\n                className=\"marza-progress-bar-filled\"\r\n                style={{ width: `${totalVotes > 0 ? 100 : 0}%` }} // можно задать 100%, если хотите показывать общий прогресс\r\n              ></div>\r\n            </div>\r\n            <div className=\"marza-progress-counter\">\r\n              {totalVotes > 0 ? `Всего голосов: ${totalVotes}` : 'Нет голосов'}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Если голос не отдан – показываем варианты опроса, иначе – результаты */}\r\n        {!isVoted ? (\r\n          <div className=\"marza-options\">\r\n            {options.map((option, idx) => (\r\n              <label key={idx} className=\"marza-option-label\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"marzaPoll\"\r\n                  value={idx}\r\n                  checked={selectedIndex === idx}\r\n                  onChange={() => handleOptionSelect(idx)}\r\n                />\r\n                <span className=\"marza-option-text\">{option.text}</span>\r\n              </label>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"marza-results\">\r\n            <h3 className=\"marza-results-title\">Результаты:</h3>\r\n            {options.map((option, idx) => {\r\n              const percent = totalVotes > 0 ? (option.votes / totalVotes) * 100 : 0;\r\n              return (\r\n                <div key={idx} className=\"marza-result-row\">\r\n                  <div className=\"marza-result-text\">\r\n                    {option.text} — {option.votes} голос(ов)\r\n                  </div>\r\n                  <div className=\"marza-progress-bar\">\r\n                    <div\r\n                      className=\"marza-progress-bar-filled\"\r\n                      style={{ width: `${percent}%` }}\r\n                    ></div>\r\n                  </div>\r\n                  <div className=\"marza-result-percent\">\r\n                    {percent.toFixed(1)}%\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarzaPollPage;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}