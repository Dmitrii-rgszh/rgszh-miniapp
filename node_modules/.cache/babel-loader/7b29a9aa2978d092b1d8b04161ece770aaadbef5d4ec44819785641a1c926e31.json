{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import'./EmailInputPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EmailInputPage=()=>{const[email,setEmail]=useState('');const[status,setStatus]=useState('');const navigate=useNavigate();const handleEmailChange=e=>setEmail(e.target.value);const handleCheckEmail=async()=>{setStatus('Проверка e-mail...');try{// Отправляем e-mail на сервер для проверки и генерации кода\nconst response=await fetch('/api/proxy/check-email',{method:'POST',body:JSON.stringify({email}),headers:{'Content-Type':'application/json'}});const result=await response.json();if(result.success){// Переходим на страницу ввода кода и передаём e-mail, а также уровень (если понадобится)\nnavigate('/enter-code',{state:{email,accessLevel:result.accessLevel}});}else{setStatus(result.message);}}catch(error){setStatus('Ошибка при проверке e-mail.');console.error(error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 e-mail\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"E-mail\",value:email,onChange:handleEmailChange}),/*#__PURE__*/_jsx(\"button\",{onClick:handleCheckEmail,disabled:!email,children:\"\\u041F\\u0440\\u043E\\u0432\\u0435\\u0440\\u0438\\u0442\\u044C e-mail\"}),/*#__PURE__*/_jsx(\"p\",{children:status})]});};export default EmailInputPage;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","EmailInputPage","email","setEmail","status","setStatus","navigate","handleEmailChange","e","target","value","handleCheckEmail","response","fetch","method","body","JSON","stringify","headers","result","json","success","state","accessLevel","message","error","console","className","children","type","placeholder","onChange","onClick","disabled"],"sources":["C:/Users/shapeless/Desktop/miniapp/src/EmailInputPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './EmailInputPage.css';\r\n\r\nconst EmailInputPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleEmailChange = (e) => setEmail(e.target.value);\r\n\r\n  const handleCheckEmail = async () => {\r\n    setStatus('Проверка e-mail...');\r\n    try {\r\n      // Отправляем e-mail на сервер для проверки и генерации кода\r\n      const response = await fetch('/api/proxy/check-email', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ email }),\r\n        headers: { 'Content-Type': 'application/json' },\r\n      });\r\n      const result = await response.json();\r\n\r\n      if (result.success) {\r\n        // Переходим на страницу ввода кода и передаём e-mail, а также уровень (если понадобится)\r\n        navigate('/enter-code', { state: { email, accessLevel: result.accessLevel } });\r\n      } else {\r\n        setStatus(result.message);\r\n      }\r\n    } catch (error) {\r\n      setStatus('Ошибка при проверке e-mail.');\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Введите ваш e-mail</h2>\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"E-mail\"\r\n        value={email}\r\n        onChange={handleEmailChange}\r\n      />\r\n      <button onClick={handleCheckEmail} disabled={!email}>\r\n        Проверить e-mail\r\n      </button>\r\n      <p>{status}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailInputPage;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE9B,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACS,MAAM,CAAEC,SAAS,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAAAW,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAW,iBAAiB,CAAIC,CAAC,EAAKL,QAAQ,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAEzD,KAAM,CAAAC,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnCN,SAAS,CAAC,oBAAoB,CAAC,CAC/B,GAAI,CACF;AACA,KAAM,CAAAO,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,wBAAwB,CAAE,CACrDC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEf,KAAM,CAAC,CAAC,CAC/BgB,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAChD,CAAC,CAAC,CACF,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAEpC,GAAID,MAAM,CAACE,OAAO,CAAE,CAClB;AACAf,QAAQ,CAAC,aAAa,CAAE,CAAEgB,KAAK,CAAE,CAAEpB,KAAK,CAAEqB,WAAW,CAAEJ,MAAM,CAACI,WAAY,CAAE,CAAC,CAAC,CAChF,CAAC,IAAM,CACLlB,SAAS,CAACc,MAAM,CAACK,OAAO,CAAC,CAC3B,CACF,CAAE,MAAOC,KAAK,CAAE,CACdpB,SAAS,CAAC,6BAA6B,CAAC,CACxCqB,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CACtB,CACF,CAAC,CAED,mBACEzB,KAAA,QAAK2B,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxB9B,IAAA,OAAA8B,QAAA,CAAI,sEAAkB,CAAI,CAAC,cAC3B9B,IAAA,UACE+B,IAAI,CAAC,OAAO,CACZC,WAAW,CAAC,QAAQ,CACpBpB,KAAK,CAAER,KAAM,CACb6B,QAAQ,CAAExB,iBAAkB,CAC7B,CAAC,cACFT,IAAA,WAAQkC,OAAO,CAAErB,gBAAiB,CAACsB,QAAQ,CAAE,CAAC/B,KAAM,CAAA0B,QAAA,CAAC,+DAErD,CAAQ,CAAC,cACT9B,IAAA,MAAA8B,QAAA,CAAIxB,MAAM,CAAI,CAAC,EACZ,CAAC,CAEV,CAAC,CAED,cAAe,CAAAH,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}