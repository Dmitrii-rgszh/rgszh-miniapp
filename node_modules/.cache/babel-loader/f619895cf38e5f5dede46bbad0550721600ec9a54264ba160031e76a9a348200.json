{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shapeless\\\\Desktop\\\\miniapp\\\\src\\\\AssessmentPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport logo from './components/logo.png';\nimport surnames from './components/autosuggest/surname.json';\nimport firstnames from './components/autosuggest/firstname.json';\nimport patronymics from './components/autosuggest/lastname.json';\nimport './AssessmentPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AssessmentPage() {\n  _s();\n  /*** Фамилия ***/\n  const [surnameValue, setSurnameValue] = useState('');\n  const [surnameSuggestions, setSurnameSuggestions] = useState([]);\n  const surnameList = surnames.map(item => item.male || item.female);\n  const getSurnameSuggestions = value => {\n    const trimmed = value.trim().toLowerCase();\n    if (trimmed.length < 2) return [];\n    return surnameList.filter(s => s.toLowerCase().includes(trimmed));\n  };\n  const onSurnameChange = (event, {\n    newValue\n  }) => {\n    setSurnameValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase());\n  };\n  const onSurnameSuggestionsFetchRequested = ({\n    value\n  }) => {\n    setSurnameSuggestions(getSurnameSuggestions(value));\n  };\n  const onSurnameSuggestionsClearRequested = () => {\n    setSurnameSuggestions([]);\n  };\n  const surnameInputProps = {\n    placeholder: 'Введите фамилию',\n    value: surnameValue,\n    onChange: onSurnameChange,\n    onFocus: () => setSurnameSuggestions([]),\n    required: true,\n    autoComplete: 'off'\n  };\n\n  /*** Имя ***/\n  const [firstNameValue, setFirstNameValue] = useState('');\n  const [firstNameSuggestions, setFirstNameSuggestions] = useState([]);\n  const firstNameList = firstnames.map(item => typeof item === 'string' ? item : item.firstName || item.name);\n  const getFirstNameSuggestions = value => {\n    const trimmed = value.trim().toLowerCase();\n    if (trimmed.length < 2) return [];\n    return firstNameList.filter(s => s.toLowerCase().includes(trimmed));\n  };\n  const onFirstNameChange = (event, {\n    newValue\n  }) => {\n    setFirstNameValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase());\n  };\n  const onFirstNameSuggestionsFetchRequested = ({\n    value\n  }) => {\n    setFirstNameSuggestions(getFirstNameSuggestions(value));\n  };\n  const onFirstNameSuggestionsClearRequested = () => {\n    setFirstNameSuggestions([]);\n  };\n  const firstNameInputProps = {\n    placeholder: 'Введите имя',\n    value: firstNameValue,\n    onChange: onFirstNameChange,\n    onFocus: () => setFirstNameSuggestions([]),\n    required: true,\n    autoComplete: 'off'\n  };\n\n  /*** Отчество ***/\n  const [patronymicValue, setPatronymicValue] = useState('');\n  const [patronymicSuggestions, setPatronymicSuggestions] = useState([]);\n  const patronymicList = patronymics.map(item => typeof item === 'string' ? item : item.patronymic || item.name);\n  const getPatronymicSuggestions = value => {\n    const trimmed = value.trim().toLowerCase();\n    if (trimmed.length < 2) return [];\n    return patronymicList.filter(s => s.toLowerCase().includes(trimmed));\n  };\n  const onPatronymicChange = (event, {\n    newValue\n  }) => {\n    setPatronymicValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase());\n  };\n  const onPatronymicSuggestionsFetchRequested = ({\n    value\n  }) => {\n    setPatronymicSuggestions(getPatronymicSuggestions(value));\n  };\n  const onPatronymicSuggestionsClearRequested = () => {\n    setPatronymicSuggestions([]);\n  };\n  const patronymicInputProps = {\n    placeholder: 'Введите отчество',\n    value: patronymicValue,\n    onChange: onPatronymicChange,\n    onFocus: () => setPatronymicSuggestions([]),\n    required: true,\n    autoComplete: 'off'\n  };\n\n  /*** Опрос ***/\n  const [isStarted, setIsStarted] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [isFinished, setIsFinished] = useState(false);\n  const [shuffledAnswers, setShuffledAnswers] = useState([]);\n\n  // Массив вопросов\n  const questions = [{\n    question: 'Какой формат работы вам ближе?',\n    answers: ['Когда можно детально разобраться в процессах и построить устойчивую систему', 'Когда задачи достаточно разнообразны и требуют гибкого подхода', 'Когда есть чёткий алгоритм действий и понятный конечный результат']\n  }, {\n    question: 'Если коллега допустил серьёзную ошибку, что для вас логичнее сделать?',\n    answers: ['Понять, что пошло не так, и вместе найти пути исправления', 'В первую очередь скорректировать свои планы с учётом возникших проблем', 'Сделать выводы для себя и минимизировать влияние на мою работу']\n  }, {\n    question: 'В команде нарастает напряжение, которое влияет на общий процесс. Как вы реагируете?',\n    answers: ['Стараюсь выяснить причину и предложить возможные решения, учитывая интересы всех', 'Наблюдаю за развитием ситуации и при необходимости высказываю своё мнение', 'Предпочитаю не вовлекаться, если это напрямую не затрагивает мою зону ответственности']\n  }, {\n    question: 'Как относитесь к комментариям по вашей работе?',\n    answers: ['Считаю их возможностью для развития, если они аргументированы', 'Выслушиваю, но меняю подход только при реальной необходимости', 'Если работа выполнена по стандартам, дополнительные замечания не критичны']\n  }, {\n    question: 'Клиент или партнер выражает недовольство результатом. Как поступаете?',\n    answers: ['Пытаюсь понять, где возникли расхождения, и найти приемлемое решение', 'Сначала оцениваю обоснованность претензий, при необходимости уточняю детали', 'Если всё сделано согласно договорённостям, считаю, что моя задача выполнена']\n  }, {\n    question: 'Какой рабочий стиль для вас комфортнее?',\n    answers: ['Выстраивать системные процессы, учитывая интересы всех сторон надолго вперёд', 'Следовать намеченному плану, при необходимости поддерживая взаимодействие', 'Сосредотачиваться на своих задачах, минимизируя отвлечения на внешние факторы']\n  }, {\n    question: 'Как вы относитесь к идее поддерживать контакт с бывшими клиентами или коллегами, чтобы в будущем возможно было сотрудничество?',\n    answers: ['Считаю это важным для выстраивания долгосрочных отношений', 'Можно поддерживать связь, если в этом есть очевидная практическая выгода', 'Предпочитаю фокусироваться на текущих проектах, не распыляясь на прошлое']\n  }, {\n    question: 'Если приходится выбирать между краткосрочной выгодой и построением долгосрочных отношений, что окажется важнее?',\n    answers: ['Долгосрочная перспектива, даже если сейчас придётся чем-то пожертвовать', 'Зависит от ситуации — оцениваю риски, возможности и совокупную пользу', 'Скорее выберу краткосрочную выгоду, ведь будущее сложно прогнозировать']\n  }, {\n    question: 'Насколько вы готовы вкладываться в общее развитие и успехи команды?',\n    answers: ['Считаю важным делиться опытом, помогать коллегам и укреплять общий результат', 'Поддерживаю такие инициативы, если они не мешают моей продуктивности', 'Сосредотачиваюсь на своей зоне ответственности, дополнительные усилия — опциональны']\n  }, {\n    question: 'Как относитесь к идее регулярных встреч или мозговых штурмов с коллегами для совершенствования общего процесса?',\n    answers: ['Считаю это ценным инструментом для укрепления взаимопонимания и улучшения результата', 'Участвую, если уверен(а), что это оправданно и не перегружает рабочее время', 'Предпочитаю решать задачи в индивидуальном порядке, без лишних обсуждений']\n  }, {\n    question: 'Как относитесь к повышению квалификации?',\n    answers: ['Постоянно осваиваю новые инструменты и технологии, чтобы быть в курсе трендов', 'Изучаю что-то новое, когда это действительно нужно для выполнения задач', 'Считаю, что уже имеющихся знаний обычно достаточно для базовых процессов']\n  }, {\n    question: 'Как реагируете, когда сталкиваетесь с незнакомой задачей?',\n    answers: ['С радостью вижу шанс изучить новую область и расширить компетенции', 'Изучаю столько, сколько требуется, чтобы качественно решить задачу', 'Предпочитаю применять проверенные методы, если они дают нужный результат']\n  }, {\n    question: 'Как относитесь к обмену знаниями в команде?',\n    answers: ['Считаю, что это взаимовыгодный процесс: чем больше делимся, тем сильнее команда', 'Готов(а) поделиться опытом, если вижу, что это действительно кому-то полезно', 'Каждый занимается своей областью, делиться или нет — решение сугубо личное']\n  }, {\n    question: 'Что делаете, если замечаете, что используемый процесс устарел?',\n    answers: ['Изучаю, как его можно обновить, и вношу конкретные предложения', 'Предлагаю альтернативы, если вижу в этом реальную пользу', 'Если процесс пока работает, значит, радикальные изменения не обязательны']\n  }, {\n    question: 'Насколько важно для вас идти в ногу с новыми трендами в своей сфере?',\n    answers: ['Постоянно ищу и пробую инновационные подходы, слежу за профессиональными сообществами', 'Изучаю новинки по мере необходимости, когда они могут пригодиться в работе', 'Ориентируюсь в основном на проверенные временем технологии']\n  }, {\n    question: 'Как подходите к решению сложных задач?',\n    answers: ['Стараюсь рассмотреть задачу под разными углами и привлекаю экспертов при необходимости', 'Опираюсь на имеющиеся знания, обращаясь за поддержкой только если это действительно нужно', 'Использую знакомые шаблоны, которые уже доказали свою эффективность']\n  }, {\n    question: 'Как относитесь к критическому анализу своих профессиональных методов?',\n    answers: ['Считаю, что это естественный путь к росту экспертизы и поиску новых решений', 'Прислушиваюсь, если замечания выглядят обоснованными и практичными', 'Если метод работает, то лишний анализ может только замедлить процесс']\n  }, {\n    question: 'Какой тип задач для вас наиболее интересен?',\n    answers: ['Когда можно глубоко вникнуть и довести методику до высокого уровня', 'Когда нужно сочетать проверенные подходы и что-то новое', 'Когда есть чёткая инструкция и предсказуемый результат, без лишнего эксперимента']\n  }, {\n    question: 'Как оцениваете качество выполненной работы?',\n    answers: ['Если результат заметно превосходит обычные ожидания и удивляет заказчика/коллег', 'Если всё сделано надёжно, в срок и соответствует ключевым целям', 'Если задача решена строго по заданным критериям и нет существенных нареканий']\n  }, {\n    question: 'Как относитесь к инициативе, выходящей за рамки поставленных задач?',\n    answers: ['Часто предлагаю идеи, которые могут сделать итог действительно впечатляющим', 'Высказываю предложения, когда вижу, что это принесёт реальную пользу', 'Предпочитаю не выходить за рамки инструкции, чтобы не рисковать понапрасну']\n  }, {\n    question: 'Как воспринимаете нестандартные решения?',\n    answers: ['Это шанс получить новый опыт и порадовать команду или клиентов', 'Готов(а) их рассмотреть, если они оправданы и не слишком рискованны', 'Предпочитаю проверенные пути, чтобы избежать лишних экспериментов']\n  }, {\n    question: 'Какую обратную связь по работе вам приятнее всего получать?',\n    answers: ['Когда говорят, что всё получилось даже лучше, чем ожидали', 'Когда отмечают аккуратное, качественное выполнение без ошибок', 'Когда просто подтверждают, что всё соответствует заранее установленным требованиям']\n  }, {\n    question: 'Если видите возможность улучшить процесс, что делаете?',\n    answers: ['Инициирую изменения, стремясь поднять планку качества и удивить результатом', 'Оцениваю плюсы и минусы, предлагаю улучшения, если они действительно востребованы', 'Если текущая схема работает стабильно, глобальных перемен обычно не вношу']\n  }, {\n    question: 'Как относитесь к деталям в работе?',\n    answers: ['Считаю, что именно нюансы придают результату яркость и особое качество', 'Уделяю им внимание, когда это влияет на общее впечатление и удовлетворённость клиентов', 'Главная цель — выполнить работу по основным критериям, не вдаваясь в мелочи']\n  }, {\n    question: 'Как воспринимаете конечных пользователей или клиентов вашей работы?',\n    answers: ['Стараюсь удивить их качеством и оригинальностью, чтобы оставить сильное впечатление', 'Важно, чтобы они получили то, что нужно, и остались довольны', 'Главное — соответствие техническим требованиям и срокам, без лишних нюансов']\n  }];\n  useEffect(() => {\n    if (isStarted) {\n      shuffleAnswers();\n    }\n  }, [currentQuestion, isStarted]);\n  const shuffleAnswers = () => {\n    const shuffled = [...questions[currentQuestion].answers].sort(() => Math.random() - 0.5);\n    setShuffledAnswers(shuffled);\n  };\n  const handleNext = () => {\n    if (!selectedAnswer) {\n      setErrorMessage('Выберите вариант ответа');\n      setTimeout(() => setErrorMessage(''), 3000);\n      return;\n    }\n    setUserAnswers(prev => [...prev, selectedAnswer]);\n    setSelectedAnswer('');\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(prev => prev + 1);\n    } else {\n      setIsFinished(true);\n    }\n  };\n  const saveAssessmentResults = async () => {\n    const data = {\n      fullName: `${surnameValue} ${firstNameValue} ${patronymicValue}`,\n      dateTime: new Date().toISOString(),\n      answers: userAnswers\n    };\n    try {\n      const response = await fetch(\"http://localhost:5000/api/assessment/save\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      if (response.ok) {\n        alert(\"Данные успешно сохранены!\");\n      } else {\n        const result = await response.json();\n        alert(`Ошибка: ${result.error}`);\n      }\n    } catch (error) {\n      console.error(\"Ошибка при отправке данных:\", error);\n      alert(\"Не удалось сохранить данные. Проверьте сервер.\");\n    }\n  };\n  const handleFinish = async () => {\n    const data = {\n      fullName: `${surnameValue} ${firstNameValue} ${patronymicValue}`,\n      dateTime: new Date().toISOString(),\n      answers: userAnswers\n    };\n    try {\n      const response = await fetch(\"http://localhost:5000/api/assessment/save\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      if (response.ok) {\n        alert(\"Опрос завершен! Данные сохранены.\");\n      } else {\n        alert(\"Ошибка при сохранении данных.\");\n      }\n    } catch (error) {\n      alert(\"Ошибка соединения с сервером.\");\n    }\n    setIsStarted(false);\n  };\n  if (isStarted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"assessment-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: questions[currentQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answers-container\",\n        children: shuffledAnswers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `answer-btn ${selectedAnswer === answer ? 'selected' : ''}`,\n          onClick: () => setSelectedAnswer(answer),\n          children: answer\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn next-btn\",\n        onClick: handleNext,\n        disabled: !selectedAnswer,\n        children: currentQuestion < questions.length - 1 ? 'Далее' : 'Завершить опрос'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"assessment-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448\\u0438 \\u0424\\u0418\\u041E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"name-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Autosuggest, {\n          suggestions: surnameSuggestions,\n          onSuggestionsFetchRequested: onSurnameSuggestionsFetchRequested,\n          onSuggestionsClearRequested: onSurnameSuggestionsClearRequested,\n          getSuggestionValue: suggestion => suggestion,\n          renderSuggestion: suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: suggestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 47\n          }, this),\n          inputProps: surnameInputProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u0418\\u043C\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Autosuggest, {\n          suggestions: firstNameSuggestions,\n          onSuggestionsFetchRequested: onFirstNameSuggestionsFetchRequested,\n          onSuggestionsClearRequested: onFirstNameSuggestionsClearRequested,\n          getSuggestionValue: suggestion => suggestion,\n          renderSuggestion: suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: suggestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 47\n          }, this),\n          inputProps: firstNameInputProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u041E\\u0442\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Autosuggest, {\n          suggestions: patronymicSuggestions,\n          onSuggestionsFetchRequested: onPatronymicSuggestionsFetchRequested,\n          onSuggestionsClearRequested: onPatronymicSuggestionsClearRequested,\n          getSuggestionValue: suggestion => suggestion,\n          renderSuggestion: suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: suggestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 47\n          }, this),\n          inputProps: patronymicInputProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn red-btn\",\n        children: \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u043E\\u043F\\u0440\\u043E\\u0441\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 428,\n    columnNumber: 5\n  }, this);\n}\n_s(AssessmentPage, \"WaSVwDqndUrdERS9ymq0InR5D04=\");\n_c = AssessmentPage;\nexport default AssessmentPage;\nvar _c;\n$RefreshReg$(_c, \"AssessmentPage\");","map":{"version":3,"names":["React","useState","useEffect","Autosuggest","logo","surnames","firstnames","patronymics","jsxDEV","_jsxDEV","AssessmentPage","_s","surnameValue","setSurnameValue","surnameSuggestions","setSurnameSuggestions","surnameList","map","item","male","female","getSurnameSuggestions","value","trimmed","trim","toLowerCase","length","filter","s","includes","onSurnameChange","event","newValue","charAt","toUpperCase","slice","onSurnameSuggestionsFetchRequested","onSurnameSuggestionsClearRequested","surnameInputProps","placeholder","onChange","onFocus","required","autoComplete","firstNameValue","setFirstNameValue","firstNameSuggestions","setFirstNameSuggestions","firstNameList","firstName","name","getFirstNameSuggestions","onFirstNameChange","onFirstNameSuggestionsFetchRequested","onFirstNameSuggestionsClearRequested","firstNameInputProps","patronymicValue","setPatronymicValue","patronymicSuggestions","setPatronymicSuggestions","patronymicList","patronymic","getPatronymicSuggestions","onPatronymicChange","onPatronymicSuggestionsFetchRequested","onPatronymicSuggestionsClearRequested","patronymicInputProps","isStarted","setIsStarted","errorMessage","setErrorMessage","currentQuestion","setCurrentQuestion","selectedAnswer","setSelectedAnswer","userAnswers","setUserAnswers","isFinished","setIsFinished","shuffledAnswers","setShuffledAnswers","questions","question","answers","shuffleAnswers","shuffled","sort","Math","random","handleNext","setTimeout","prev","saveAssessmentResults","data","fullName","dateTime","Date","toISOString","response","fetch","method","headers","body","JSON","stringify","ok","alert","result","json","error","console","handleFinish","className","children","fileName","_jsxFileName","lineNumber","columnNumber","answer","index","onClick","disabled","suggestions","onSuggestionsFetchRequested","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","inputProps","type","_c","$RefreshReg$"],"sources":["C:/Users/shapeless/Desktop/miniapp/src/AssessmentPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport logo from './components/logo.png';\r\nimport surnames from './components/autosuggest/surname.json';\r\nimport firstnames from './components/autosuggest/firstname.json';\r\nimport patronymics from './components/autosuggest/lastname.json';\r\nimport './AssessmentPage.css';\r\n\r\nfunction AssessmentPage() {\r\n  /*** Фамилия ***/\r\n  const [surnameValue, setSurnameValue] = useState('');\r\n  const [surnameSuggestions, setSurnameSuggestions] = useState([]);\r\n  const surnameList = surnames.map(item => item.male || item.female);\r\n\r\n  const getSurnameSuggestions = (value) => {\r\n    const trimmed = value.trim().toLowerCase();\r\n    if (trimmed.length < 2) return [];\r\n    return surnameList.filter(s => s.toLowerCase().includes(trimmed));\r\n  };\r\n\r\n  const onSurnameChange = (event, { newValue }) => {\r\n    setSurnameValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase());\r\n  };\r\n\r\n  const onSurnameSuggestionsFetchRequested = ({ value }) => {\r\n    setSurnameSuggestions(getSurnameSuggestions(value));\r\n  };\r\n\r\n  const onSurnameSuggestionsClearRequested = () => {\r\n    setSurnameSuggestions([]);\r\n  };\r\n\r\n  const surnameInputProps = {\r\n    placeholder: 'Введите фамилию',\r\n    value: surnameValue,\r\n    onChange: onSurnameChange,\r\n    onFocus: () => setSurnameSuggestions([]),\r\n    required: true,\r\n    autoComplete: 'off'\r\n  };\r\n\r\n  /*** Имя ***/\r\n  const [firstNameValue, setFirstNameValue] = useState('');\r\n  const [firstNameSuggestions, setFirstNameSuggestions] = useState([]);\r\n  const firstNameList = firstnames.map(item => typeof item === 'string' ? item : (item.firstName || item.name));\r\n\r\n  const getFirstNameSuggestions = (value) => {\r\n    const trimmed = value.trim().toLowerCase();\r\n    if (trimmed.length < 2) return [];\r\n    return firstNameList.filter(s => s.toLowerCase().includes(trimmed));\r\n  };\r\n\r\n  const onFirstNameChange = (event, { newValue }) => {\r\n    setFirstNameValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase());\r\n  };\r\n\r\n  const onFirstNameSuggestionsFetchRequested = ({ value }) => {\r\n    setFirstNameSuggestions(getFirstNameSuggestions(value));\r\n  };\r\n\r\n  const onFirstNameSuggestionsClearRequested = () => {\r\n    setFirstNameSuggestions([]);\r\n  };\r\n\r\n  const firstNameInputProps = {\r\n    placeholder: 'Введите имя',\r\n    value: firstNameValue,\r\n    onChange: onFirstNameChange,\r\n    onFocus: () => setFirstNameSuggestions([]),\r\n    required: true,\r\n    autoComplete: 'off'\r\n  };\r\n\r\n  /*** Отчество ***/\r\n  const [patronymicValue, setPatronymicValue] = useState('');\r\n  const [patronymicSuggestions, setPatronymicSuggestions] = useState([]);\r\n  const patronymicList = patronymics.map(item => typeof item === 'string' ? item : (item.patronymic || item.name));\r\n\r\n  const getPatronymicSuggestions = (value) => {\r\n    const trimmed = value.trim().toLowerCase();\r\n    if (trimmed.length < 2) return [];\r\n    return patronymicList.filter(s => s.toLowerCase().includes(trimmed));\r\n  };\r\n\r\n  const onPatronymicChange = (event, { newValue }) => {\r\n    setPatronymicValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase());\r\n  };\r\n\r\n  const onPatronymicSuggestionsFetchRequested = ({ value }) => {\r\n    setPatronymicSuggestions(getPatronymicSuggestions(value));\r\n  };\r\n\r\n  const onPatronymicSuggestionsClearRequested = () => {\r\n    setPatronymicSuggestions([]);\r\n  };\r\n\r\n  const patronymicInputProps = {\r\n    placeholder: 'Введите отчество',\r\n    value: patronymicValue,\r\n    onChange: onPatronymicChange,\r\n    onFocus: () => setPatronymicSuggestions([]),\r\n    required: true,\r\n    autoComplete: 'off'\r\n  };\r\n\r\n  /*** Опрос ***/\r\n  const [isStarted, setIsStarted] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState('');\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n  const [isFinished, setIsFinished] = useState(false);\r\n  const [shuffledAnswers, setShuffledAnswers] = useState([]);\r\n\r\n  // Массив вопросов\r\n  const questions = [\r\n    {\r\n      question: 'Какой формат работы вам ближе?',\r\n      answers: [\r\n        'Когда можно детально разобраться в процессах и построить устойчивую систему',\r\n        'Когда задачи достаточно разнообразны и требуют гибкого подхода',\r\n        'Когда есть чёткий алгоритм действий и понятный конечный результат'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Если коллега допустил серьёзную ошибку, что для вас логичнее сделать?',\r\n      answers: [\r\n        'Понять, что пошло не так, и вместе найти пути исправления',\r\n        'В первую очередь скорректировать свои планы с учётом возникших проблем',\r\n        'Сделать выводы для себя и минимизировать влияние на мою работу'\r\n      ],\r\n    },\r\n    {\r\n      question: 'В команде нарастает напряжение, которое влияет на общий процесс. Как вы реагируете?',\r\n      answers: [\r\n        'Стараюсь выяснить причину и предложить возможные решения, учитывая интересы всех',\r\n        'Наблюдаю за развитием ситуации и при необходимости высказываю своё мнение',\r\n        'Предпочитаю не вовлекаться, если это напрямую не затрагивает мою зону ответственности'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Как относитесь к комментариям по вашей работе?',\r\n      answers: [\r\n        'Считаю их возможностью для развития, если они аргументированы',\r\n        'Выслушиваю, но меняю подход только при реальной необходимости',\r\n        'Если работа выполнена по стандартам, дополнительные замечания не критичны'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Клиент или партнер выражает недовольство результатом. Как поступаете?',\r\n      answers: [\r\n        'Пытаюсь понять, где возникли расхождения, и найти приемлемое решение',\r\n        'Сначала оцениваю обоснованность претензий, при необходимости уточняю детали',\r\n        'Если всё сделано согласно договорённостям, считаю, что моя задача выполнена'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Какой рабочий стиль для вас комфортнее?',\r\n      answers: [\r\n        'Выстраивать системные процессы, учитывая интересы всех сторон надолго вперёд',\r\n        'Следовать намеченному плану, при необходимости поддерживая взаимодействие',\r\n        'Сосредотачиваться на своих задачах, минимизируя отвлечения на внешние факторы'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Как вы относитесь к идее поддерживать контакт с бывшими клиентами или коллегами, чтобы в будущем возможно было сотрудничество?',\r\n      answers: [\r\n        'Считаю это важным для выстраивания долгосрочных отношений',\r\n        'Можно поддерживать связь, если в этом есть очевидная практическая выгода',\r\n        'Предпочитаю фокусироваться на текущих проектах, не распыляясь на прошлое'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Если приходится выбирать между краткосрочной выгодой и построением долгосрочных отношений, что окажется важнее?',\r\n      answers: [\r\n        'Долгосрочная перспектива, даже если сейчас придётся чем-то пожертвовать',\r\n        'Зависит от ситуации — оцениваю риски, возможности и совокупную пользу',\r\n        'Скорее выберу краткосрочную выгоду, ведь будущее сложно прогнозировать'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Насколько вы готовы вкладываться в общее развитие и успехи команды?',\r\n      answers: [\r\n        'Считаю важным делиться опытом, помогать коллегам и укреплять общий результат',\r\n        'Поддерживаю такие инициативы, если они не мешают моей продуктивности',\r\n        'Сосредотачиваюсь на своей зоне ответственности, дополнительные усилия — опциональны'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Как относитесь к идее регулярных встреч или мозговых штурмов с коллегами для совершенствования общего процесса?',\r\n      answers: [\r\n        'Считаю это ценным инструментом для укрепления взаимопонимания и улучшения результата',\r\n        'Участвую, если уверен(а), что это оправданно и не перегружает рабочее время',\r\n        'Предпочитаю решать задачи в индивидуальном порядке, без лишних обсуждений'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Как относитесь к повышению квалификации?',\r\n      answers: [\r\n        'Постоянно осваиваю новые инструменты и технологии, чтобы быть в курсе трендов',\r\n        'Изучаю что-то новое, когда это действительно нужно для выполнения задач',\r\n        'Считаю, что уже имеющихся знаний обычно достаточно для базовых процессов'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Как реагируете, когда сталкиваетесь с незнакомой задачей?',\r\n      answers: [\r\n        'С радостью вижу шанс изучить новую область и расширить компетенции',\r\n        'Изучаю столько, сколько требуется, чтобы качественно решить задачу',\r\n        'Предпочитаю применять проверенные методы, если они дают нужный результат'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Как относитесь к обмену знаниями в команде?',\r\n      answers: [\r\n        'Считаю, что это взаимовыгодный процесс: чем больше делимся, тем сильнее команда',\r\n        'Готов(а) поделиться опытом, если вижу, что это действительно кому-то полезно',\r\n        'Каждый занимается своей областью, делиться или нет — решение сугубо личное'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Что делаете, если замечаете, что используемый процесс устарел?',\r\n      answers: [\r\n        'Изучаю, как его можно обновить, и вношу конкретные предложения',\r\n        'Предлагаю альтернативы, если вижу в этом реальную пользу',\r\n        'Если процесс пока работает, значит, радикальные изменения не обязательны'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Насколько важно для вас идти в ногу с новыми трендами в своей сфере?',\r\n      answers: [\r\n        'Постоянно ищу и пробую инновационные подходы, слежу за профессиональными сообществами',\r\n        'Изучаю новинки по мере необходимости, когда они могут пригодиться в работе',\r\n        'Ориентируюсь в основном на проверенные временем технологии'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Как подходите к решению сложных задач?',\r\n      answers: [\r\n        'Стараюсь рассмотреть задачу под разными углами и привлекаю экспертов при необходимости',\r\n        'Опираюсь на имеющиеся знания, обращаясь за поддержкой только если это действительно нужно',\r\n        'Использую знакомые шаблоны, которые уже доказали свою эффективность'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Как относитесь к критическому анализу своих профессиональных методов?',\r\n      answers: [\r\n        'Считаю, что это естественный путь к росту экспертизы и поиску новых решений',\r\n        'Прислушиваюсь, если замечания выглядят обоснованными и практичными',\r\n        'Если метод работает, то лишний анализ может только замедлить процесс'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Какой тип задач для вас наиболее интересен?',\r\n      answers: [\r\n        'Когда можно глубоко вникнуть и довести методику до высокого уровня',\r\n        'Когда нужно сочетать проверенные подходы и что-то новое',\r\n        'Когда есть чёткая инструкция и предсказуемый результат, без лишнего эксперимента'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Как оцениваете качество выполненной работы?',\r\n      answers: [\r\n        'Если результат заметно превосходит обычные ожидания и удивляет заказчика/коллег',\r\n        'Если всё сделано надёжно, в срок и соответствует ключевым целям',\r\n        'Если задача решена строго по заданным критериям и нет существенных нареканий'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Как относитесь к инициативе, выходящей за рамки поставленных задач?',\r\n      answers: [\r\n        'Часто предлагаю идеи, которые могут сделать итог действительно впечатляющим',\r\n        'Высказываю предложения, когда вижу, что это принесёт реальную пользу',\r\n        'Предпочитаю не выходить за рамки инструкции, чтобы не рисковать понапрасну'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Как воспринимаете нестандартные решения?',\r\n      answers: [\r\n        'Это шанс получить новый опыт и порадовать команду или клиентов',\r\n        'Готов(а) их рассмотреть, если они оправданы и не слишком рискованны',\r\n        'Предпочитаю проверенные пути, чтобы избежать лишних экспериментов'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Какую обратную связь по работе вам приятнее всего получать?',\r\n      answers: [\r\n        'Когда говорят, что всё получилось даже лучше, чем ожидали',\r\n        'Когда отмечают аккуратное, качественное выполнение без ошибок',\r\n        'Когда просто подтверждают, что всё соответствует заранее установленным требованиям'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Если видите возможность улучшить процесс, что делаете?',\r\n      answers: [\r\n        'Инициирую изменения, стремясь поднять планку качества и удивить результатом',\r\n        'Оцениваю плюсы и минусы, предлагаю улучшения, если они действительно востребованы',\r\n        'Если текущая схема работает стабильно, глобальных перемен обычно не вношу'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Как относитесь к деталям в работе?',\r\n      answers: [\r\n        'Считаю, что именно нюансы придают результату яркость и особое качество',\r\n        'Уделяю им внимание, когда это влияет на общее впечатление и удовлетворённость клиентов',\r\n        'Главная цель — выполнить работу по основным критериям, не вдаваясь в мелочи'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Как воспринимаете конечных пользователей или клиентов вашей работы?',\r\n      answers: [\r\n        'Стараюсь удивить их качеством и оригинальностью, чтобы оставить сильное впечатление',\r\n        'Важно, чтобы они получили то, что нужно, и остались довольны',\r\n        'Главное — соответствие техническим требованиям и срокам, без лишних нюансов'\r\n      ],\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (isStarted) {\r\n      shuffleAnswers();\r\n    }\r\n  }, [currentQuestion, isStarted]);\r\n\r\n  const shuffleAnswers = () => {\r\n    const shuffled = [...questions[currentQuestion].answers].sort(() => Math.random() - 0.5);\r\n    setShuffledAnswers(shuffled);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (!selectedAnswer) {\r\n      setErrorMessage('Выберите вариант ответа');\r\n      setTimeout(() => setErrorMessage(''), 3000);\r\n      return;\r\n    }\r\n\r\n    setUserAnswers(prev => [...prev, selectedAnswer]);\r\n    setSelectedAnswer('');\r\n\r\n    if (currentQuestion < questions.length - 1) {\r\n      setCurrentQuestion(prev => prev + 1);\r\n    } else {\r\n      setIsFinished(true);\r\n    }\r\n  };\r\n\r\n  const saveAssessmentResults = async () => {\r\n    const data = {\r\n      fullName: `${surnameValue} ${firstNameValue} ${patronymicValue}`,\r\n      dateTime: new Date().toISOString(),\r\n      answers: userAnswers,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/assessment/save\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert(\"Данные успешно сохранены!\");\r\n      } else {\r\n        const result = await response.json();\r\n        alert(`Ошибка: ${result.error}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Ошибка при отправке данных:\", error);\r\n      alert(\"Не удалось сохранить данные. Проверьте сервер.\");\r\n    }\r\n  };\r\n\r\n  const handleFinish = async () => {\r\n    const data = {\r\n      fullName: `${surnameValue} ${firstNameValue} ${patronymicValue}`,\r\n      dateTime: new Date().toISOString(),\r\n      answers: userAnswers,\r\n    };\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/assessment/save\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n      if (response.ok) {\r\n        alert(\"Опрос завершен! Данные сохранены.\");\r\n      } else {\r\n        alert(\"Ошибка при сохранении данных.\");\r\n      }\r\n    } catch (error) {\r\n      alert(\"Ошибка соединения с сервером.\");\r\n    }\r\n    setIsStarted(false);\r\n  };\r\n\r\n  if (isStarted) {\r\n    return (\r\n      <div className=\"assessment-container\">\r\n        <h2>{questions[currentQuestion].question}</h2>\r\n        <div className=\"answers-container\">\r\n          {shuffledAnswers.map((answer, index) => (\r\n            <button\r\n              key={index}\r\n              className={`answer-btn ${selectedAnswer === answer ? 'selected' : ''}`}\r\n              onClick={() => setSelectedAnswer(answer)}\r\n            >\r\n              {answer}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n        <button\r\n          className=\"btn next-btn\"\r\n          onClick={handleNext}\r\n          disabled={!selectedAnswer}\r\n        >\r\n          {currentQuestion < questions.length - 1 ? 'Далее' : 'Завершить опрос'}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"assessment-container\">\r\n      <h2>Введите ваши ФИО</h2>\r\n      <form className=\"name-form\">\r\n        <div className=\"input-container\">\r\n          <label>Фамилия</label>\r\n          <Autosuggest\r\n            suggestions={surnameSuggestions}\r\n            onSuggestionsFetchRequested={onSurnameSuggestionsFetchRequested}\r\n            onSuggestionsClearRequested={onSurnameSuggestionsClearRequested}\r\n            getSuggestionValue={(suggestion) => suggestion}\r\n            renderSuggestion={(suggestion) => <div>{suggestion}</div>}\r\n            inputProps={surnameInputProps}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-container\">\r\n          <label>Имя</label>\r\n          <Autosuggest\r\n            suggestions={firstNameSuggestions}\r\n            onSuggestionsFetchRequested={onFirstNameSuggestionsFetchRequested}\r\n            onSuggestionsClearRequested={onFirstNameSuggestionsClearRequested}\r\n            getSuggestionValue={(suggestion) => suggestion}\r\n            renderSuggestion={(suggestion) => <div>{suggestion}</div>}\r\n            inputProps={firstNameInputProps}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-container\">\r\n          <label>Отчество</label>\r\n          <Autosuggest\r\n            suggestions={patronymicSuggestions}\r\n            onSuggestionsFetchRequested={onPatronymicSuggestionsFetchRequested}\r\n            onSuggestionsClearRequested={onPatronymicSuggestionsClearRequested}\r\n            getSuggestionValue={(suggestion) => suggestion}\r\n            renderSuggestion={(suggestion) => <div>{suggestion}</div>}\r\n            inputProps={patronymicInputProps}\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn red-btn\">Начать опрос</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AssessmentPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}