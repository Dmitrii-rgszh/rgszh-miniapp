{"ast":null,"code":"// src/MainMenu.js\nimport React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import'./Styles/global.css';// чтобы получить шрифт Montserrat и сбросы\nimport'./Styles/background.css';// градиент + шумовой оверлей (см. ранее)\nimport'./Styles/logo.css';// анимация и стили лого (logo-wrapper)\nimport'./Styles/Buttons.css';// новый файл со стандартным стилем кнопок\nimport backgroundImage from'./components/background.png';import logoImage from'./components/logo.png';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function MainMenu(){const navigate=useNavigate();const[animate,setAnimate]=useState(false);useEffect(()=>{// Запускаем анимацию рамки-лого\nsetAnimate(true);},[]);// Обработчик клика с ripple-эффектом и навигацией\nconst handleClick=(e,route)=>{const btn=e.currentTarget;const circle=document.createElement('span');const diameter=Math.max(btn.clientWidth,btn.clientHeight);const radius=diameter/2;circle.style.width=circle.style.height=`${diameter}px`;circle.style.left=`${e.clientX-btn.offsetLeft-radius}px`;circle.style.top=`${e.clientY-btn.offsetTop-radius}px`;circle.classList.add('ripple');const oldRipple=btn.getElementsByClassName('ripple')[0];if(oldRipple)oldRipple.remove();btn.appendChild(circle);// Ждём 300 мс, чтобы ripple успел показаться, и переходим\nsetTimeout(()=>navigate(route),300);};const buttons=[{to:'/polls',label:'Опросы'},{to:'/employee',label:'Сотруднику'}];// Класс лого: если animate=true, добавляем .animate-logo (из logo.css)\nconst logoClass=animate?'logo-wrapper animate-logo':'logo-wrapper';return/*#__PURE__*/_jsxs(\"div\",{className:\"mainmenu-container\",style:{backgroundImage:`url(${backgroundImage})`},children:[/*#__PURE__*/_jsx(\"div\",{className:\"mainmenu-overlay\"}),/*#__PURE__*/_jsx(\"div\",{className:logoClass,children:/*#__PURE__*/_jsx(\"img\",{src:logoImage,alt:\"\\u041B\\u043E\\u0433\\u043E\\u0442\\u0438\\u043F \\u0420\\u0413\\u0421 \\u0416\\u0438\\u0437\\u043D\\u044C\",className:\"logo-image\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"button-container\",children:buttons.map(btn=>/*#__PURE__*/_jsx(\"button\",{className:\"btn-custom\",onClick:e=>handleClick(e,btn.to),children:btn.label},btn.to))})]});}","map":{"version":3,"names":["React","useState","useEffect","useNavigate","backgroundImage","logoImage","jsx","_jsx","jsxs","_jsxs","MainMenu","navigate","animate","setAnimate","handleClick","e","route","btn","currentTarget","circle","document","createElement","diameter","Math","max","clientWidth","clientHeight","radius","style","width","height","left","clientX","offsetLeft","top","clientY","offsetTop","classList","add","oldRipple","getElementsByClassName","remove","appendChild","setTimeout","buttons","to","label","logoClass","className","children","src","alt","map","onClick"],"sources":["C:/Users/shapeless/Desktop/miniapp/src/MainMenu.js"],"sourcesContent":["// src/MainMenu.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate }           from 'react-router-dom';\r\n\r\nimport './Styles/global.css';     // чтобы получить шрифт Montserrat и сбросы\r\nimport './Styles/background.css'; // градиент + шумовой оверлей (см. ранее)\r\nimport './Styles/logo.css';       // анимация и стили лого (logo-wrapper)\r\nimport './Styles/Buttons.css';    // новый файл со стандартным стилем кнопок\r\n\r\nimport backgroundImage from './components/background.png';\r\nimport logoImage       from './components/logo.png';\r\n\r\nexport default function MainMenu() {\r\n  const navigate = useNavigate();\r\n  const [animate, setAnimate] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Запускаем анимацию рамки-лого\r\n    setAnimate(true);\r\n  }, []);\r\n\r\n  // Обработчик клика с ripple-эффектом и навигацией\r\n  const handleClick = (e, route) => {\r\n    const btn = e.currentTarget;\r\n    const circle = document.createElement('span');\r\n    const diameter = Math.max(btn.clientWidth, btn.clientHeight);\r\n    const radius = diameter / 2;\r\n    circle.style.width  = circle.style.height = `${diameter}px`;\r\n    circle.style.left   = `${e.clientX - btn.offsetLeft - radius}px`;\r\n    circle.style.top    = `${e.clientY - btn.offsetTop  - radius}px`;\r\n    circle.classList.add('ripple');\r\n    const oldRipple = btn.getElementsByClassName('ripple')[0];\r\n    if (oldRipple) oldRipple.remove();\r\n    btn.appendChild(circle);\r\n\r\n    // Ждём 300 мс, чтобы ripple успел показаться, и переходим\r\n    setTimeout(() => navigate(route), 300);\r\n  };\r\n\r\n  const buttons = [\r\n    { to: '/polls',    label: 'Опросы'    },\r\n    { to: '/employee', label: 'Сотруднику' },\r\n  ];\r\n\r\n  // Класс лого: если animate=true, добавляем .animate-logo (из logo.css)\r\n  const logoClass = animate ? 'logo-wrapper animate-logo' : 'logo-wrapper';\r\n\r\n  return (\r\n    <div\r\n      className=\"mainmenu-container\"\r\n      style={{ backgroundImage: `url(${backgroundImage})` }}\r\n    >\r\n      <div className=\"mainmenu-overlay\" />\r\n\r\n      {/* Логотип (и рамка) */}\r\n      <div className={logoClass}>\r\n        <img\r\n          src={logoImage}\r\n          alt=\"Логотип РГС Жизнь\"\r\n          className=\"logo-image\"\r\n        />\r\n      </div>\r\n\r\n      {/* Наш единый контейнер с кнопками */}\r\n      <div className=\"button-container\">\r\n        {buttons.map((btn) => (\r\n          <button\r\n            key={btn.to}\r\n            className=\"btn-custom\"\r\n            onClick={(e) => handleClick(e, btn.to)}\r\n          >\r\n            {btn.label}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}