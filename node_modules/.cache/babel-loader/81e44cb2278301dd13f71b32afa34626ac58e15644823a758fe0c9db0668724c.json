{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shapeless\\\\Desktop\\\\miniapp\\\\src\\\\FeedbackPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport logo from './components/logo.png';\nimport backgroundImage from './components/background.jpg';\nimport partners from './components/autosuggest/partners.json';\nimport speakers from './components/autosuggest/speakers.json';\nimport './FeedbackPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedbackPage = () => {\n  _s();\n  // Этап выбора партнёра\n  const [partner, setPartner] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [partnerSuggestions, setPartnerSuggestions] = useState([]);\n  const getPartnerSuggestions = value => {\n    const inputValue = value ? value.trim().toLowerCase() : '';\n    return inputValue.length < 2 ? [] : partners.filter(p => typeof p === 'string' && p.toLowerCase().includes(inputValue));\n  };\n  const onPartnerChange = (event, {\n    newValue\n  }) => {\n    setPartner(newValue);\n  };\n  const partnerInputProps = {\n    placeholder: 'Введите название партнёра',\n    value: partner,\n    onChange: onPartnerChange,\n    autoComplete: 'off'\n  };\n\n  // Этап выбора спикеров (обязательно хотя бы один)\n  const [speakersList, setSpeakersList] = useState([{\n    fullName: '',\n    id: 1\n  }]);\n  const handleAddSpeaker = () => {\n    setSpeakersList([...speakersList, {\n      fullName: '',\n      id: speakersList.length + 1\n    }]);\n  };\n  const handleSpeakerChange = (e, index) => {\n    const updated = [...speakersList];\n    updated[index].fullName = e.target.value;\n    setSpeakersList(updated);\n  };\n\n  // Этап оценки качеств спикера для каждого спикера отдельно\n  const qualityRows = [{\n    positive: \"Экспертный\",\n    negative: \"Компетентный\"\n  }, {\n    positive: \"Энергичный\",\n    negative: \"Пассивный\"\n  }, {\n    positive: \"Мотивирующий\",\n    negative: \"Невдохновляющий\"\n  }, {\n    positive: \"Харизматичный\",\n    negative: \"Душный\"\n  }, {\n    positive: \"Доступно доносит информацию\",\n    negative: \"Говорит сложными терминами\"\n  }];\n  // Для каждого спикера хранится массив оценок (5 строк)\n  const [speakerQualities, setSpeakerQualities] = useState([]);\n  const [currentSpeakerIndex, setCurrentSpeakerIndex] = useState(0);\n  useEffect(() => {\n    setSpeakerQualities(speakersList.map(() => Array(5).fill(null)));\n  }, [speakersList]);\n\n  // Функция для обновления оценок конкретного спикера (объявлена один раз)\n  const handleQualitySelectForSpeaker = (rowIndex, type) => {\n    const updated = [...speakerQualities];\n    updated[currentSpeakerIndex][rowIndex] = type;\n    setSpeakerQualities(updated);\n  };\n\n  // Этап 4: Фактическая ценность информации\n  const [usefulness, setUsefulness] = useState('');\n  const handleUsefulness = value => {\n    setUsefulness(value);\n  };\n\n  // Этап 5: Самые яркие мысли с мероприятия\n  const [brightThoughts, setBrightThoughts] = useState('');\n  const handleBrightThoughts = e => {\n    setBrightThoughts(e.target.value);\n  };\n\n  // Этап 6: Что добавить в тренинг (множественный выбор)\n  const additionalOptions = [\"Практики\", \"Клиентских историй\", \"Статистических данных\", \"Фишек продаж\", \"Перерывов / 'Кофе'-пауз\", \"Разбор продуктовой линейки\", \"Детальный разбор параметров продукта\", \"Ящик Prosecco\"];\n  const [additionalSelections, setAdditionalSelections] = useState([]);\n  const toggleAdditionalSelection = option => {\n    if (additionalSelections.includes(option)) {\n      setAdditionalSelections(additionalSelections.filter(item => item !== option));\n    } else {\n      setAdditionalSelections([...additionalSelections, option]);\n    }\n  };\n\n  // Этап 7: Общее впечатление от тренинга (3 смайлика)\n  const [impression, setImpression] = useState('');\n  const handleImpression = value => {\n    setImpression(value);\n  };\n\n  // Управление этапами опроса:\n  // 1 - выбор партнёра, 2 - выбор спикеров, 3 - оценка качеств спикера (для каждого спикера),\n  // 4 - фактическая ценность, 5 - яркие мысли, 6 - добавить в тренинг, 7 - общее впечатление\n  const [currentStep, setCurrentStep] = useState(1);\n  const [isFinished, setIsFinished] = useState(false);\n  const [isFinishClicked, setIsFinishClicked] = useState(false);\n  const handleNext = () => {\n    if (currentStep === 1 && !partner) {\n      alert(\"Введите название партнёра\");\n      return;\n    }\n    if (currentStep === 2 && speakersList[0].fullName.trim() === \"\") {\n      alert(\"Введите хотя бы одного спикера\");\n      return;\n    }\n    if (currentStep === 3) {\n      if (speakerQualities[currentSpeakerIndex][0] === null) {\n        alert(\"Выберите оценку качеств для спикера\");\n        return;\n      }\n      if (currentSpeakerIndex < speakersList.length - 1) {\n        setCurrentSpeakerIndex(currentSpeakerIndex + 1);\n        return; // остаёмся на этапе 3 для следующего спикера\n      } else {\n        setCurrentStep(currentStep + 1);\n      }\n      return;\n    }\n    if (currentStep === 4 && !usefulness) {\n      alert(\"Выберите ответ на вопрос 'Фактическая ценность информации'\");\n      return;\n    }\n    if (currentStep === 5 && brightThoughts.trim().length < 5) {\n      alert(\"Ответ на вопрос 'Самые яркие мысли с мероприятия' должен содержать минимум 5 символов\");\n      return;\n    }\n    if (currentStep === 7 && !impression) {\n      alert(\"Выберите общее впечатление от тренинга\");\n      return;\n    }\n    setCurrentStep(currentStep + 1);\n  };\n\n  // ... предыдущий код ...\n\n  const handleFinish = async () => {\n    if (isFinishClicked) return;\n    setIsFinishClicked(true);\n    setIsFinished(true); // Немедленно переключаем на страницу благодарности\n\n    // Формируем списки положительных и отрицательных качеств с ФИО спикеров\n    const positiveQualitiesList = [];\n    const negativeQualitiesList = [];\n    speakersList.forEach((speaker, idx) => {\n      qualityRows.forEach((row, j) => {\n        const selection = speakerQualities[idx][j];\n        if (selection === 'positive') {\n          positiveQualitiesList.push(`${row.positive} (${speaker.fullName})`);\n        } else if (selection === 'negative') {\n          negativeQualitiesList.push(`${row.negative} (${speaker.fullName})`);\n        }\n      });\n    });\n    const positiveQualitiesStr = positiveQualitiesList.join(', ');\n    const negativeQualitiesStr = negativeQualitiesList.join(', ');\n    const data = {\n      partner,\n      speakers: speakersList.map(s => s.fullName),\n      answers: {\n        speakerQualities,\n        // Массив оценок для каждого спикера (5 оценок на спикера)\n        usefulness,\n        brightThoughts,\n        additionalSuggestions: additionalSelections,\n        impression\n      },\n      dateTime: new Date().toISOString(),\n      positiveQualities: positiveQualitiesStr,\n      // добавлено\n      negativeQualities: negativeQualitiesStr // добавлено\n    };\n    try {\n      const response = await fetch('https://rgszh-miniapp.org/api/feedback/save', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data),\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        alert(\"Ошибка при сохранении данных\");\n      }\n    } catch (error) {\n      console.error(\"Ошибка при отправке данных:\", error);\n      alert(\"Ошибка соединения с сервером\");\n    }\n  };\n  const renderStep = () => {\n    switch (currentStep) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u0430\\u0440\\u0442\\u043D\\u0451\\u0440\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Autosuggest, {\n            suggestions: partnerSuggestions,\n            onSuggestionsFetchRequested: ({\n              value\n            }) => setPartnerSuggestions(getPartnerSuggestions(value)),\n            onSuggestionsClearRequested: () => setPartnerSuggestions([]),\n            getSuggestionValue: suggestion => suggestion,\n            renderSuggestion: suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: suggestion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 47\n            }, this),\n            inputProps: partnerInputProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0424\\u0418\\u041E \\u0441\\u043F\\u0438\\u043A\\u0435\\u0440\\u0430(\\u043E\\u0432)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), speakersList.map((speaker, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: speaker.fullName,\n              onChange: e => handleSpeakerChange(e, index),\n              placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0424\\u0418\\u041E \\u0441\\u043F\\u0438\\u043A\\u0435\\u0440\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this), index === speakersList.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddSpeaker,\n              children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u043F\\u0438\\u043A\\u0435\\u0440\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this);\n      case 3:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u041E\\u0446\\u0435\\u043D\\u0438\\u0442\\u0435 \\u043A\\u0430\\u0447\\u0435\\u0441\\u0442\\u0432\\u0430 \\u0441\\u043F\\u0438\\u043A\\u0435\\u0440\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u041E\\u0446\\u0435\\u043D\\u0438\\u0442\\u0435 \\u0441\\u043F\\u0438\\u043A\\u0435\\u0440\\u0430: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: speakersList[currentSpeakerIndex].fullName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), qualityRows.map((row, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quality-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleQualitySelectForSpeaker(idx, 'positive'),\n              className: speakerQualities[currentSpeakerIndex] && speakerQualities[currentSpeakerIndex][idx] === 'positive' ? 'green' : '',\n              children: row.positive\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleQualitySelectForSpeaker(idx, 'negative'),\n              className: speakerQualities[currentSpeakerIndex] && speakerQualities[currentSpeakerIndex][idx] === 'negative' ? 'red' : '',\n              children: row.negative\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)), speakersList.length > 1 && currentSpeakerIndex < speakersList.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn next-btn\",\n            onClick: () => setCurrentSpeakerIndex(currentSpeakerIndex + 1),\n            children: \"\\u0414\\u0430\\u043B\\u0435\\u0435 \\u0434\\u043B\\u044F \\u0441\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u0435\\u0433\\u043E \\u0441\\u043F\\u0438\\u043A\\u0435\\u0440\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this);\n      case 4:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u0424\\u0430\\u043A\\u0442\\u0438\\u0447\\u0435\\u0441\\u043A\\u0430\\u044F \\u0446\\u0435\\u043D\\u043D\\u043E\\u0441\\u0442\\u044C \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"usefulness-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleUsefulness(\"Полезно в работе (буду применять на практике)\"),\n              className: usefulness === \"Полезно в работе (буду применять на практике)\" ? 'green' : '',\n              children: \"\\u041F\\u043E\\u043B\\u0435\\u0437\\u043D\\u043E \\u0432 \\u0440\\u0430\\u0431\\u043E\\u0442\\u0435 (\\u0431\\u0443\\u0434\\u0443 \\u043F\\u0440\\u0438\\u043C\\u0435\\u043D\\u044F\\u0442\\u044C \\u043D\\u0430 \\u043F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0435)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleUsefulness(\"Бесполезно в работе (с моими клиентами это не работает)\"),\n              className: usefulness === \"Бесполезно в работе (с моими клиентами это не работает)\" ? 'red' : '',\n              children: \"\\u0411\\u0435\\u0441\\u043F\\u043E\\u043B\\u0435\\u0437\\u043D\\u043E \\u0432 \\u0440\\u0430\\u0431\\u043E\\u0442\\u0435 (\\u0441 \\u043C\\u043E\\u0438\\u043C\\u0438 \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0430\\u043C\\u0438 \\u044D\\u0442\\u043E \\u043D\\u0435 \\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u0435\\u0442)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this);\n      case 5:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u0421\\u0430\\u043C\\u044B\\u0435 \\u044F\\u0440\\u043A\\u0438\\u0435 \\u043C\\u044B\\u0441\\u043B\\u0438 \\u0441 \\u043C\\u0435\\u0440\\u043E\\u043F\\u0440\\u0438\\u044F\\u0442\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: brightThoughts,\n            onChange: handleBrightThoughts,\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442 (\\u043C\\u0438\\u043D\\u0438\\u043C\\u0443\\u043C 5 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this);\n      case 6:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u0427\\u0442\\u043E \\u0441\\u0442\\u043E\\u0438\\u043B\\u043E \\u0431\\u044B \\u0434\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432 \\u0442\\u0440\\u0435\\u043D\\u0438\\u043D\\u0433?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"additional-container\",\n            children: additionalOptions.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleAdditionalSelection(opt),\n              className: additionalSelections.includes(opt) ? 'selected' : '',\n              children: opt\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this);\n      case 7:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u041E\\u0431\\u0449\\u0435\\u0435 \\u0432\\u043F\\u0435\\u0447\\u0430\\u0442\\u043B\\u0435\\u043D\\u0438\\u0435 \\u043E\\u0442 \\u0442\\u0440\\u0435\\u043D\\u0438\\u043D\\u0433\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"impression-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleImpression('sad'),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/sad_smiley.png\",\n                alt: \"\\u0421 \\u0433\\u0440\\u0443\\u0441\\u0442\\u043D\\u044B\\u043C \\u0441\\u043C\\u0430\\u0439\\u043B\\u043E\\u043C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleImpression('neutral'),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/neutral_smiley.png\",\n                alt: \"\\u041D\\u0435\\u0439\\u0442\\u0440\\u0430\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0441\\u043C\\u0430\\u0439\\u043B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleImpression('happy'),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/happy_smiley.png\",\n                alt: \"\\u0421\\u0447\\u0430\\u0441\\u0442\\u043B\\u0438\\u0432\\u044B\\u0439 \\u0441\\u043C\\u0430\\u0439\\u043B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  if (isFinished) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thank-you-message\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0411\\u043B\\u0430\\u0433\\u043E\\u0434\\u0430\\u0440\\u0438\\u043C \\u0437\\u0430 \\u043F\\u0440\\u043E\\u0445\\u043E\\u0436\\u0434\\u0435\\u043D\\u0438\\u0435 \\u043E\\u043F\\u0440\\u043E\\u0441\\u0430!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      backgroundImage: `url(${backgroundImage})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"\\u041B\\u043E\\u0433\\u043E\\u0442\\u0438\\u043F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-container\",\n      children: [renderStep(), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 26\n      }, this), currentStep < 7 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn next-btn\",\n        onClick: handleNext,\n        children: \"\\u0414\\u0430\\u043B\\u0435\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn next-btn\",\n        onClick: handleFinish,\n        children: \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C \\u043E\\u043F\\u0440\\u043E\\u0441\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 343,\n    columnNumber: 5\n  }, this);\n};\n_s(FeedbackPage, \"Q9eWYikT3w6vbuS0kcDuKT/OhmE=\");\n_c = FeedbackPage;\nexport default FeedbackPage;\nvar _c;\n$RefreshReg$(_c, \"FeedbackPage\");","map":{"version":3,"names":["React","useState","useEffect","Autosuggest","logo","backgroundImage","partners","speakers","jsxDEV","_jsxDEV","FeedbackPage","_s","partner","setPartner","errorMessage","setErrorMessage","partnerSuggestions","setPartnerSuggestions","getPartnerSuggestions","value","inputValue","trim","toLowerCase","length","filter","p","includes","onPartnerChange","event","newValue","partnerInputProps","placeholder","onChange","autoComplete","speakersList","setSpeakersList","fullName","id","handleAddSpeaker","handleSpeakerChange","e","index","updated","target","qualityRows","positive","negative","speakerQualities","setSpeakerQualities","currentSpeakerIndex","setCurrentSpeakerIndex","map","Array","fill","handleQualitySelectForSpeaker","rowIndex","type","usefulness","setUsefulness","handleUsefulness","brightThoughts","setBrightThoughts","handleBrightThoughts","additionalOptions","additionalSelections","setAdditionalSelections","toggleAdditionalSelection","option","item","impression","setImpression","handleImpression","currentStep","setCurrentStep","isFinished","setIsFinished","isFinishClicked","setIsFinishClicked","handleNext","alert","handleFinish","positiveQualitiesList","negativeQualitiesList","forEach","speaker","idx","row","j","selection","push","positiveQualitiesStr","join","negativeQualitiesStr","data","s","answers","additionalSuggestions","dateTime","Date","toISOString","positiveQualities","negativeQualities","response","fetch","method","headers","body","JSON","stringify","credentials","ok","error","console","renderStep","children","fileName","_jsxFileName","lineNumber","columnNumber","suggestions","onSuggestionsFetchRequested","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","inputProps","onClick","className","opt","src","alt","style","_c","$RefreshReg$"],"sources":["C:/Users/shapeless/Desktop/miniapp/src/FeedbackPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport logo from './components/logo.png';\r\nimport backgroundImage from './components/background.jpg';\r\nimport partners from './components/autosuggest/partners.json';\r\nimport speakers from './components/autosuggest/speakers.json';\r\nimport './FeedbackPage.css';\r\n\r\nconst FeedbackPage = () => {\r\n  // Этап выбора партнёра\r\n  const [partner, setPartner] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [partnerSuggestions, setPartnerSuggestions] = useState([]);\r\n  const getPartnerSuggestions = (value) => {\r\n    const inputValue = value ? value.trim().toLowerCase() : '';\r\n    return inputValue.length < 2\r\n      ? []\r\n      : partners.filter(p => typeof p === 'string' && p.toLowerCase().includes(inputValue));\r\n  };\r\n  const onPartnerChange = (event, { newValue }) => {\r\n    setPartner(newValue);\r\n  };\r\n  const partnerInputProps = {\r\n    placeholder: 'Введите название партнёра',\r\n    value: partner,\r\n    onChange: onPartnerChange,\r\n    autoComplete: 'off'\r\n  };\r\n\r\n  // Этап выбора спикеров (обязательно хотя бы один)\r\n  const [speakersList, setSpeakersList] = useState([{ fullName: '', id: 1 }]);\r\n  const handleAddSpeaker = () => {\r\n    setSpeakersList([...speakersList, { fullName: '', id: speakersList.length + 1 }]);\r\n  };\r\n  const handleSpeakerChange = (e, index) => {\r\n    const updated = [...speakersList];\r\n    updated[index].fullName = e.target.value;\r\n    setSpeakersList(updated);\r\n  };\r\n\r\n  // Этап оценки качеств спикера для каждого спикера отдельно\r\n  const qualityRows = [\r\n    { positive: \"Экспертный\", negative: \"Компетентный\" },\r\n    { positive: \"Энергичный\", negative: \"Пассивный\" },\r\n    { positive: \"Мотивирующий\", negative: \"Невдохновляющий\" },\r\n    { positive: \"Харизматичный\", negative: \"Душный\" },\r\n    { positive: \"Доступно доносит информацию\", negative: \"Говорит сложными терминами\" },\r\n  ];\r\n  // Для каждого спикера хранится массив оценок (5 строк)\r\n  const [speakerQualities, setSpeakerQualities] = useState([]);\r\n  const [currentSpeakerIndex, setCurrentSpeakerIndex] = useState(0);\r\n  useEffect(() => {\r\n    setSpeakerQualities(speakersList.map(() => Array(5).fill(null)));\r\n  }, [speakersList]);\r\n\r\n  // Функция для обновления оценок конкретного спикера (объявлена один раз)\r\n  const handleQualitySelectForSpeaker = (rowIndex, type) => {\r\n    const updated = [...speakerQualities];\r\n    updated[currentSpeakerIndex][rowIndex] = type;\r\n    setSpeakerQualities(updated);\r\n  };\r\n\r\n  // Этап 4: Фактическая ценность информации\r\n  const [usefulness, setUsefulness] = useState('');\r\n  const handleUsefulness = (value) => {\r\n    setUsefulness(value);\r\n  };\r\n\r\n  // Этап 5: Самые яркие мысли с мероприятия\r\n  const [brightThoughts, setBrightThoughts] = useState('');\r\n  const handleBrightThoughts = (e) => {\r\n    setBrightThoughts(e.target.value);\r\n  };\r\n\r\n  // Этап 6: Что добавить в тренинг (множественный выбор)\r\n  const additionalOptions = [\r\n    \"Практики\",\r\n    \"Клиентских историй\",\r\n    \"Статистических данных\",\r\n    \"Фишек продаж\",\r\n    \"Перерывов / 'Кофе'-пауз\",\r\n    \"Разбор продуктовой линейки\",\r\n    \"Детальный разбор параметров продукта\",\r\n    \"Ящик Prosecco\",\r\n  ];\r\n  const [additionalSelections, setAdditionalSelections] = useState([]);\r\n  const toggleAdditionalSelection = (option) => {\r\n    if (additionalSelections.includes(option)) {\r\n      setAdditionalSelections(additionalSelections.filter(item => item !== option));\r\n    } else {\r\n      setAdditionalSelections([...additionalSelections, option]);\r\n    }\r\n  };\r\n\r\n  // Этап 7: Общее впечатление от тренинга (3 смайлика)\r\n  const [impression, setImpression] = useState('');\r\n  const handleImpression = (value) => {\r\n    setImpression(value);\r\n  };\r\n\r\n  // Управление этапами опроса:\r\n  // 1 - выбор партнёра, 2 - выбор спикеров, 3 - оценка качеств спикера (для каждого спикера),\r\n  // 4 - фактическая ценность, 5 - яркие мысли, 6 - добавить в тренинг, 7 - общее впечатление\r\n  const [currentStep, setCurrentStep] = useState(1);\r\n  const [isFinished, setIsFinished] = useState(false);\r\n  const [isFinishClicked, setIsFinishClicked] = useState(false);\r\n\r\n  const handleNext = () => {\r\n    if (currentStep === 1 && !partner) {\r\n      alert(\"Введите название партнёра\");\r\n      return;\r\n    }\r\n    if (currentStep === 2 && speakersList[0].fullName.trim() === \"\") {\r\n      alert(\"Введите хотя бы одного спикера\");\r\n      return;\r\n    }\r\n    if (currentStep === 3) {\r\n      if (speakerQualities[currentSpeakerIndex][0] === null) {\r\n        alert(\"Выберите оценку качеств для спикера\");\r\n        return;\r\n      }\r\n      if (currentSpeakerIndex < speakersList.length - 1) {\r\n        setCurrentSpeakerIndex(currentSpeakerIndex + 1);\r\n        return; // остаёмся на этапе 3 для следующего спикера\r\n      } else {\r\n        setCurrentStep(currentStep + 1);\r\n      }\r\n      return;\r\n    }\r\n    if (currentStep === 4 && !usefulness) {\r\n      alert(\"Выберите ответ на вопрос 'Фактическая ценность информации'\");\r\n      return;\r\n    }\r\n    if (currentStep === 5 && brightThoughts.trim().length < 5) {\r\n      alert(\"Ответ на вопрос 'Самые яркие мысли с мероприятия' должен содержать минимум 5 символов\");\r\n      return;\r\n    }\r\n    if (currentStep === 7 && !impression) {\r\n      alert(\"Выберите общее впечатление от тренинга\");\r\n      return;\r\n    }\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n\r\n  // ... предыдущий код ...\r\n\r\nconst handleFinish = async () => {\r\n  if (isFinishClicked) return;\r\n  setIsFinishClicked(true);\r\n  setIsFinished(true); // Немедленно переключаем на страницу благодарности\r\n\r\n  // Формируем списки положительных и отрицательных качеств с ФИО спикеров\r\n  const positiveQualitiesList = [];\r\n  const negativeQualitiesList = [];\r\n  speakersList.forEach((speaker, idx) => {\r\n    qualityRows.forEach((row, j) => {\r\n      const selection = speakerQualities[idx][j];\r\n      if (selection === 'positive') {\r\n        positiveQualitiesList.push(`${row.positive} (${speaker.fullName})`);\r\n      } else if (selection === 'negative') {\r\n        negativeQualitiesList.push(`${row.negative} (${speaker.fullName})`);\r\n      }\r\n    });\r\n  });\r\n  const positiveQualitiesStr = positiveQualitiesList.join(', ');\r\n  const negativeQualitiesStr = negativeQualitiesList.join(', ');\r\n\r\n  const data = {\r\n    partner,\r\n    speakers: speakersList.map(s => s.fullName),\r\n    answers: {\r\n      speakerQualities, // Массив оценок для каждого спикера (5 оценок на спикера)\r\n      usefulness,\r\n      brightThoughts,\r\n      additionalSuggestions: additionalSelections,\r\n      impression,\r\n    },\r\n    dateTime: new Date().toISOString(),\r\n    positiveQualities: positiveQualitiesStr,   // добавлено\r\n    negativeQualities: negativeQualitiesStr,   // добавлено\r\n  };\r\n\r\n  try {\r\n    const response = await fetch('https://rgszh-miniapp.org/api/feedback/save', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(data),\r\n      credentials: 'include',\r\n    });\r\n    if (!response.ok) {\r\n      alert(\"Ошибка при сохранении данных\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Ошибка при отправке данных:\", error);\r\n    alert(\"Ошибка соединения с сервером\");\r\n  }\r\n};\r\n\r\n\r\n  const renderStep = () => {\r\n    switch (currentStep) {\r\n      case 1:\r\n        return (\r\n          <div>\r\n            <h2>Введите название партнёра</h2>\r\n            <Autosuggest\r\n              suggestions={partnerSuggestions}\r\n              onSuggestionsFetchRequested={({ value }) => setPartnerSuggestions(getPartnerSuggestions(value))}\r\n              onSuggestionsClearRequested={() => setPartnerSuggestions([])}\r\n              getSuggestionValue={suggestion => suggestion}\r\n              renderSuggestion={suggestion => <div>{suggestion}</div>}\r\n              inputProps={partnerInputProps}\r\n            />\r\n          </div>\r\n        );\r\n      case 2:\r\n        return (\r\n          <div>\r\n            <h2>Введите ФИО спикера(ов)</h2>\r\n            {speakersList.map((speaker, index) => (\r\n              <div key={index}>\r\n                <input\r\n                  type=\"text\"\r\n                  value={speaker.fullName}\r\n                  onChange={(e) => handleSpeakerChange(e, index)}\r\n                  placeholder=\"Введите ФИО спикера\"\r\n                />\r\n                {index === speakersList.length - 1 && (\r\n                  <button onClick={handleAddSpeaker}>Добавить спикера</button>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        );\r\n      case 3:\r\n        return (\r\n          <div>\r\n            <h2>Оцените качества спикера</h2>\r\n            <p>Оцените спикера: <strong>{speakersList[currentSpeakerIndex].fullName}</strong></p>\r\n            {qualityRows.map((row, idx) => (\r\n              <div key={idx} className=\"quality-row\">\r\n                <button\r\n                  onClick={() => handleQualitySelectForSpeaker(idx, 'positive')}\r\n                  className={speakerQualities[currentSpeakerIndex] && speakerQualities[currentSpeakerIndex][idx] === 'positive' ? 'green' : ''}\r\n                >\r\n                  {row.positive}\r\n                </button>\r\n                <button\r\n                  onClick={() => handleQualitySelectForSpeaker(idx, 'negative')}\r\n                  className={speakerQualities[currentSpeakerIndex] && speakerQualities[currentSpeakerIndex][idx] === 'negative' ? 'red' : ''}\r\n                >\r\n                  {row.negative}\r\n                </button>\r\n              </div>\r\n            ))}\r\n            {speakersList.length > 1 && currentSpeakerIndex < speakersList.length - 1 && (\r\n              <button className=\"btn next-btn\" onClick={() => setCurrentSpeakerIndex(currentSpeakerIndex + 1)}>\r\n                Далее для следующего спикера\r\n              </button>\r\n            )}\r\n          </div>\r\n        );\r\n      case 4:\r\n        return (\r\n          <div>\r\n            <h2>Фактическая ценность информации</h2>\r\n            <div className=\"usefulness-container\">\r\n              <button\r\n                onClick={() => handleUsefulness(\"Полезно в работе (буду применять на практике)\")}\r\n                className={usefulness === \"Полезно в работе (буду применять на практике)\" ? 'green' : ''}\r\n              >\r\n                Полезно в работе (буду применять на практике)\r\n              </button>\r\n              <button\r\n                onClick={() => handleUsefulness(\"Бесполезно в работе (с моими клиентами это не работает)\")}\r\n                className={usefulness === \"Бесполезно в работе (с моими клиентами это не работает)\" ? 'red' : ''}\r\n              >\r\n                Бесполезно в работе (с моими клиентами это не работает)\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      case 5:\r\n        return (\r\n          <div>\r\n            <h2>Самые яркие мысли с мероприятия</h2>\r\n            <input\r\n              type=\"text\"\r\n              value={brightThoughts}\r\n              onChange={handleBrightThoughts}\r\n              placeholder=\"Введите текст (минимум 5 символов)\"\r\n            />\r\n          </div>\r\n        );\r\n      case 6:\r\n        return (\r\n          <div>\r\n            <h2>Что стоило бы добавить в тренинг?</h2>\r\n            <div className=\"additional-container\">\r\n              {additionalOptions.map((opt, idx) => (\r\n                <button\r\n                  key={idx}\r\n                  onClick={() => toggleAdditionalSelection(opt)}\r\n                  className={additionalSelections.includes(opt) ? 'selected' : ''}\r\n                >\r\n                  {opt}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        );\r\n      case 7:\r\n        return (\r\n          <div>\r\n            <h2>Общее впечатление от тренинга</h2>\r\n            <div className=\"impression-container\">\r\n              <button onClick={() => handleImpression('sad')}>\r\n                <img src=\"/sad_smiley.png\" alt=\"С грустным смайлом\" />\r\n              </button>\r\n              <button onClick={() => handleImpression('neutral')}>\r\n                <img src=\"/neutral_smiley.png\" alt=\"Нейтральный смайл\" />\r\n              </button>\r\n              <button onClick={() => handleImpression('happy')}>\r\n                <img src=\"/happy_smiley.png\" alt=\"Счастливый смайл\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  if (isFinished) {\r\n    return (\r\n      <div className=\"thank-you-message\">\r\n        <h2>Благодарим за прохождение опроса!</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\" style={{ backgroundImage: `url(${backgroundImage})` }}>\r\n      <div className=\"logo\">\r\n        <img src={logo} alt=\"Логотип\" />\r\n      </div>\r\n      <div className=\"step-container\">\r\n        {renderStep()}\r\n        {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n        {currentStep < 7 ? (\r\n          <button className=\"btn next-btn\" onClick={handleNext}>\r\n            Далее\r\n          </button>\r\n        ) : (\r\n          <button className=\"btn next-btn\" onClick={handleFinish}>\r\n            Завершить опрос\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAOC,eAAe,MAAM,6BAA6B;AACzD,OAAOC,QAAQ,MAAM,wCAAwC;AAC7D,OAAOC,QAAQ,MAAM,wCAAwC;AAC7D,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACe,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAMiB,qBAAqB,GAAIC,KAAK,IAAK;IACvC,MAAMC,UAAU,GAAGD,KAAK,GAAGA,KAAK,CAACE,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAG,EAAE;IAC1D,OAAOF,UAAU,CAACG,MAAM,GAAG,CAAC,GACxB,EAAE,GACFjB,QAAQ,CAACkB,MAAM,CAACC,CAAC,IAAI,OAAOA,CAAC,KAAK,QAAQ,IAAIA,CAAC,CAACH,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACN,UAAU,CAAC,CAAC;EACzF,CAAC;EACD,MAAMO,eAAe,GAAGA,CAACC,KAAK,EAAE;IAAEC;EAAS,CAAC,KAAK;IAC/ChB,UAAU,CAACgB,QAAQ,CAAC;EACtB,CAAC;EACD,MAAMC,iBAAiB,GAAG;IACxBC,WAAW,EAAE,2BAA2B;IACxCZ,KAAK,EAAEP,OAAO;IACdoB,QAAQ,EAAEL,eAAe;IACzBM,YAAY,EAAE;EAChB,CAAC;;EAED;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGlC,QAAQ,CAAC,CAAC;IAAEmC,QAAQ,EAAE,EAAE;IAAEC,EAAE,EAAE;EAAE,CAAC,CAAC,CAAC;EAC3E,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BH,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAE;MAAEE,QAAQ,EAAE,EAAE;MAAEC,EAAE,EAAEH,YAAY,CAACX,MAAM,GAAG;IAAE,CAAC,CAAC,CAAC;EACnF,CAAC;EACD,MAAMgB,mBAAmB,GAAGA,CAACC,CAAC,EAAEC,KAAK,KAAK;IACxC,MAAMC,OAAO,GAAG,CAAC,GAAGR,YAAY,CAAC;IACjCQ,OAAO,CAACD,KAAK,CAAC,CAACL,QAAQ,GAAGI,CAAC,CAACG,MAAM,CAACxB,KAAK;IACxCgB,eAAe,CAACO,OAAO,CAAC;EAC1B,CAAC;;EAED;EACA,MAAME,WAAW,GAAG,CAClB;IAAEC,QAAQ,EAAE,YAAY;IAAEC,QAAQ,EAAE;EAAe,CAAC,EACpD;IAAED,QAAQ,EAAE,YAAY;IAAEC,QAAQ,EAAE;EAAY,CAAC,EACjD;IAAED,QAAQ,EAAE,cAAc;IAAEC,QAAQ,EAAE;EAAkB,CAAC,EACzD;IAAED,QAAQ,EAAE,eAAe;IAAEC,QAAQ,EAAE;EAAS,CAAC,EACjD;IAAED,QAAQ,EAAE,6BAA6B;IAAEC,QAAQ,EAAE;EAA6B,CAAC,CACpF;EACD;EACA,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG/C,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACgD,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGjD,QAAQ,CAAC,CAAC,CAAC;EACjEC,SAAS,CAAC,MAAM;IACd8C,mBAAmB,CAACd,YAAY,CAACiB,GAAG,CAAC,MAAMC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;EAClE,CAAC,EAAE,CAACnB,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMoB,6BAA6B,GAAGA,CAACC,QAAQ,EAAEC,IAAI,KAAK;IACxD,MAAMd,OAAO,GAAG,CAAC,GAAGK,gBAAgB,CAAC;IACrCL,OAAO,CAACO,mBAAmB,CAAC,CAACM,QAAQ,CAAC,GAAGC,IAAI;IAC7CR,mBAAmB,CAACN,OAAO,CAAC;EAC9B,CAAC;;EAED;EACA,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGzD,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM0D,gBAAgB,GAAIxC,KAAK,IAAK;IAClCuC,aAAa,CAACvC,KAAK,CAAC;EACtB,CAAC;;EAED;EACA,MAAM,CAACyC,cAAc,EAAEC,iBAAiB,CAAC,GAAG5D,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM6D,oBAAoB,GAAItB,CAAC,IAAK;IAClCqB,iBAAiB,CAACrB,CAAC,CAACG,MAAM,CAACxB,KAAK,CAAC;EACnC,CAAC;;EAED;EACA,MAAM4C,iBAAiB,GAAG,CACxB,UAAU,EACV,oBAAoB,EACpB,uBAAuB,EACvB,cAAc,EACd,yBAAyB,EACzB,4BAA4B,EAC5B,sCAAsC,EACtC,eAAe,CAChB;EACD,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGhE,QAAQ,CAAC,EAAE,CAAC;EACpE,MAAMiE,yBAAyB,GAAIC,MAAM,IAAK;IAC5C,IAAIH,oBAAoB,CAACtC,QAAQ,CAACyC,MAAM,CAAC,EAAE;MACzCF,uBAAuB,CAACD,oBAAoB,CAACxC,MAAM,CAAC4C,IAAI,IAAIA,IAAI,KAAKD,MAAM,CAAC,CAAC;IAC/E,CAAC,MAAM;MACLF,uBAAuB,CAAC,CAAC,GAAGD,oBAAoB,EAAEG,MAAM,CAAC,CAAC;IAC5D;EACF,CAAC;;EAED;EACA,MAAM,CAACE,UAAU,EAAEC,aAAa,CAAC,GAAGrE,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMsE,gBAAgB,GAAIpD,KAAK,IAAK;IAClCmD,aAAa,CAACnD,KAAK,CAAC;EACtB,CAAC;;EAED;EACA;EACA;EACA,MAAM,CAACqD,WAAW,EAAEC,cAAc,CAAC,GAAGxE,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACyE,UAAU,EAAEC,aAAa,CAAC,GAAG1E,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC2E,eAAe,EAAEC,kBAAkB,CAAC,GAAG5E,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAM6E,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIN,WAAW,KAAK,CAAC,IAAI,CAAC5D,OAAO,EAAE;MACjCmE,KAAK,CAAC,2BAA2B,CAAC;MAClC;IACF;IACA,IAAIP,WAAW,KAAK,CAAC,IAAItC,YAAY,CAAC,CAAC,CAAC,CAACE,QAAQ,CAACf,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC/D0D,KAAK,CAAC,gCAAgC,CAAC;MACvC;IACF;IACA,IAAIP,WAAW,KAAK,CAAC,EAAE;MACrB,IAAIzB,gBAAgB,CAACE,mBAAmB,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;QACrD8B,KAAK,CAAC,qCAAqC,CAAC;QAC5C;MACF;MACA,IAAI9B,mBAAmB,GAAGf,YAAY,CAACX,MAAM,GAAG,CAAC,EAAE;QACjD2B,sBAAsB,CAACD,mBAAmB,GAAG,CAAC,CAAC;QAC/C,OAAO,CAAC;MACV,CAAC,MAAM;QACLwB,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;MACjC;MACA;IACF;IACA,IAAIA,WAAW,KAAK,CAAC,IAAI,CAACf,UAAU,EAAE;MACpCsB,KAAK,CAAC,4DAA4D,CAAC;MACnE;IACF;IACA,IAAIP,WAAW,KAAK,CAAC,IAAIZ,cAAc,CAACvC,IAAI,CAAC,CAAC,CAACE,MAAM,GAAG,CAAC,EAAE;MACzDwD,KAAK,CAAC,uFAAuF,CAAC;MAC9F;IACF;IACA,IAAIP,WAAW,KAAK,CAAC,IAAI,CAACH,UAAU,EAAE;MACpCU,KAAK,CAAC,wCAAwC,CAAC;MAC/C;IACF;IACAN,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;EACjC,CAAC;;EAED;;EAEF,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIJ,eAAe,EAAE;IACrBC,kBAAkB,CAAC,IAAI,CAAC;IACxBF,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;;IAErB;IACA,MAAMM,qBAAqB,GAAG,EAAE;IAChC,MAAMC,qBAAqB,GAAG,EAAE;IAChChD,YAAY,CAACiD,OAAO,CAAC,CAACC,OAAO,EAAEC,GAAG,KAAK;MACrCzC,WAAW,CAACuC,OAAO,CAAC,CAACG,GAAG,EAAEC,CAAC,KAAK;QAC9B,MAAMC,SAAS,GAAGzC,gBAAgB,CAACsC,GAAG,CAAC,CAACE,CAAC,CAAC;QAC1C,IAAIC,SAAS,KAAK,UAAU,EAAE;UAC5BP,qBAAqB,CAACQ,IAAI,CAAC,GAAGH,GAAG,CAACzC,QAAQ,KAAKuC,OAAO,CAAChD,QAAQ,GAAG,CAAC;QACrE,CAAC,MAAM,IAAIoD,SAAS,KAAK,UAAU,EAAE;UACnCN,qBAAqB,CAACO,IAAI,CAAC,GAAGH,GAAG,CAACxC,QAAQ,KAAKsC,OAAO,CAAChD,QAAQ,GAAG,CAAC;QACrE;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,MAAMsD,oBAAoB,GAAGT,qBAAqB,CAACU,IAAI,CAAC,IAAI,CAAC;IAC7D,MAAMC,oBAAoB,GAAGV,qBAAqB,CAACS,IAAI,CAAC,IAAI,CAAC;IAE7D,MAAME,IAAI,GAAG;MACXjF,OAAO;MACPL,QAAQ,EAAE2B,YAAY,CAACiB,GAAG,CAAC2C,CAAC,IAAIA,CAAC,CAAC1D,QAAQ,CAAC;MAC3C2D,OAAO,EAAE;QACPhD,gBAAgB;QAAE;QAClBU,UAAU;QACVG,cAAc;QACdoC,qBAAqB,EAAEhC,oBAAoB;QAC3CK;MACF,CAAC;MACD4B,QAAQ,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MAClCC,iBAAiB,EAAEV,oBAAoB;MAAI;MAC3CW,iBAAiB,EAAET,oBAAoB,CAAI;IAC7C,CAAC;IAED,IAAI;MACF,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C,EAAE;QAC1EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACf,IAAI,CAAC;QAC1BgB,WAAW,EAAE;MACf,CAAC,CAAC;MACF,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QAChB/B,KAAK,CAAC,8BAA8B,CAAC;MACvC;IACF,CAAC,CAAC,OAAOgC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDhC,KAAK,CAAC,8BAA8B,CAAC;IACvC;EACF,CAAC;EAGC,MAAMkC,UAAU,GAAGA,CAAA,KAAM;IACvB,QAAQzC,WAAW;MACjB,KAAK,CAAC;QACJ,oBACE/D,OAAA;UAAAyG,QAAA,gBACEzG,OAAA;YAAAyG,QAAA,EAAI;UAAyB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClC7G,OAAA,CAACN,WAAW;YACVoH,WAAW,EAAEvG,kBAAmB;YAChCwG,2BAA2B,EAAEA,CAAC;cAAErG;YAAM,CAAC,KAAKF,qBAAqB,CAACC,qBAAqB,CAACC,KAAK,CAAC,CAAE;YAChGsG,2BAA2B,EAAEA,CAAA,KAAMxG,qBAAqB,CAAC,EAAE,CAAE;YAC7DyG,kBAAkB,EAAEC,UAAU,IAAIA,UAAW;YAC7CC,gBAAgB,EAAED,UAAU,iBAAIlH,OAAA;cAAAyG,QAAA,EAAMS;YAAU;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAE;YACxDO,UAAU,EAAE/F;UAAkB;YAAAqF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAEV,KAAK,CAAC;QACJ,oBACE7G,OAAA;UAAAyG,QAAA,gBACEzG,OAAA;YAAAyG,QAAA,EAAI;UAAuB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAC/BpF,YAAY,CAACiB,GAAG,CAAC,CAACiC,OAAO,EAAE3C,KAAK,kBAC/BhC,OAAA;YAAAyG,QAAA,gBACEzG,OAAA;cACE+C,IAAI,EAAC,MAAM;cACXrC,KAAK,EAAEiE,OAAO,CAAChD,QAAS;cACxBJ,QAAQ,EAAGQ,CAAC,IAAKD,mBAAmB,CAACC,CAAC,EAAEC,KAAK,CAAE;cAC/CV,WAAW,EAAC;YAAqB;cAAAoF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC,EACD7E,KAAK,KAAKP,YAAY,CAACX,MAAM,GAAG,CAAC,iBAChCd,OAAA;cAAQqH,OAAO,EAAExF,gBAAiB;cAAA4E,QAAA,EAAC;YAAgB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAC5D;UAAA,GATO7E,KAAK;YAAA0E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAUV,CACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAEV,KAAK,CAAC;QACJ,oBACE7G,OAAA;UAAAyG,QAAA,gBACEzG,OAAA;YAAAyG,QAAA,EAAI;UAAwB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjC7G,OAAA;YAAAyG,QAAA,GAAG,yFAAiB,eAAAzG,OAAA;cAAAyG,QAAA,EAAShF,YAAY,CAACe,mBAAmB,CAAC,CAACb;YAAQ;cAAA+E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,EACpF1E,WAAW,CAACO,GAAG,CAAC,CAACmC,GAAG,EAAED,GAAG,kBACxB5E,OAAA;YAAesH,SAAS,EAAC,aAAa;YAAAb,QAAA,gBACpCzG,OAAA;cACEqH,OAAO,EAAEA,CAAA,KAAMxE,6BAA6B,CAAC+B,GAAG,EAAE,UAAU,CAAE;cAC9D0C,SAAS,EAAEhF,gBAAgB,CAACE,mBAAmB,CAAC,IAAIF,gBAAgB,CAACE,mBAAmB,CAAC,CAACoC,GAAG,CAAC,KAAK,UAAU,GAAG,OAAO,GAAG,EAAG;cAAA6B,QAAA,EAE5H5B,GAAG,CAACzC;YAAQ;cAAAsE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC,eACT7G,OAAA;cACEqH,OAAO,EAAEA,CAAA,KAAMxE,6BAA6B,CAAC+B,GAAG,EAAE,UAAU,CAAE;cAC9D0C,SAAS,EAAEhF,gBAAgB,CAACE,mBAAmB,CAAC,IAAIF,gBAAgB,CAACE,mBAAmB,CAAC,CAACoC,GAAG,CAAC,KAAK,UAAU,GAAG,KAAK,GAAG,EAAG;cAAA6B,QAAA,EAE1H5B,GAAG,CAACxC;YAAQ;cAAAqE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC;UAAA,GAZDjC,GAAG;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAaR,CACN,CAAC,EACDpF,YAAY,CAACX,MAAM,GAAG,CAAC,IAAI0B,mBAAmB,GAAGf,YAAY,CAACX,MAAM,GAAG,CAAC,iBACvEd,OAAA;YAAQsH,SAAS,EAAC,cAAc;YAACD,OAAO,EAAEA,CAAA,KAAM5E,sBAAsB,CAACD,mBAAmB,GAAG,CAAC,CAAE;YAAAiE,QAAA,EAAC;UAEjG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAEV,KAAK,CAAC;QACJ,oBACE7G,OAAA;UAAAyG,QAAA,gBACEzG,OAAA;YAAAyG,QAAA,EAAI;UAA+B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxC7G,OAAA;YAAKsH,SAAS,EAAC,sBAAsB;YAAAb,QAAA,gBACnCzG,OAAA;cACEqH,OAAO,EAAEA,CAAA,KAAMnE,gBAAgB,CAAC,+CAA+C,CAAE;cACjFoE,SAAS,EAAEtE,UAAU,KAAK,+CAA+C,GAAG,OAAO,GAAG,EAAG;cAAAyD,QAAA,EAC1F;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACT7G,OAAA;cACEqH,OAAO,EAAEA,CAAA,KAAMnE,gBAAgB,CAAC,yDAAyD,CAAE;cAC3FoE,SAAS,EAAEtE,UAAU,KAAK,yDAAyD,GAAG,KAAK,GAAG,EAAG;cAAAyD,QAAA,EAClG;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAEV,KAAK,CAAC;QACJ,oBACE7G,OAAA;UAAAyG,QAAA,gBACEzG,OAAA;YAAAyG,QAAA,EAAI;UAA+B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxC7G,OAAA;YACE+C,IAAI,EAAC,MAAM;YACXrC,KAAK,EAAEyC,cAAe;YACtB5B,QAAQ,EAAE8B,oBAAqB;YAC/B/B,WAAW,EAAC;UAAoC;YAAAoF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAEV,KAAK,CAAC;QACJ,oBACE7G,OAAA;UAAAyG,QAAA,gBACEzG,OAAA;YAAAyG,QAAA,EAAI;UAAiC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1C7G,OAAA;YAAKsH,SAAS,EAAC,sBAAsB;YAAAb,QAAA,EAClCnD,iBAAiB,CAACZ,GAAG,CAAC,CAAC6E,GAAG,EAAE3C,GAAG,kBAC9B5E,OAAA;cAEEqH,OAAO,EAAEA,CAAA,KAAM5D,yBAAyB,CAAC8D,GAAG,CAAE;cAC9CD,SAAS,EAAE/D,oBAAoB,CAACtC,QAAQ,CAACsG,GAAG,CAAC,GAAG,UAAU,GAAG,EAAG;cAAAd,QAAA,EAE/Dc;YAAG,GAJC3C,GAAG;cAAA8B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKF,CACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAEV,KAAK,CAAC;QACJ,oBACE7G,OAAA;UAAAyG,QAAA,gBACEzG,OAAA;YAAAyG,QAAA,EAAI;UAA6B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtC7G,OAAA;YAAKsH,SAAS,EAAC,sBAAsB;YAAAb,QAAA,gBACnCzG,OAAA;cAAQqH,OAAO,EAAEA,CAAA,KAAMvD,gBAAgB,CAAC,KAAK,CAAE;cAAA2C,QAAA,eAC7CzG,OAAA;gBAAKwH,GAAG,EAAC,iBAAiB;gBAACC,GAAG,EAAC;cAAoB;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD,CAAC,eACT7G,OAAA;cAAQqH,OAAO,EAAEA,CAAA,KAAMvD,gBAAgB,CAAC,SAAS,CAAE;cAAA2C,QAAA,eACjDzG,OAAA;gBAAKwH,GAAG,EAAC,qBAAqB;gBAACC,GAAG,EAAC;cAAmB;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnD,CAAC,eACT7G,OAAA;cAAQqH,OAAO,EAAEA,CAAA,KAAMvD,gBAAgB,CAAC,OAAO,CAAE;cAAA2C,QAAA,eAC/CzG,OAAA;gBAAKwH,GAAG,EAAC,mBAAmB;gBAACC,GAAG,EAAC;cAAkB;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAEV;QACE,OAAO,IAAI;IACf;EACF,CAAC;EAED,IAAI5C,UAAU,EAAE;IACd,oBACEjE,OAAA;MAAKsH,SAAS,EAAC,mBAAmB;MAAAb,QAAA,eAChCzG,OAAA;QAAAyG,QAAA,EAAI;MAAiC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAEV;EAEA,oBACE7G,OAAA;IAAKsH,SAAS,EAAC,WAAW;IAACI,KAAK,EAAE;MAAE9H,eAAe,EAAE,OAAOA,eAAe;IAAI,CAAE;IAAA6G,QAAA,gBAC/EzG,OAAA;MAAKsH,SAAS,EAAC,MAAM;MAAAb,QAAA,eACnBzG,OAAA;QAAKwH,GAAG,EAAE7H,IAAK;QAAC8H,GAAG,EAAC;MAAS;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACN7G,OAAA;MAAKsH,SAAS,EAAC,gBAAgB;MAAAb,QAAA,GAC5BD,UAAU,CAAC,CAAC,EACZnG,YAAY,iBAAIL,OAAA;QAAGsH,SAAS,EAAC,eAAe;QAAAb,QAAA,EAAEpG;MAAY;QAAAqG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC/D9C,WAAW,GAAG,CAAC,gBACd/D,OAAA;QAAQsH,SAAS,EAAC,cAAc;QAACD,OAAO,EAAEhD,UAAW;QAAAoC,QAAA,EAAC;MAEtD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAET7G,OAAA;QAAQsH,SAAS,EAAC,cAAc;QAACD,OAAO,EAAE9C,YAAa;QAAAkC,QAAA,EAAC;MAExD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3G,EAAA,CAjWID,YAAY;AAAA0H,EAAA,GAAZ1H,YAAY;AAmWlB,eAAeA,YAAY;AAAC,IAAA0H,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}