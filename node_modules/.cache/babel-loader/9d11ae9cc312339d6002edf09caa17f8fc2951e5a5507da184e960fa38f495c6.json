{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shapeless\\\\Desktop\\\\miniapp\\\\src\\\\MarzaPollPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport backgroundImage from './components/background.png';\nimport logo from './components/logo.png';\nimport './MarzaPollPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = 'https://rgszh-miniapp.org';\nconst socket = io(SERVER_URL);\nconst MarzaPollPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const pollQuestion = \"Зачем продавать маржа?\";\n  const initialOptions = [{\n    text: \"Чтобы отстал руководитель\",\n    votes: 0\n  }, {\n    text: \"Чтобы перевыполнить план и заработать много деняк\",\n    votes: 0\n  }, {\n    text: \"Чтобы победить в конкурсе и полетать на самолёте\",\n    votes: 0\n  }, {\n    text: \"Чтобы клиент меня любил сильнее, чем маму\",\n    votes: 0\n  }, {\n    text: \"Какого ещё маржа? Я не в курсе\",\n    votes: 0\n  }];\n  const [options, setOptions] = useState(initialOptions);\n  const [selectedIndex, setSelectedIndex] = useState(null);\n  const [isVoted, setIsVoted] = useState(false);\n  useEffect(() => {\n    socket.on('connect', () => {\n      console.log(\"Socket connected:\", socket.id);\n    });\n    socket.on('connect_error', err => {\n      console.error(\"Socket connection error:\", err);\n    });\n    socket.on('pollResults', results => {\n      setOptions(results);\n    });\n    fetch(`${SERVER_URL}/api/poll`).then(response => response.json()).then(data => setOptions(data)).catch(err => console.error('Ошибка при fetch /api/poll:', err));\n    return () => {\n      socket.off('pollResults');\n    };\n  }, []);\n  const totalVotes = options.reduce((sum, opt) => sum + opt.votes, 0);\n  const handleOptionSelect = index => {\n    if (isVoted) return;\n    setSelectedIndex(index);\n    fetch(`${SERVER_URL}/api/poll/vote`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        index\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.success) {\n        setIsVoted(true);\n      }\n    }).catch(err => console.error('Ошибка при отправке голоса:', err));\n  };\n  const handleResetResults = () => {\n    fetch(`${SERVER_URL}/api/poll/reset`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.success) {\n        setOptions(initialOptions);\n        setIsVoted(false);\n        setSelectedIndex(null);\n      }\n    }).catch(err => console.error('Ошибка при сбросе результатов:', err));\n  };\n  const handleBack = () => {\n    navigate('/polls');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"marza-container\",\n    style: {\n      backgroundImage: `url(${backgroundImage})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"marza-logo-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Logo\",\n        className: \"marza-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"back-btn-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-btn\",\n        onClick: handleBack,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M15 18l-6-6 6-6\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            fill: \"none\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reset-btn-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset-btn\",\n        onClick: handleResetResults,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"reset-btn-icon\",\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"marza-content-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"marza-title\",\n        children: pollQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"marza-votes-counter\",\n        children: totalVotes > 0 ? `Всего голосов: ${totalVotes}` : 'Нет голосов'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), !isVoted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"marza-options-container\",\n        children: options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"marza-option-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"marzaPoll\",\n            value: idx,\n            checked: selectedIndex === idx,\n            onChange: () => handleOptionSelect(idx)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"marza-option-text\",\n            children: option.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"marza-results\",\n        children: options.map((option, idx) => {\n          const percent = totalVotes > 0 ? option.votes / totalVotes * 100 : 0;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"marza-result-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"marza-result-text\",\n              children: [option.text, \" \\u2014 \", option.votes, \" \\u0433\\u043E\\u043B\\u043E\\u0441(\\u043E\\u0432)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"marza-progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"marza-progress-bar-filled\",\n                style: {\n                  width: `${percent}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"marza-result-percent\",\n              children: [percent.toFixed(1), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(MarzaPollPage, \"AmLmUPpYotbCIFXK7DegDnIODoU=\", false, function () {\n  return [useNavigate];\n});\n_c = MarzaPollPage;\nexport default MarzaPollPage;\nvar _c;\n$RefreshReg$(_c, \"MarzaPollPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","io","backgroundImage","logo","jsxDEV","_jsxDEV","SERVER_URL","socket","MarzaPollPage","_s","navigate","pollQuestion","initialOptions","text","votes","options","setOptions","selectedIndex","setSelectedIndex","isVoted","setIsVoted","on","console","log","id","err","error","results","fetch","then","response","json","data","catch","off","totalVotes","reduce","sum","opt","handleOptionSelect","index","method","headers","body","JSON","stringify","res","success","handleResetResults","handleBack","className","style","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","xmlns","viewBox","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","fill","map","option","idx","type","name","value","checked","onChange","percent","width","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/shapeless/Desktop/miniapp/src/MarzaPollPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport backgroundImage from './components/background.png';\r\nimport logo from './components/logo.png';\r\nimport './MarzaPollPage.css';\r\n\r\nconst SERVER_URL = 'https://rgszh-miniapp.org';\r\nconst socket = io(SERVER_URL);\r\n\r\nconst MarzaPollPage = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const pollQuestion = \"Зачем продавать маржа?\";\r\n  const initialOptions = [\r\n    { text: \"Чтобы отстал руководитель\", votes: 0 },\r\n    { text: \"Чтобы перевыполнить план и заработать много деняк\", votes: 0 },\r\n    { text: \"Чтобы победить в конкурсе и полетать на самолёте\", votes: 0 },\r\n    { text: \"Чтобы клиент меня любил сильнее, чем маму\", votes: 0 },\r\n    { text: \"Какого ещё маржа? Я не в курсе\", votes: 0 }\r\n  ];\r\n\r\n  const [options, setOptions] = useState(initialOptions);\r\n  const [selectedIndex, setSelectedIndex] = useState(null);\r\n  const [isVoted, setIsVoted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    socket.on('connect', () => {\r\n      console.log(\"Socket connected:\", socket.id);\r\n    });\r\n    socket.on('connect_error', (err) => {\r\n      console.error(\"Socket connection error:\", err);\r\n    });\r\n    socket.on('pollResults', (results) => {\r\n      setOptions(results);\r\n    });\r\n\r\n    fetch(`${SERVER_URL}/api/poll`)\r\n      .then(response => response.json())\r\n      .then(data => setOptions(data))\r\n      .catch(err => console.error('Ошибка при fetch /api/poll:', err));\r\n\r\n    return () => {\r\n      socket.off('pollResults');\r\n    };\r\n  }, []);\r\n\r\n  const totalVotes = options.reduce((sum, opt) => sum + opt.votes, 0);\r\n\r\n  const handleOptionSelect = (index) => {\r\n    if (isVoted) return;\r\n    setSelectedIndex(index);\r\n\r\n    fetch(`${SERVER_URL}/api/poll/vote`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ index }),\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.success) {\r\n          setIsVoted(true);\r\n        }\r\n      })\r\n      .catch(err => console.error('Ошибка при отправке голоса:', err));\r\n  };\r\n\r\n  const handleResetResults = () => {\r\n    fetch(`${SERVER_URL}/api/poll/reset`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.success) {\r\n          setOptions(initialOptions);\r\n          setIsVoted(false);\r\n          setSelectedIndex(null);\r\n        }\r\n      })\r\n      .catch(err => console.error('Ошибка при сбросе результатов:', err));\r\n  };\r\n\r\n  const handleBack = () => {\r\n    navigate('/polls');\r\n  };\r\n\r\n  return (\r\n    <div className=\"marza-container\" style={{ backgroundImage: `url(${backgroundImage})` }}>\r\n      <div className=\"marza-logo-container\">\r\n        <img src={logo} alt=\"Logo\" className=\"marza-logo\" />\r\n      </div>\r\n\r\n      <div className=\"back-btn-container\">\r\n        <button className=\"back-btn\" onClick={handleBack}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n            <path d=\"M15 18l-6-6 6-6\"\r\n                  stroke=\"currentColor\"\r\n                  strokeWidth=\"2\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  fill=\"none\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"reset-btn-container\">\r\n        <button className=\"reset-btn\" onClick={handleResetResults}>\r\n          <span className=\"reset-btn-icon\">✖</span>\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"marza-content-wrapper\">\r\n        <h2 className=\"marza-title\">{pollQuestion}</h2>\r\n        <div className=\"marza-votes-counter\">\r\n          {totalVotes > 0 ? `Всего голосов: ${totalVotes}` : 'Нет голосов'}\r\n        </div>\r\n\r\n        {!isVoted ? (\r\n          <div className=\"marza-options-container\">\r\n            {options.map((option, idx) => (\r\n              <label key={idx} className=\"marza-option-label\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"marzaPoll\"\r\n                  value={idx}\r\n                  checked={selectedIndex === idx}\r\n                  onChange={() => handleOptionSelect(idx)}\r\n                />\r\n                <span className=\"marza-option-text\">{option.text}</span>\r\n              </label>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"marza-results\">\r\n            {options.map((option, idx) => {\r\n              const percent = totalVotes > 0 ? (option.votes / totalVotes) * 100 : 0;\r\n              return (\r\n                <div key={idx} className=\"marza-result-row\">\r\n                  <div className=\"marza-result-text\">\r\n                    {option.text} — {option.votes} голос(ов)\r\n                  </div>\r\n                  <div className=\"marza-progress-bar\">\r\n                    <div\r\n                      className=\"marza-progress-bar-filled\"\r\n                      style={{ width: `${percent}%` }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"marza-result-percent\">\r\n                    {percent.toFixed(1)}%\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarzaPollPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}