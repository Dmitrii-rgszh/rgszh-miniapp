{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shapeless\\\\Desktop\\\\miniapp\\\\src\\\\FeedbackPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport partners from './components/autosuggest/partners.json';\nimport speakers from './components/autosuggest/speakers.json';\nimport './FeedbackPage.css';\nimport logo from './components/logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedbackPage = () => {\n  _s();\n  // Состояния для опроса\n  const [partner, setPartner] = useState('');\n  const [partnerSuggestions, setPartnerSuggestions] = useState([]);\n  const [speakersList, setSpeakersList] = useState([{\n    fullName: '',\n    id: 1\n  }]);\n  const [usefulness, setUsefulness] = useState(''); // этап 4\n  const [brightThoughts, setBrightThoughts] = useState(''); // этап 5\n  const [additionalItems, setAdditionalItems] = useState([]); // этап 6\n  const [impression, setImpression] = useState(''); // этап 7\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [isFinished, setIsFinished] = useState(false);\n\n  // Функции для автодополнения партнёра\n  const getPartnerSuggestions = value => {\n    const inputValue = value.trim().toLowerCase();\n    return inputValue.length < 2 ? [] : partners.filter(p => p.toLowerCase().includes(inputValue));\n  };\n  const onSuggestionsFetchRequested = ({\n    value\n  }) => {\n    setPartnerSuggestions(getPartnerSuggestions(value));\n  };\n  const onSuggestionsClearRequested = () => {\n    setPartnerSuggestions([]);\n  };\n  const onPartnerChange = (event, {\n    newValue\n  }) => {\n    setPartner(newValue);\n  };\n  const renderSuggestion = suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: suggestion\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 42\n  }, this);\n  const partnerInputProps = {\n    placeholder: 'Введите название партнёра',\n    value: partner,\n    onChange: onPartnerChange,\n    className: 'partner-input'\n  };\n\n  // Пример логики для спикеров (аналогично автодополнению)\n  const handleAddSpeaker = () => {\n    setSpeakersList([...speakersList, {\n      fullName: '',\n      id: speakersList.length + 1\n    }]);\n  };\n  const handleSpeakerChange = (e, index) => {\n    const updated = [...speakersList];\n    updated[index].fullName = e.target.value;\n    setSpeakersList(updated);\n  };\n\n  // Рендеринг вопросов. Здесь определяем массив вопросов с соответствующими рендерами:\n  const questions = [{\n    type: 'input',\n    label: 'Название партнёра',\n    render: () => /*#__PURE__*/_jsxDEV(Autosuggest, {\n      suggestions: partnerSuggestions,\n      onSuggestionsFetchRequested: onSuggestionsFetchRequested,\n      onSuggestionsClearRequested: onSuggestionsClearRequested,\n      getSuggestionValue: s => s,\n      renderSuggestion: renderSuggestion,\n      inputProps: partnerInputProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, {\n    type: 'speakers',\n    label: 'Фамилия и имя спикера',\n    render: () => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: speakersList.map((speaker, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u0421\\u043F\\u0438\\u043A\\u0435\\u0440 \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: speaker.fullName,\n          onChange: e => handleSpeakerChange(e, index),\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0424\\u0418\\u041E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this), index === speakersList.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddSpeaker,\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u043F\\u0438\\u043A\\u0435\\u0440\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  }, {\n    type: 'usefulness',\n    label: 'Фактическая ценность информации',\n    render: () => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"usefulness-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setUsefulness('Полезно в работе (буду применять на практике)'),\n        className: usefulness === 'Полезно в работе (буду применять на практике)' ? 'green' : '',\n        children: \"\\u041F\\u043E\\u043B\\u0435\\u0437\\u043D\\u043E \\u0432 \\u0440\\u0430\\u0431\\u043E\\u0442\\u0435 (\\u0431\\u0443\\u0434\\u0443 \\u043F\\u0440\\u0438\\u043C\\u0435\\u043D\\u044F\\u0442\\u044C \\u043D\\u0430 \\u043F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0435)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setUsefulness('Бесполезно в работе (с моими клиентами это не работает)'),\n        className: usefulness === 'Бесполезно в работе (с моими клиентами это не работает)' ? 'red' : '',\n        children: \"\\u0411\\u0435\\u0441\\u043F\\u043E\\u043B\\u0435\\u0437\\u043D\\u043E \\u0432 \\u0440\\u0430\\u0431\\u043E\\u0442\\u0435 (\\u0441 \\u043C\\u043E\\u0438\\u043C\\u0438 \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0430\\u043C\\u0438 \\u044D\\u0442\\u043E \\u043D\\u0435 \\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u0435\\u0442)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)\n  }, {\n    type: 'brightThoughts',\n    label: 'Самые яркие мысли с мероприятия',\n    render: () => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: brightThoughts,\n        onChange: e => setBrightThoughts(e.target.value),\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442 (\\u043C\\u0438\\u043D\\u0438\\u043C\\u0443\\u043C 5 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)\n  }, {\n    type: 'additional',\n    label: 'Что стоило бы добавить в тренинг?',\n    render: () => {\n      const options = [\"Практики\", \"Клиентских историй\", \"Статистических данных\", \"Фишек продаж\", \"Перерывов / 'Кофе'-пауз\", \"Разбор продуктовой линейки\", \"Детальный разбор параметров продукта\", \"Ящик Prosecco\"];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"additional-container\",\n        children: options.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (additionalItems.includes(opt)) {\n              setAdditionalItems(additionalItems.filter(item => item !== opt));\n            } else {\n              setAdditionalItems([...additionalItems, opt]);\n            }\n          },\n          className: additionalItems.includes(opt) ? 'selected' : '',\n          children: opt\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    type: 'impression',\n    label: 'Общее впечатление от тренинга',\n    render: () => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"impression-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setImpression('sad'),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/sad_smiley.png\",\n          alt: \"\\u0421 \\u0433\\u0440\\u0443\\u0441\\u0442\\u043D\\u044B\\u043C \\u0441\\u043C\\u0430\\u0439\\u043B\\u043E\\u043C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setImpression('neutral'),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/neutral_smiley.png\",\n          alt: \"\\u041D\\u0435\\u0439\\u0442\\u0440\\u0430\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0441\\u043C\\u0430\\u0439\\u043B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setImpression('happy'),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/happy_smiley.png\",\n          alt: \"\\u0421\\u0447\\u0430\\u0441\\u0442\\u043B\\u0438\\u0432\\u044B\\u0439 \\u0441\\u043C\\u0430\\u0439\\u043B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this)\n  }];\n\n  // Переход к следующему вопросу или завершение опроса\n  const handleNext = () => {\n    // Валидация обязательных полей для определённых вопросов\n    if (questions[currentQuestion].type === 'usefulness' && !usefulness) {\n      alert(\"Выберите ответ на вопрос 'Фактическая ценность информации'\");\n      return;\n    }\n    if (questions[currentQuestion].type === 'brightThoughts' && brightThoughts.trim().length < 5) {\n      alert(\"Ответ на вопрос 'Самые яркие мысли с мероприятия' должен содержать минимум 5 символов\");\n      return;\n    }\n    if (questions[currentQuestion].type === 'impression' && !impression) {\n      alert(\"Выберите общее впечатление от тренинга\");\n      return;\n    }\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      handleFinish();\n    }\n  };\n\n  // Отправка данных опроса на сервер\n  const handleFinish = async () => {\n    const data = {\n      partner,\n      speakers: speakersList.map(s => s.fullName),\n      answers: {\n        usefulness,\n        brightThoughts,\n        additionalSuggestions: additionalItems,\n        impression\n      },\n      dateTime: new Date().toISOString()\n    };\n    try {\n      const response = await fetch('https://rgszh-miniapp.org/api/feedback/save', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      if (response.ok) {\n        setIsFinished(true);\n        alert(\"Спасибо за участие в опросе!\");\n      } else {\n        alert(\"Ошибка при сохранении данных\");\n      }\n    } catch (error) {\n      console.error(\"Ошибка:\", error);\n      alert(\"Ошибка соединения с сервером\");\n    }\n  };\n  const currentQuestionData = questions[currentQuestion];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedback-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"\\u041B\\u043E\\u0433\\u043E\\u0442\\u0438\\u043F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"name-vote\",\n      children: \"\\u041E\\u0446\\u0435\\u043D\\u043A\\u0430 \\u043C\\u0435\\u0440\\u043E\\u043F\\u0440\\u0438\\u044F\\u0442\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"question-label\",\n      children: currentQuestionData.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), currentQuestionData.render(), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"next-button\",\n      onClick: handleNext,\n      disabled: isFinished,\n      children: currentQuestion === questions.length - 1 ? 'Завершить опрос' : 'Далее'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n};\n_s(FeedbackPage, \"BJBr3EFrKeqp8zXzoYEhBK5BPBQ=\");\n_c = FeedbackPage;\nexport default FeedbackPage;\nvar _c;\n$RefreshReg$(_c, \"FeedbackPage\");","map":{"version":3,"names":["React","useState","Autosuggest","partners","speakers","logo","jsxDEV","_jsxDEV","FeedbackPage","_s","partner","setPartner","partnerSuggestions","setPartnerSuggestions","speakersList","setSpeakersList","fullName","id","usefulness","setUsefulness","brightThoughts","setBrightThoughts","additionalItems","setAdditionalItems","impression","setImpression","currentQuestion","setCurrentQuestion","isFinished","setIsFinished","getPartnerSuggestions","value","inputValue","trim","toLowerCase","length","filter","p","includes","onSuggestionsFetchRequested","onSuggestionsClearRequested","onPartnerChange","event","newValue","renderSuggestion","suggestion","children","fileName","_jsxFileName","lineNumber","columnNumber","partnerInputProps","placeholder","onChange","className","handleAddSpeaker","handleSpeakerChange","e","index","updated","target","questions","type","label","render","suggestions","getSuggestionValue","s","inputProps","map","speaker","onClick","options","opt","idx","item","src","alt","handleNext","alert","handleFinish","data","answers","additionalSuggestions","dateTime","Date","toISOString","response","fetch","method","headers","body","JSON","stringify","ok","error","console","currentQuestionData","disabled","_c","$RefreshReg$"],"sources":["C:/Users/shapeless/Desktop/miniapp/src/FeedbackPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport partners from './components/autosuggest/partners.json';\r\nimport speakers from './components/autosuggest/speakers.json';\r\nimport './FeedbackPage.css';\r\nimport logo from './components/logo.png';\r\n\r\nconst FeedbackPage = () => {\r\n  // Состояния для опроса\r\n  const [partner, setPartner] = useState('');\r\n  const [partnerSuggestions, setPartnerSuggestions] = useState([]);\r\n  const [speakersList, setSpeakersList] = useState([{ fullName: '', id: 1 }]);\r\n  const [usefulness, setUsefulness] = useState(''); // этап 4\r\n  const [brightThoughts, setBrightThoughts] = useState(''); // этап 5\r\n  const [additionalItems, setAdditionalItems] = useState([]); // этап 6\r\n  const [impression, setImpression] = useState(''); // этап 7\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [isFinished, setIsFinished] = useState(false);\r\n\r\n  // Функции для автодополнения партнёра\r\n  const getPartnerSuggestions = (value) => {\r\n    const inputValue = value.trim().toLowerCase();\r\n    return inputValue.length < 2 ? [] : partners.filter(p => p.toLowerCase().includes(inputValue));\r\n  };\r\n\r\n  const onSuggestionsFetchRequested = ({ value }) => {\r\n    setPartnerSuggestions(getPartnerSuggestions(value));\r\n  };\r\n\r\n  const onSuggestionsClearRequested = () => {\r\n    setPartnerSuggestions([]);\r\n  };\r\n\r\n  const onPartnerChange = (event, { newValue }) => {\r\n    setPartner(newValue);\r\n  };\r\n\r\n  const renderSuggestion = suggestion => <div>{suggestion}</div>;\r\n\r\n  const partnerInputProps = {\r\n    placeholder: 'Введите название партнёра',\r\n    value: partner,\r\n    onChange: onPartnerChange,\r\n    className: 'partner-input',\r\n  };\r\n\r\n  // Пример логики для спикеров (аналогично автодополнению)\r\n  const handleAddSpeaker = () => {\r\n    setSpeakersList([...speakersList, { fullName: '', id: speakersList.length + 1 }]);\r\n  };\r\n\r\n  const handleSpeakerChange = (e, index) => {\r\n    const updated = [...speakersList];\r\n    updated[index].fullName = e.target.value;\r\n    setSpeakersList(updated);\r\n  };\r\n\r\n  // Рендеринг вопросов. Здесь определяем массив вопросов с соответствующими рендерами:\r\n  const questions = [\r\n    {\r\n      type: 'input',\r\n      label: 'Название партнёра',\r\n      render: () => (\r\n        <Autosuggest\r\n          suggestions={partnerSuggestions}\r\n          onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n          onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n          getSuggestionValue={s => s}\r\n          renderSuggestion={renderSuggestion}\r\n          inputProps={partnerInputProps}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      type: 'speakers',\r\n      label: 'Фамилия и имя спикера',\r\n      render: () => (\r\n        <div>\r\n          {speakersList.map((speaker, index) => (\r\n            <div key={index}>\r\n              <label>Спикер {index + 1}</label>\r\n              <input\r\n                type=\"text\"\r\n                value={speaker.fullName}\r\n                onChange={e => handleSpeakerChange(e, index)}\r\n                placeholder=\"Введите ФИО\"\r\n              />\r\n              {index === speakersList.length - 1 && (\r\n                <button onClick={handleAddSpeaker}>Добавить спикера</button>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      type: 'usefulness',\r\n      label: 'Фактическая ценность информации',\r\n      render: () => (\r\n        <div className=\"usefulness-container\">\r\n          <button\r\n            onClick={() => setUsefulness('Полезно в работе (буду применять на практике)')}\r\n            className={usefulness === 'Полезно в работе (буду применять на практике)' ? 'green' : ''}\r\n          >\r\n            Полезно в работе (буду применять на практике)\r\n          </button>\r\n          <button\r\n            onClick={() => setUsefulness('Бесполезно в работе (с моими клиентами это не работает)')}\r\n            className={usefulness === 'Бесполезно в работе (с моими клиентами это не работает)' ? 'red' : ''}\r\n          >\r\n            Бесполезно в работе (с моими клиентами это не работает)\r\n          </button>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      type: 'brightThoughts',\r\n      label: 'Самые яркие мысли с мероприятия',\r\n      render: () => (\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={brightThoughts}\r\n            onChange={e => setBrightThoughts(e.target.value)}\r\n            placeholder=\"Введите текст (минимум 5 символов)\"\r\n          />\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      type: 'additional',\r\n      label: 'Что стоило бы добавить в тренинг?',\r\n      render: () => {\r\n        const options = [\r\n          \"Практики\",\r\n          \"Клиентских историй\",\r\n          \"Статистических данных\",\r\n          \"Фишек продаж\",\r\n          \"Перерывов / 'Кофе'-пауз\",\r\n          \"Разбор продуктовой линейки\",\r\n          \"Детальный разбор параметров продукта\",\r\n          \"Ящик Prosecco\",\r\n        ];\r\n        return (\r\n          <div className=\"additional-container\">\r\n            {options.map((opt, idx) => (\r\n              <button\r\n                key={idx}\r\n                onClick={() => {\r\n                  if (additionalItems.includes(opt)) {\r\n                    setAdditionalItems(additionalItems.filter(item => item !== opt));\r\n                  } else {\r\n                    setAdditionalItems([...additionalItems, opt]);\r\n                  }\r\n                }}\r\n                className={additionalItems.includes(opt) ? 'selected' : ''}\r\n              >\r\n                {opt}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      type: 'impression',\r\n      label: 'Общее впечатление от тренинга',\r\n      render: () => (\r\n        <div className=\"impression-container\">\r\n          <button onClick={() => setImpression('sad')}>\r\n            <img src=\"/sad_smiley.png\" alt=\"С грустным смайлом\" />\r\n          </button>\r\n          <button onClick={() => setImpression('neutral')}>\r\n            <img src=\"/neutral_smiley.png\" alt=\"Нейтральный смайл\" />\r\n          </button>\r\n          <button onClick={() => setImpression('happy')}>\r\n            <img src=\"/happy_smiley.png\" alt=\"Счастливый смайл\" />\r\n          </button>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // Переход к следующему вопросу или завершение опроса\r\n  const handleNext = () => {\r\n    // Валидация обязательных полей для определённых вопросов\r\n    if (questions[currentQuestion].type === 'usefulness' && !usefulness) {\r\n      alert(\"Выберите ответ на вопрос 'Фактическая ценность информации'\");\r\n      return;\r\n    }\r\n    if (questions[currentQuestion].type === 'brightThoughts' && brightThoughts.trim().length < 5) {\r\n      alert(\"Ответ на вопрос 'Самые яркие мысли с мероприятия' должен содержать минимум 5 символов\");\r\n      return;\r\n    }\r\n    if (questions[currentQuestion].type === 'impression' && !impression) {\r\n      alert(\"Выберите общее впечатление от тренинга\");\r\n      return;\r\n    }\r\n    if (currentQuestion < questions.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n    } else {\r\n      handleFinish();\r\n    }\r\n  };\r\n\r\n  // Отправка данных опроса на сервер\r\n  const handleFinish = async () => {\r\n    const data = {\r\n      partner,\r\n      speakers: speakersList.map(s => s.fullName),\r\n      answers: {\r\n        usefulness,\r\n        brightThoughts,\r\n        additionalSuggestions: additionalItems,\r\n        impression,\r\n      },\r\n      dateTime: new Date().toISOString(),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('https://rgszh-miniapp.org/api/feedback/save', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setIsFinished(true);\r\n        alert(\"Спасибо за участие в опросе!\");\r\n      } else {\r\n        alert(\"Ошибка при сохранении данных\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Ошибка:\", error);\r\n      alert(\"Ошибка соединения с сервером\");\r\n    }\r\n  };\r\n\r\n  const currentQuestionData = questions[currentQuestion];\r\n\r\n  return (\r\n    <div className=\"feedback-container\">\r\n      <div className=\"logo\">\r\n        <img src={logo} alt=\"Логотип\" />\r\n      </div>\r\n      <h1 className=\"name-vote\">Оценка мероприятия</h1>\r\n      <h2 className=\"question-label\">{currentQuestionData.label}</h2>\r\n      {currentQuestionData.render()}\r\n      <button className=\"next-button\" onClick={handleNext} disabled={isFinished}>\r\n        {currentQuestion === questions.length - 1 ? 'Завершить опрос' : 'Далее'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}