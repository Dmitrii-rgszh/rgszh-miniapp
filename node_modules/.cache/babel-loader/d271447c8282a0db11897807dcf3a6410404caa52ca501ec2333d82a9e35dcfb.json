{"ast":null,"code":"import React,{useEffect,useState,useLayoutEffect}from'react';import{useSwipeable}from'react-swipeable';import{useNavigate}from'react-router-dom';import backgroundImage from'./components/background.png';import assessmentQR from'./components/QR/assessment.png';// пример иконки для QR\nimport'./PollsPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PollsPage=()=>{const navigate=useNavigate();const[qrModal,setQrModal]=useState(null);const[qrTitle,setQrTitle]=useState('');const[isQRLoading,setIsQRLoading]=useState(true);// При заходе на страницу скроллим вверх\nuseLayoutEffect(()=>{window.scrollTo(0,0);},[]);useEffect(()=>{setTimeout(()=>{window.scrollTo(0,0);},100);},[]);// Обработчики свайпа\nconst swipeHandlers=useSwipeable({onSwipedLeft:()=>navigate('/register')// пример: свайп влево переходит на /register\n});// Пример данных пользователя\nconst user={isRegistered:true,accessLevel:1// 1 — допустим, может генерировать QR\n};// Функция генерации URL для QR-кода (через quickchart.io)\nconst getQRCodeUrl=targetUrl=>{return`https://quickchart.io/qr?text=${encodeURIComponent(targetUrl)}&size=200`;};// Список опросов\nconst polls=[{label:'Оценка кандидата',path:'/assessment'},{label:'Обратная связь',path:'/feedback'}];// Клик по иконке QR\nconst handleQRClick=poll=>{const fullUrl=window.location.origin+poll.path;const qrUrl=getQRCodeUrl(fullUrl);setQrTitle(poll.label);setIsQRLoading(true);// небольшая задержка, потом показываем\nsetTimeout(()=>{setQrModal(qrUrl);},100);};return/*#__PURE__*/_jsxs(\"div\",{className:\"container-polls\",style:{backgroundImage:`url(${backgroundImage})`},...swipeHandlers,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043E\\u043F\\u0440\\u043E\\u0441\\u043E\\u0432\"}),polls.map((poll,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"poll-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"poll-btn\",onClick:()=>navigate(poll.path),children:/*#__PURE__*/_jsx(\"span\",{className:\"button-text\",children:poll.label})}),user.isRegistered&&user.accessLevel===1&&/*#__PURE__*/_jsx(\"button\",{className:\"qr-btn\",onClick:()=>handleQRClick(poll),children:/*#__PURE__*/_jsx(\"img\",{src:assessmentQR,alt:\"QR Code\",className:\"button-icon\"})})]},index)),qrModal&&/*#__PURE__*/_jsx(\"div\",{className:\"qr-modal-overlay\",onClick:()=>setQrModal(null),children:/*#__PURE__*/_jsxs(\"div\",{className:\"qr-modal-content\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"qr-title\",children:qrTitle}),/*#__PURE__*/_jsxs(\"div\",{className:\"qr-image-wrapper\",style:{position:'relative',width:'280px',height:'280px'},children:[isQRLoading&&/*#__PURE__*/_jsx(\"svg\",{className:\"spinner\",viewBox:\"0 0 50 50\",children:/*#__PURE__*/_jsx(\"circle\",{className:\"path\",cx:\"25\",cy:\"25\",r:\"20\",fill:\"none\",strokeWidth:\"5\"})}),/*#__PURE__*/_jsx(\"img\",{src:qrModal,alt:\"QR Code\",className:\"qr-image\",onLoad:()=>setIsQRLoading(false),style:isQRLoading?{display:'none'}:{}})]})]})})]});};export default PollsPage;","map":{"version":3,"names":["React","useEffect","useState","useLayoutEffect","useSwipeable","useNavigate","backgroundImage","assessmentQR","jsx","_jsx","jsxs","_jsxs","PollsPage","navigate","qrModal","setQrModal","qrTitle","setQrTitle","isQRLoading","setIsQRLoading","window","scrollTo","setTimeout","swipeHandlers","onSwipedLeft","user","isRegistered","accessLevel","getQRCodeUrl","targetUrl","encodeURIComponent","polls","label","path","handleQRClick","poll","fullUrl","location","origin","qrUrl","className","style","children","map","index","onClick","src","alt","position","width","height","viewBox","cx","cy","r","fill","strokeWidth","onLoad","display"],"sources":["C:/Users/shapeless/Desktop/miniapp/src/PollsPage.js"],"sourcesContent":["import React, { useEffect, useState, useLayoutEffect } from 'react';\r\nimport { useSwipeable } from 'react-swipeable';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport backgroundImage from './components/background.png';\r\nimport assessmentQR from './components/QR/assessment.png'; // пример иконки для QR\r\nimport './PollsPage.css';\r\n\r\nconst PollsPage = () => {\r\n  const navigate = useNavigate();\r\n  const [qrModal, setQrModal] = useState(null);\r\n  const [qrTitle, setQrTitle] = useState('');\r\n  const [isQRLoading, setIsQRLoading] = useState(true);\r\n\r\n  // При заходе на страницу скроллим вверх\r\n  useLayoutEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      window.scrollTo(0, 0);\r\n    }, 100);\r\n  }, []);\r\n\r\n  // Обработчики свайпа\r\n  const swipeHandlers = useSwipeable({\r\n    onSwipedLeft: () => navigate('/register'), // пример: свайп влево переходит на /register\r\n  });\r\n\r\n  // Пример данных пользователя\r\n  const user = {\r\n    isRegistered: true,\r\n    accessLevel: 1, // 1 — допустим, может генерировать QR\r\n  };\r\n\r\n  // Функция генерации URL для QR-кода (через quickchart.io)\r\n  const getQRCodeUrl = (targetUrl) => {\r\n    return `https://quickchart.io/qr?text=${encodeURIComponent(targetUrl)}&size=200`;\r\n  };\r\n\r\n  // Список опросов\r\n  const polls = [\r\n    { label: 'Оценка кандидата', path: '/assessment' },\r\n    { label: 'Обратная связь', path: '/feedback' },\r\n  ];\r\n\r\n  // Клик по иконке QR\r\n  const handleQRClick = (poll) => {\r\n    const fullUrl = window.location.origin + poll.path;\r\n    const qrUrl = getQRCodeUrl(fullUrl);\r\n    setQrTitle(poll.label);\r\n    setIsQRLoading(true);\r\n    // небольшая задержка, потом показываем\r\n    setTimeout(() => {\r\n      setQrModal(qrUrl);\r\n    }, 100);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"container-polls\"\r\n      style={{ backgroundImage: `url(${backgroundImage})` }}\r\n      {...swipeHandlers}\r\n    >\r\n      <h2>Список опросов</h2>\r\n\r\n      {polls.map((poll, index) => (\r\n        <div key={index} className=\"poll-container\">\r\n          {/* Кнопка с названием опроса */}\r\n          <button\r\n            className=\"poll-btn\"\r\n            onClick={() => navigate(poll.path)}\r\n          >\r\n            <span className=\"button-text\">{poll.label}</span>\r\n          </button>\r\n\r\n          {/* Кнопка с QR (доступна, если user.accessLevel === 1) */}\r\n          {user.isRegistered && user.accessLevel === 1 && (\r\n            <button className=\"qr-btn\" onClick={() => handleQRClick(poll)}>\r\n              <img\r\n                src={assessmentQR}\r\n                alt=\"QR Code\"\r\n                className=\"button-icon\"\r\n              />\r\n            </button>\r\n          )}\r\n        </div>\r\n      ))}\r\n\r\n      {/* Модальное окно с QR-кодом, если пользователь кликнул на иконку */}\r\n      {qrModal && (\r\n        <div\r\n          className=\"qr-modal-overlay\"\r\n          onClick={() => setQrModal(null)}\r\n        >\r\n          <div className=\"qr-modal-content\">\r\n            <h3 className=\"qr-title\">{qrTitle}</h3>\r\n            <div\r\n              className=\"qr-image-wrapper\"\r\n              style={{\r\n                position: 'relative',\r\n                width: '280px',\r\n                height: '280px',\r\n              }}\r\n            >\r\n              {isQRLoading && (\r\n                <svg className=\"spinner\" viewBox=\"0 0 50 50\">\r\n                  <circle\r\n                    className=\"path\"\r\n                    cx=\"25\"\r\n                    cy=\"25\"\r\n                    r=\"20\"\r\n                    fill=\"none\"\r\n                    strokeWidth=\"5\"\r\n                  />\r\n                </svg>\r\n              )}\r\n              <img\r\n                src={qrModal}\r\n                alt=\"QR Code\"\r\n                className=\"qr-image\"\r\n                onLoad={() => setIsQRLoading(false)}\r\n                style={isQRLoading ? { display: 'none' } : {}}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PollsPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}