{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shapeless\\\\Desktop\\\\miniapp\\\\src\\\\FeedbackPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Autosuggest from 'react-autosuggest';\nimport partners from './components/autosuggest/partners.json';\nimport speakers from './components/autosuggest/speakers.json';\nimport './FeedbackPage.css';\nimport logo from './components/logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedbackPage = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // Состояния\n  const [partner, setPartner] = useState('');\n  const [partnerSuggestions, setPartnerSuggestions] = useState([]);\n  const [speakersList, setSpeakersList] = useState([{\n    fullName: '',\n    id: 1\n  }]);\n  // Для оценки качеств спикера (оригинальный вопрос)\n  const [selectedRows, setSelectedRows] = useState(Array(5).fill(null));\n\n  // Новые состояния для шагов 4–7\n  const [usefulness, setUsefulness] = useState(''); // шаг 4\n  const [brightThoughts, setBrightThoughts] = useState(''); // шаг 5\n  const [additionalItems, setAdditionalItems] = useState([]); // шаг 6\n  const [impression, setImpression] = useState(''); // шаг 7\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [isFinished, setIsFinished] = useState(false);\n\n  // -- ЛОГИКА ДЛЯ ПАРТНЕРА --\n  const getPartnerSuggestions = value => {\n    const trimmedValue = value && typeof value === 'string' ? value.trim().toLowerCase() : '';\n    if (!trimmedValue || trimmedValue.length < 2) {\n      return [];\n    }\n    return partners.filter(partner => partner.toLowerCase().includes(trimmedValue));\n  };\n  const onSuggestionsFetchRequested = ({\n    value\n  }) => {\n    setPartnerSuggestions(getPartnerSuggestions(value));\n  };\n  const onSuggestionsClearRequested = () => {\n    setPartnerSuggestions([]);\n  };\n  const onPartnerChange = (event, {\n    newValue\n  }) => {\n    setPartner(newValue);\n    // При изменении партнера сбрасываем список спикеров\n    setSpeakersList([{\n      fullName: '',\n      id: 1\n    }]);\n  };\n  const renderSuggestion = suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: suggestion\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 44\n  }, this);\n  const partnerInputProps = {\n    placeholder: 'Введите название партнера',\n    value: partner,\n    onChange: onPartnerChange,\n    className: 'partner-input'\n  };\n\n  // -- ЛОГИКА ДЛЯ СПИКЕРОВ --\n  const handleAddSpeaker = () => {\n    setSpeakersList([...speakersList, {\n      fullName: '',\n      id: speakersList.length + 1\n    }]);\n  };\n  const handleSpeakerChange = (e, index) => {\n    const updatedSpeakers = [...speakersList];\n    updatedSpeakers[index].fullName = e.target.value || '';\n    setSpeakersList(updatedSpeakers);\n  };\n  const getSpeakerSuggestions = value => {\n    const trimmedValue = value && typeof value === 'string' ? value.trim().toLowerCase() : '';\n    if (!trimmedValue || trimmedValue.length < 2) {\n      return [];\n    }\n    return speakers.filter(speaker => speaker.toLowerCase().includes(trimmedValue));\n  };\n  const handleSpeakerSuggestionsFetchRequested = (index, {\n    value\n  }) => {\n    const updatedSpeakers = [...speakersList];\n    updatedSpeakers[index].suggestions = getSpeakerSuggestions(value);\n    setSpeakersList(updatedSpeakers);\n  };\n  const handleSpeakerSuggestionsClearRequested = index => {\n    const updatedSpeakers = [...speakersList];\n    updatedSpeakers[index].suggestions = [];\n    setSpeakersList(updatedSpeakers);\n  };\n  const handleSpeakerSuggestionSelected = (event, {\n    suggestion\n  }, index) => {\n    const updatedSpeakers = [...speakersList];\n    updatedSpeakers[index].fullName = suggestion;\n    setSpeakersList(updatedSpeakers);\n  };\n\n  // -- ЛОГИКА ДЛЯ КАЧЕСТВ (оригинальный вопрос) --\n  const qualitiesData = [{\n    positive: 'Экспертный',\n    negative: 'Некомпетентный'\n  }, {\n    positive: 'Энергичный',\n    negative: 'Пассивный'\n  }, {\n    positive: 'Мотивирующий',\n    negative: 'Невдохновляющий'\n  }, {\n    positive: 'Харизматичный',\n    negative: 'Душный'\n  }, {\n    positive: 'Доступно доносит информацию',\n    negative: 'Говорит сложными терминами'\n  }];\n  const handleQualityChange = (rowIndex, isPositive) => {\n    setSelectedRows(prev => {\n      const newRows = [...prev];\n      newRows[rowIndex] = isPositive ? 'positive' : 'negative';\n      return newRows;\n    });\n  };\n\n  // -- НОВЫЕ ВОПРОСЫ --\n\n  // Шаг 4. Фактическая ценность информации\n  // Две кнопки: только один выбор обязателен\n  const renderUsefulness = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"usefulness-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setUsefulness('positive'),\n      className: usefulness === 'positive' ? 'green' : '',\n      children: \"\\u041F\\u043E\\u043B\\u0435\\u0437\\u043D\\u043E \\u0432 \\u0440\\u0430\\u0431\\u043E\\u0442\\u0435 (\\u0431\\u0443\\u0434\\u0443 \\u043F\\u0440\\u0438\\u043C\\u0435\\u043D\\u044F\\u0442\\u044C \\u043D\\u0430 \\u043F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0435)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setUsefulness('negative'),\n      className: usefulness === 'negative' ? 'red' : '',\n      children: \"\\u0411\\u0435\\u0441\\u043F\\u043E\\u043B\\u0435\\u0437\\u043D\\u043E \\u0432 \\u0440\\u0430\\u0431\\u043E\\u0442\\u0435 (\\u0441 \\u043C\\u043E\\u0438\\u043C\\u0438 \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0430\\u043C\\u0438 \\u044D\\u0442\\u043E \\u043D\\u0435 \\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u0435\\u0442)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n\n  // Шаг 5. Самые яркие мысли с мероприятия\n  const renderBrightThoughts = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bright-thoughts-container\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: brightThoughts,\n      onChange: e => setBrightThoughts(e.target.value),\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u0432\\u043E\\u0438 \\u043C\\u044B\\u0441\\u043B\\u0438 (\\u043C\\u0438\\u043D\\u0438\\u043C\\u0443\\u043C 5 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n\n  // Шаг 6. Что стоило бы добавить в тренинг?\n  const additionalOptions = [\"Практики\", \"Клиентских историй\", \"Статистических данных\", \"Фишек продаж\", \"Перерывов / 'Кофе'-пауз\", \"Разбор продуктовой линейки\", \"Детальный разбор параметров продукта\", \"Ящик Prosecco\"];\n  const renderAdditional = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"additional-container\",\n    children: additionalOptions.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (additionalItems.includes(item)) {\n          setAdditionalItems(additionalItems.filter(i => i !== item));\n        } else {\n          setAdditionalItems([...additionalItems, item]);\n        }\n      },\n      className: additionalItems.includes(item) ? 'selected' : '',\n      children: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n\n  // Шаг 7. Общее впечатление от тренинга (три смайлика)\n  // Для простоты используем кнопки с текстом, замените на изображения по необходимости\n  const renderImpression = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"impression-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setImpression('sad'),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"sad_smiley.png\",\n        alt: \"\\u0421 \\u0433\\u0440\\u0443\\u0441\\u0442\\u043D\\u044B\\u043C \\u0441\\u043C\\u0430\\u0439\\u043B\\u043E\\u043C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setImpression('neutral'),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"neutral_smiley.png\",\n        alt: \"\\u041D\\u0435\\u0439\\u0442\\u0440\\u0430\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0441\\u043C\\u0430\\u0439\\u043B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setImpression('happy'),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"happy_smiley.png\",\n        alt: \"\\u0421\\u0443\\u043F\\u0435\\u0440-\\u0441\\u0447\\u0430\\u0441\\u0442\\u043B\\u0438\\u0432\\u044B\\u0439 \\u0441\\u043C\\u0430\\u0439\\u043B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n\n  // Массив вопросов с рендер-функциями\n  const questions = [{\n    type: 'input',\n    label: 'Название партнера',\n    render: () => /*#__PURE__*/_jsxDEV(Autosuggest, {\n      suggestions: partnerSuggestions,\n      onSuggestionsFetchRequested: onSuggestionsFetchRequested,\n      onSuggestionsClearRequested: onSuggestionsClearRequested,\n      getSuggestionValue: suggestion => suggestion,\n      renderSuggestion: renderSuggestion,\n      inputProps: partnerInputProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this)\n  }, {\n    type: 'speakers',\n    label: 'Фамилия и имя спикера',\n    render: () => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: speakersList.map((speaker, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"subquestion-name\",\n          children: [\"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F \\u0438 \\u0438\\u043C\\u044F \\u0441\\u043F\\u0438\\u043A\\u0435\\u0440\\u0430 \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Autosuggest, {\n          suggestions: speaker.suggestions || [],\n          onSuggestionsFetchRequested: params => handleSpeakerSuggestionsFetchRequested(index, params),\n          onSuggestionsClearRequested: () => handleSpeakerSuggestionsClearRequested(index),\n          onSuggestionSelected: (event, data) => handleSpeakerSuggestionSelected(event, data, index),\n          getSuggestionValue: suggestion => suggestion,\n          renderSuggestion: suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: suggestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 51\n          }, this),\n          inputProps: {\n            value: speaker.fullName,\n            onChange: e => handleSpeakerChange(e, index),\n            placeholder: 'Введите фамилию и имя'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }, this), index === speakersList.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddSpeaker,\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0435\\u0449\\u0435 \\u0441\\u043F\\u0438\\u043A\\u0435\\u0440\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }, this)\n  }, {\n    type: 'qualities',\n    label: 'Оценка качеств спикера',\n    render: () => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: qualitiesData.map((item, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quality-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleQualityChange(rowIndex, true),\n          className: selectedRows[rowIndex] === 'positive' ? 'green' : '',\n          children: item.positive\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleQualityChange(rowIndex, false),\n          className: selectedRows[rowIndex] === 'negative' ? 'red' : '',\n          children: item.negative\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 15\n        }, this)]\n      }, rowIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }, this)\n  }, {\n    type: 'usefulness',\n    label: 'Фактическая ценность информации',\n    render: renderUsefulness\n  }, {\n    type: 'brightThoughts',\n    label: 'Самые яркие мысли с мероприятия',\n    render: renderBrightThoughts\n  }, {\n    type: 'additional',\n    label: 'Что стоило бы добавить в тренинг?',\n    render: renderAdditional\n  }, {\n    type: 'impression',\n    label: 'Общее впечатление от тренинга',\n    render: renderImpression\n  }];\n\n  // Переход к следующему вопросу\n  const handleNext = () => {\n    // Для вопросов, где выбор обязателен, можно добавить валидацию\n    if (currentQuestion === 3 && !usefulness) {\n      alert(\"Выберите ответ на вопрос 'Фактическая ценность информации'\");\n      return;\n    }\n    if (currentQuestion === 4 && brightThoughts.trim().length < 5) {\n      alert(\"Ответ на вопрос 'Самые яркие мысли с мероприятия' должен содержать минимум 5 символов\");\n      return;\n    }\n    if (currentQuestion === 6 && !impression) {\n      alert(\"Выберите общее впечатление от тренинга\");\n      return;\n    }\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      handleFinish();\n    }\n  };\n\n  // Завершение опроса и отправка данных\n  const handleFinish = async () => {\n    // Пример формирования данных; адаптируйте по необходимости\n    const data = {\n      partner,\n      speakers: speakersList.map(speaker => speaker.fullName).join(', '),\n      selectedQualities: selectedRows,\n      usefulness,\n      brightThoughts,\n      additionalItems,\n      impression,\n      dateTime: new Date().toISOString()\n    };\n    try {\n      const response = await fetch(\"https://rgszh-miniapp.org/api/proxy/feedback/save\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      if (response.ok) {\n        setIsFinished(true);\n        alert('Спасибо за участие в опросе!');\n      } else {\n        alert('Ошибка при сохранении данных');\n      }\n    } catch (error) {\n      console.error('Ошибка:', error);\n      alert('Ошибка соединения с сервером');\n    }\n  };\n  const currentQuestionData = questions[currentQuestion];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedback-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"\\u041B\\u043E\\u0433\\u043E\\u0442\\u0438\\u043F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"name-vote\",\n      children: \"\\u041E\\u0446\\u0435\\u043D\\u043A\\u0430 \\u043C\\u0435\\u0440\\u043E\\u043F\\u0440\\u0438\\u044F\\u0442\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"question-label\",\n      children: currentQuestionData.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this), currentQuestionData.type === 'input' && currentQuestionData.render(), currentQuestionData.type === 'speakers' && currentQuestionData.render(), currentQuestionData.type === 'qualities' && currentQuestionData.render(), currentQuestionData.type === 'usefulness' && currentQuestionData.render(), currentQuestionData.type === 'brightThoughts' && currentQuestionData.render(), currentQuestionData.type === 'additional' && currentQuestionData.render(), currentQuestionData.type === 'impression' && currentQuestionData.render(), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"next-button\",\n      onClick: handleNext,\n      disabled: isFinished,\n      children: currentQuestion === questions.length - 1 ? 'Завершить опрос' : 'Далее'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 346,\n    columnNumber: 5\n  }, this);\n};\n_s(FeedbackPage, \"sCdsZkfADiLiyd/id+O1VhzuoJo=\", false, function () {\n  return [useNavigate];\n});\n_c = FeedbackPage;\nexport default FeedbackPage;\nvar _c;\n$RefreshReg$(_c, \"FeedbackPage\");","map":{"version":3,"names":["React","useState","useNavigate","Autosuggest","partners","speakers","logo","jsxDEV","_jsxDEV","FeedbackPage","_s","navigate","partner","setPartner","partnerSuggestions","setPartnerSuggestions","speakersList","setSpeakersList","fullName","id","selectedRows","setSelectedRows","Array","fill","usefulness","setUsefulness","brightThoughts","setBrightThoughts","additionalItems","setAdditionalItems","impression","setImpression","currentQuestion","setCurrentQuestion","isFinished","setIsFinished","getPartnerSuggestions","value","trimmedValue","trim","toLowerCase","length","filter","includes","onSuggestionsFetchRequested","onSuggestionsClearRequested","onPartnerChange","event","newValue","renderSuggestion","suggestion","children","fileName","_jsxFileName","lineNumber","columnNumber","partnerInputProps","placeholder","onChange","className","handleAddSpeaker","handleSpeakerChange","e","index","updatedSpeakers","target","getSpeakerSuggestions","speaker","handleSpeakerSuggestionsFetchRequested","suggestions","handleSpeakerSuggestionsClearRequested","handleSpeakerSuggestionSelected","qualitiesData","positive","negative","handleQualityChange","rowIndex","isPositive","prev","newRows","renderUsefulness","onClick","renderBrightThoughts","type","additionalOptions","renderAdditional","map","item","i","renderImpression","src","alt","questions","label","render","getSuggestionValue","inputProps","params","onSuggestionSelected","data","handleNext","alert","handleFinish","join","selectedQualities","dateTime","Date","toISOString","response","fetch","method","headers","body","JSON","stringify","ok","error","console","currentQuestionData","disabled","_c","$RefreshReg$"],"sources":["C:/Users/shapeless/Desktop/miniapp/src/FeedbackPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport partners from './components/autosuggest/partners.json';\r\nimport speakers from './components/autosuggest/speakers.json';\r\nimport './FeedbackPage.css';\r\nimport logo from './components/logo.png';\r\n\r\nconst FeedbackPage = () => {\r\n  const navigate = useNavigate();\r\n\r\n  // Состояния\r\n  const [partner, setPartner] = useState('');\r\n  const [partnerSuggestions, setPartnerSuggestions] = useState([]);\r\n  const [speakersList, setSpeakersList] = useState([{ fullName: '', id: 1 }]);\r\n  // Для оценки качеств спикера (оригинальный вопрос)\r\n  const [selectedRows, setSelectedRows] = useState(Array(5).fill(null));\r\n\r\n  // Новые состояния для шагов 4–7\r\n  const [usefulness, setUsefulness] = useState(''); // шаг 4\r\n  const [brightThoughts, setBrightThoughts] = useState(''); // шаг 5\r\n  const [additionalItems, setAdditionalItems] = useState([]); // шаг 6\r\n  const [impression, setImpression] = useState(''); // шаг 7\r\n\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [isFinished, setIsFinished] = useState(false);\r\n\r\n  // -- ЛОГИКА ДЛЯ ПАРТНЕРА --\r\n  const getPartnerSuggestions = (value) => {\r\n    const trimmedValue = value && typeof value === 'string' ? value.trim().toLowerCase() : '';\r\n    if (!trimmedValue || trimmedValue.length < 2) {\r\n      return [];\r\n    }\r\n    return partners.filter((partner) => partner.toLowerCase().includes(trimmedValue));\r\n  };\r\n\r\n  const onSuggestionsFetchRequested = ({ value }) => {\r\n    setPartnerSuggestions(getPartnerSuggestions(value));\r\n  };\r\n\r\n  const onSuggestionsClearRequested = () => {\r\n    setPartnerSuggestions([]);\r\n  };\r\n\r\n  const onPartnerChange = (event, { newValue }) => {\r\n    setPartner(newValue);\r\n    // При изменении партнера сбрасываем список спикеров\r\n    setSpeakersList([{ fullName: '', id: 1 }]);\r\n  };\r\n\r\n  const renderSuggestion = (suggestion) => <div>{suggestion}</div>;\r\n\r\n  const partnerInputProps = {\r\n    placeholder: 'Введите название партнера',\r\n    value: partner,\r\n    onChange: onPartnerChange,\r\n    className: 'partner-input',\r\n  };\r\n\r\n  // -- ЛОГИКА ДЛЯ СПИКЕРОВ --\r\n  const handleAddSpeaker = () => {\r\n    setSpeakersList([...speakersList, { fullName: '', id: speakersList.length + 1 }]);\r\n  };\r\n\r\n  const handleSpeakerChange = (e, index) => {\r\n    const updatedSpeakers = [...speakersList];\r\n    updatedSpeakers[index].fullName = e.target.value || '';\r\n    setSpeakersList(updatedSpeakers);\r\n  };\r\n\r\n  const getSpeakerSuggestions = (value) => {\r\n    const trimmedValue = value && typeof value === 'string' ? value.trim().toLowerCase() : '';\r\n    if (!trimmedValue || trimmedValue.length < 2) {\r\n      return [];\r\n    }\r\n    return speakers.filter((speaker) => speaker.toLowerCase().includes(trimmedValue));\r\n  };\r\n\r\n  const handleSpeakerSuggestionsFetchRequested = (index, { value }) => {\r\n    const updatedSpeakers = [...speakersList];\r\n    updatedSpeakers[index].suggestions = getSpeakerSuggestions(value);\r\n    setSpeakersList(updatedSpeakers);\r\n  };\r\n\r\n  const handleSpeakerSuggestionsClearRequested = (index) => {\r\n    const updatedSpeakers = [...speakersList];\r\n    updatedSpeakers[index].suggestions = [];\r\n    setSpeakersList(updatedSpeakers);\r\n  };\r\n\r\n  const handleSpeakerSuggestionSelected = (event, { suggestion }, index) => {\r\n    const updatedSpeakers = [...speakersList];\r\n    updatedSpeakers[index].fullName = suggestion;\r\n    setSpeakersList(updatedSpeakers);\r\n  };\r\n\r\n  // -- ЛОГИКА ДЛЯ КАЧЕСТВ (оригинальный вопрос) --\r\n  const qualitiesData = [\r\n    { positive: 'Экспертный', negative: 'Некомпетентный' },\r\n    { positive: 'Энергичный', negative: 'Пассивный' },\r\n    { positive: 'Мотивирующий', negative: 'Невдохновляющий' },\r\n    { positive: 'Харизматичный', negative: 'Душный' },\r\n    { positive: 'Доступно доносит информацию', negative: 'Говорит сложными терминами' },\r\n  ];\r\n\r\n  const handleQualityChange = (rowIndex, isPositive) => {\r\n    setSelectedRows((prev) => {\r\n      const newRows = [...prev];\r\n      newRows[rowIndex] = isPositive ? 'positive' : 'negative';\r\n      return newRows;\r\n    });\r\n  };\r\n\r\n  // -- НОВЫЕ ВОПРОСЫ --\r\n\r\n  // Шаг 4. Фактическая ценность информации\r\n  // Две кнопки: только один выбор обязателен\r\n  const renderUsefulness = () => (\r\n    <div className=\"usefulness-container\">\r\n      <button\r\n        onClick={() => setUsefulness('positive')}\r\n        className={usefulness === 'positive' ? 'green' : ''}\r\n      >\r\n        Полезно в работе (буду применять на практике)\r\n      </button>\r\n      <button\r\n        onClick={() => setUsefulness('negative')}\r\n        className={usefulness === 'negative' ? 'red' : ''}\r\n      >\r\n        Бесполезно в работе (с моими клиентами это не работает)\r\n      </button>\r\n    </div>\r\n  );\r\n\r\n  // Шаг 5. Самые яркие мысли с мероприятия\r\n  const renderBrightThoughts = () => (\r\n    <div className=\"bright-thoughts-container\">\r\n      <input\r\n        type=\"text\"\r\n        value={brightThoughts}\r\n        onChange={(e) => setBrightThoughts(e.target.value)}\r\n        placeholder=\"Введите свои мысли (минимум 5 символов)\"\r\n      />\r\n    </div>\r\n  );\r\n\r\n  // Шаг 6. Что стоило бы добавить в тренинг?\r\n  const additionalOptions = [\r\n    \"Практики\",\r\n    \"Клиентских историй\",\r\n    \"Статистических данных\",\r\n    \"Фишек продаж\",\r\n    \"Перерывов / 'Кофе'-пауз\",\r\n    \"Разбор продуктовой линейки\",\r\n    \"Детальный разбор параметров продукта\",\r\n    \"Ящик Prosecco\",\r\n  ];\r\n\r\n  const renderAdditional = () => (\r\n    <div className=\"additional-container\">\r\n      {additionalOptions.map((item, index) => (\r\n        <button\r\n          key={index}\r\n          onClick={() => {\r\n            if (additionalItems.includes(item)) {\r\n              setAdditionalItems(additionalItems.filter(i => i !== item));\r\n            } else {\r\n              setAdditionalItems([...additionalItems, item]);\r\n            }\r\n          }}\r\n          className={additionalItems.includes(item) ? 'selected' : ''}\r\n        >\r\n          {item}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  // Шаг 7. Общее впечатление от тренинга (три смайлика)\r\n  // Для простоты используем кнопки с текстом, замените на изображения по необходимости\r\n  const renderImpression = () => (\r\n    <div className=\"impression-container\">\r\n      <button onClick={() => setImpression('sad')}>\r\n        <img src=\"sad_smiley.png\" alt=\"С грустным смайлом\" />\r\n      </button>\r\n      <button onClick={() => setImpression('neutral')}>\r\n        <img src=\"neutral_smiley.png\" alt=\"Нейтральный смайл\" />\r\n      </button>\r\n      <button onClick={() => setImpression('happy')}>\r\n        <img src=\"happy_smiley.png\" alt=\"Супер-счастливый смайл\" />\r\n      </button>\r\n    </div>\r\n  );\r\n\r\n  // Массив вопросов с рендер-функциями\r\n  const questions = [\r\n    {\r\n      type: 'input',\r\n      label: 'Название партнера',\r\n      render: () => (\r\n        <Autosuggest\r\n          suggestions={partnerSuggestions}\r\n          onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n          onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n          getSuggestionValue={(suggestion) => suggestion}\r\n          renderSuggestion={renderSuggestion}\r\n          inputProps={partnerInputProps}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      type: 'speakers',\r\n      label: 'Фамилия и имя спикера',\r\n      render: () => (\r\n        <div>\r\n          {speakersList.map((speaker, index) => (\r\n            <div key={index}>\r\n              <label className=\"subquestion-name\">Фамилия и имя спикера {index + 1}</label>\r\n              <Autosuggest\r\n                suggestions={speaker.suggestions || []}\r\n                onSuggestionsFetchRequested={(params) => handleSpeakerSuggestionsFetchRequested(index, params)}\r\n                onSuggestionsClearRequested={() => handleSpeakerSuggestionsClearRequested(index)}\r\n                onSuggestionSelected={(event, data) => handleSpeakerSuggestionSelected(event, data, index)}\r\n                getSuggestionValue={(suggestion) => suggestion}\r\n                renderSuggestion={(suggestion) => <div>{suggestion}</div>}\r\n                inputProps={{\r\n                  value: speaker.fullName,\r\n                  onChange: (e) => handleSpeakerChange(e, index),\r\n                  placeholder: 'Введите фамилию и имя',\r\n                }}\r\n              />\r\n              {index === speakersList.length - 1 && (\r\n                <button onClick={handleAddSpeaker}>Добавить еще спикера</button>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      type: 'qualities',\r\n      label: 'Оценка качеств спикера',\r\n      render: () => (\r\n        <div>\r\n          {qualitiesData.map((item, rowIndex) => (\r\n            <div className=\"quality-row\" key={rowIndex}>\r\n              <button\r\n                onClick={() => handleQualityChange(rowIndex, true)}\r\n                className={selectedRows[rowIndex] === 'positive' ? 'green' : ''}\r\n              >\r\n                {item.positive}\r\n              </button>\r\n              <button\r\n                onClick={() => handleQualityChange(rowIndex, false)}\r\n                className={selectedRows[rowIndex] === 'negative' ? 'red' : ''}\r\n              >\r\n                {item.negative}\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      type: 'usefulness',\r\n      label: 'Фактическая ценность информации',\r\n      render: renderUsefulness,\r\n    },\r\n    {\r\n      type: 'brightThoughts',\r\n      label: 'Самые яркие мысли с мероприятия',\r\n      render: renderBrightThoughts,\r\n    },\r\n    {\r\n      type: 'additional',\r\n      label: 'Что стоило бы добавить в тренинг?',\r\n      render: renderAdditional,\r\n    },\r\n    {\r\n      type: 'impression',\r\n      label: 'Общее впечатление от тренинга',\r\n      render: renderImpression,\r\n    },\r\n  ];\r\n\r\n  // Переход к следующему вопросу\r\n  const handleNext = () => {\r\n    // Для вопросов, где выбор обязателен, можно добавить валидацию\r\n    if (currentQuestion === 3 && !usefulness) {\r\n      alert(\"Выберите ответ на вопрос 'Фактическая ценность информации'\");\r\n      return;\r\n    }\r\n    if (currentQuestion === 4 && brightThoughts.trim().length < 5) {\r\n      alert(\"Ответ на вопрос 'Самые яркие мысли с мероприятия' должен содержать минимум 5 символов\");\r\n      return;\r\n    }\r\n    if (currentQuestion === 6 && !impression) {\r\n      alert(\"Выберите общее впечатление от тренинга\");\r\n      return;\r\n    }\r\n    if (currentQuestion < questions.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n    } else {\r\n      handleFinish();\r\n    }\r\n  };\r\n\r\n  // Завершение опроса и отправка данных\r\n  const handleFinish = async () => {\r\n    // Пример формирования данных; адаптируйте по необходимости\r\n    const data = {\r\n      partner,\r\n      speakers: speakersList.map((speaker) => speaker.fullName).join(', '),\r\n      selectedQualities: selectedRows,\r\n      usefulness,\r\n      brightThoughts,\r\n      additionalItems,\r\n      impression,\r\n      dateTime: new Date().toISOString(),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\"https://rgszh-miniapp.org/api/proxy/feedback/save\", {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setIsFinished(true);\r\n        alert('Спасибо за участие в опросе!');\r\n      } else {\r\n        alert('Ошибка при сохранении данных');\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка:', error);\r\n      alert('Ошибка соединения с сервером');\r\n    }\r\n  };\r\n\r\n  const currentQuestionData = questions[currentQuestion];\r\n\r\n  return (\r\n    <div className=\"feedback-container\">\r\n      <div className=\"logo\">\r\n        <img src={logo} alt=\"Логотип\" />\r\n      </div>\r\n      <h1 className=\"name-vote\">Оценка мероприятия</h1>\r\n\r\n      <h2 className=\"question-label\">{currentQuestionData.label}</h2>\r\n\r\n      {/* Рендер текущего вопроса */}\r\n      {currentQuestionData.type === 'input' && currentQuestionData.render()}\r\n      {currentQuestionData.type === 'speakers' && currentQuestionData.render()}\r\n      {currentQuestionData.type === 'qualities' && currentQuestionData.render()}\r\n      {currentQuestionData.type === 'usefulness' && currentQuestionData.render()}\r\n      {currentQuestionData.type === 'brightThoughts' && currentQuestionData.render()}\r\n      {currentQuestionData.type === 'additional' && currentQuestionData.render()}\r\n      {currentQuestionData.type === 'impression' && currentQuestionData.render()}\r\n\r\n      {/* Кнопка для перехода к следующему вопросу или завершения опроса */}\r\n      <button className=\"next-button\" onClick={handleNext} disabled={isFinished}>\r\n        {currentQuestion === questions.length - 1 ? 'Завершить опрос' : 'Далее'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}