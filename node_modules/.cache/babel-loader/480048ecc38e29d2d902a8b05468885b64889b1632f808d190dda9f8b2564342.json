{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shapeless\\\\Desktop\\\\miniapp\\\\src\\\\FeedbackPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSwipeable } from 'react-swipeable';\nimport Autosuggest from 'react-autosuggest';\nimport backgroundImage from './components/background.png';\nimport partners from './components/autosuggest/partners.json';\nimport speakersData from './components/autosuggest/speakers.json';\nimport happyGif from './components/animations/happy.gif';\nimport loyalGif from './components/animations/loyal.gif';\nimport sadGif from './components/animations/sad.gif';\nimport './FeedbackPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedbackPage = () => {\n  _s();\n  /********** Шаг 1: Ввод партнёра **********/\n  const [partner, setPartner] = useState('');\n  const [partnerSuggestions, setPartnerSuggestions] = useState([]);\n  const getPartnerSuggestions = value => {\n    const inputValue = (value || '').trim().toLowerCase();\n    if (inputValue.length < 2) return [];\n    return partners.filter(p => typeof p === 'string' && p.toLowerCase().includes(inputValue));\n  };\n  const handlePartnerChange = (e, {\n    newValue\n  }) => {\n    setPartner(newValue);\n  };\n  const partnerInputProps = {\n    placeholder: 'Введите название партнёра (например, ВТБ)',\n    value: partner,\n    onChange: handlePartnerChange,\n    autoComplete: 'off',\n    onFocus: handleFocus,\n    onBlur: handleBlur\n  };\n\n  /********** Шаг 2: Ввод ФИО спикера(ов) **********/\n  const [speakersList, setSpeakersList] = useState([{\n    fullName: '',\n    id: 1\n  }]);\n  const [speakersSuggestions, setSpeakersSuggestions] = useState([]);\n  const getSpeakerSuggestions = value => {\n    const inputValue = (value || '').trim().toLowerCase();\n    if (inputValue.length < 2) return [];\n    return speakersData.filter(s => typeof s === 'string' && s.toLowerCase().includes(inputValue));\n  };\n  const handleSpeakerChange = (index, e, {\n    newValue\n  }) => {\n    const updated = [...speakersList];\n    updated[index].fullName = newValue;\n    setSpeakersList(updated);\n  };\n  const handleAddSpeaker = () => {\n    setSpeakersList([...speakersList, {\n      fullName: '',\n      id: speakersList.length + 1\n    }]);\n  };\n  const speakerInputProps = index => ({\n    placeholder: 'Введите ФИО спикера (например, Иванов Иван)',\n    value: speakersList[index].fullName,\n    onChange: (e, {\n      newValue\n    }) => handleSpeakerChange(index, e, {\n      newValue\n    }),\n    autoComplete: 'off',\n    onFocus: handleFocus,\n    onBlur: handleBlur\n  });\n  const onSpeakersFetchRequested = ({\n    value\n  }) => {\n    const suggestions = getSpeakerSuggestions(value);\n    setSpeakersSuggestions(suggestions);\n  };\n  const onSpeakersClearRequested = () => setSpeakersSuggestions([]);\n\n  /********** Шаг 3: Оценка качеств спикера **********/\n  const qualityRows = [{\n    positive: 'Экспертный',\n    negative: 'Компетентный'\n  }, {\n    positive: 'Энергичный',\n    negative: 'Пассивный'\n  }, {\n    positive: 'Мотивирующий',\n    negative: 'Невдохновляющий'\n  }, {\n    positive: 'Харизматичный',\n    negative: 'Душный'\n  }, {\n    positive: 'Доступно доносит информацию',\n    negative: 'Говорит сложными терминами'\n  }];\n  const [speakerQualities, setSpeakerQualities] = useState([]);\n  const [currentSpeakerIndex, setCurrentSpeakerIndex] = useState(0);\n  useEffect(() => {\n    setSpeakerQualities(speakersList.map(() => Array(5).fill(null)));\n  }, [speakersList]);\n  const handleQualitySelectForSpeaker = (rowIndex, type) => {\n    const updated = [...speakerQualities];\n    updated[currentSpeakerIndex][rowIndex] = updated[currentSpeakerIndex][rowIndex] === type ? null : type;\n    setSpeakerQualities(updated);\n  };\n\n  /********** Шаг 4: Фактическая ценность информации **********/\n  const [usefulness, setUsefulness] = useState('');\n\n  /********** Шаг 5: Яркие мысли **********/\n  const [brightThoughts, setBrightThoughts] = useState('');\n\n  /********** Шаг 6: Дополнительные предложения **********/\n  const additionalOptions = ['Практики', 'Клиентских историй', 'Статистических данных', 'Фишек продаж', \"Перерывов / 'Кофе'-пауз\", 'Разбор продуктовой линейки', 'Детальный разбор параметров продукта'];\n  const [additionalSelections, setAdditionalSelections] = useState([]);\n  const toggleAdditionalSelection = option => {\n    if (additionalSelections.includes(option)) {\n      setAdditionalSelections(additionalSelections.filter(item => item !== option));\n    } else {\n      setAdditionalSelections([...additionalSelections, option]);\n    }\n  };\n\n  /********** Шаг 7: Общее впечатление от тренинга **********/\n  const [impression, setImpression] = useState('');\n\n  /********** Подъём содержимого при открытии клавиатуры **********/\n  const containerRef = useRef(null);\n  function handleFocus() {\n    if (containerRef.current) {\n      containerRef.current.classList.add('keyboard-up');\n    }\n  }\n  function handleBlur() {\n    if (containerRef.current) {\n      containerRef.current.classList.remove('keyboard-up');\n    }\n  }\n\n  /********** Логика шагов **********/\n  const [currentStep, setCurrentStep] = useState(1);\n  const [isFinished, setIsFinished] = useState(false);\n  const [isFinishClicked, setIsFinishClicked] = useState(false);\n  const canGoNext = () => {\n    switch (currentStep) {\n      case 1:\n        return partner.trim() !== '' && partners.includes(partner);\n      case 2:\n        return speakersList.every(s => s.fullName.trim() !== '' && speakersData.includes(s.fullName));\n      case 3:\n        return speakerQualities[currentSpeakerIndex].every(q => q !== null);\n      case 4:\n        return usefulness.trim() !== '';\n      case 5:\n        return brightThoughts.trim().length >= 5;\n      case 7:\n        return impression.trim() !== '';\n      default:\n        return true;\n    }\n  };\n  const handleNext = () => {\n    if (!canGoNext()) {\n      alert('Не выполнены условия для перехода к следующему шагу');\n      return;\n    }\n    if (currentStep === 3 && currentSpeakerIndex < speakersList.length - 1) {\n      setCurrentSpeakerIndex(prev => prev + 1);\n      return;\n    }\n    setCurrentStep(prev => prev + 1);\n  };\n  const handlePrev = () => {\n    if (currentStep > 1) {\n      if (currentStep === 3 && currentSpeakerIndex > 0) {\n        setCurrentSpeakerIndex(prev => prev - 1);\n        return;\n      }\n      setCurrentStep(prev => prev - 1);\n    }\n  };\n  const handleFinish = async () => {\n    if (!canGoNext()) {\n      alert('Не выполнены условия для завершения опроса');\n      return;\n    }\n    if (isFinishClicked) return;\n    setIsFinishClicked(true);\n    setIsFinished(true);\n\n    // Собираем положительные/отрицательные качества\n    const positiveQualitiesList = [];\n    const negativeQualitiesList = [];\n    speakersList.forEach((speaker, idx) => {\n      qualityRows.forEach((row, j) => {\n        const selection = speakerQualities[idx][j];\n        if (selection === 'positive') {\n          positiveQualitiesList.push(`${row.positive} (${speaker.fullName})`);\n        } else if (selection === 'negative') {\n          negativeQualitiesList.push(`${row.negative} (${speaker.fullName})`);\n        }\n      });\n    });\n    let impressionStr = '';\n    if (impression === 'happy') impressionStr = 'Круто!';else if (impression === 'neutral') impressionStr = 'Средне';else if (impression === 'sad') impressionStr = 'Плохо';\n    const data = {\n      partner,\n      dateTime: new Date().toISOString(),\n      answers: {\n        speakers: speakersList.map(s => s.fullName).join(', '),\n        positiveQualities: positiveQualitiesList.join(', '),\n        negativeQualities: negativeQualitiesList.join(', '),\n        usefulness,\n        brightThoughts,\n        additionalSuggestions: additionalSelections.join(', '),\n        impression: impressionStr\n      }\n    };\n    try {\n      const response = await fetch('https://rgszh-miniapp.org/api/proxy/feedback/save', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data),\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        alert('Ошибка при сохранении данных');\n      }\n    } catch (error) {\n      console.error('Ошибка при отправке данных:', error);\n      alert('Ошибка соединения с сервером');\n    }\n  };\n\n  /********** Свайпы для перехода между шагами **********/\n  const swipeHandlers = useSwipeable({\n    onSwipedLeft: () => handlePrev(),\n    onSwipedRight: () => {\n      if (canGoNext()) handleNext();\n    },\n    preventDefault: true\n  });\n\n  /********** Рендеринг шагов **********/\n  const renderStep = () => {\n    switch (currentStep) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"autosuggest-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u0430\\u0440\\u0442\\u043D\\u0451\\u0440\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Autosuggest, {\n            suggestions: partnerSuggestions,\n            onSuggestionsFetchRequested: ({\n              value\n            }) => setPartnerSuggestions(getPartnerSuggestions(value)),\n            onSuggestionsClearRequested: () => setPartnerSuggestions([]),\n            getSuggestionValue: suggestion => suggestion,\n            renderSuggestion: suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'center',\n                backgroundColor: '#fff',\n                color: '#000',\n                fontSize: '16px'\n              },\n              children: suggestion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this),\n            inputProps: partnerInputProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F \\u0438 \\u0438\\u043C\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), speakersList.map((speaker, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"speaker-row\",\n            children: [/*#__PURE__*/_jsxDEV(Autosuggest, {\n              suggestions: speakersSuggestions,\n              onSuggestionsFetchRequested: ({\n                value\n              }) => setSpeakersSuggestions(getSpeakerSuggestions(value)),\n              onSuggestionsClearRequested: onSpeakersClearRequested,\n              getSuggestionValue: suggestion => suggestion,\n              renderSuggestion: suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: 'center',\n                  backgroundColor: '#fff',\n                  color: '#000',\n                  fontSize: '16px'\n                },\n                children: suggestion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 21\n              }, this),\n              inputProps: speakerInputProps(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this), index === speakersList.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"add-speaker-btn\",\n              onClick: handleAddSpeaker,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"add-speaker-symbol\",\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 19\n            }, this)]\n          }, speaker.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this);\n      case 3:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: speakersList[currentSpeakerIndex].fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), qualityRows.map((row, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quality-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `quality-btn ${speakerQualities[currentSpeakerIndex][idx] === 'positive' ? 'green' : ''}`,\n              onClick: () => handleQualitySelectForSpeaker(idx, 'positive'),\n              children: row.positive\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `quality-btn ${speakerQualities[currentSpeakerIndex][idx] === 'negative' ? 'red' : ''}`,\n              onClick: () => handleQualitySelectForSpeaker(idx, 'negative'),\n              children: row.negative\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this);\n      case 4:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u0424\\u0430\\u043A\\u0442\\u0438\\u0447\\u0435\\u0441\\u043A\\u0430\\u044F \\u0446\\u0435\\u043D\\u043D\\u043E\\u0441\\u0442\\u044C \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"usefulness-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `quality-btn ${usefulness === 'Полезно в работе (буду применять на практике)' ? 'green' : ''}`,\n              style: {\n                width: '100%'\n              },\n              onClick: () => setUsefulness('Полезно в работе (буду применять на практике)'),\n              children: \"\\u041F\\u043E\\u043B\\u0435\\u0437\\u043D\\u043E \\u0432 \\u0440\\u0430\\u0431\\u043E\\u0442\\u0435 (\\u0431\\u0443\\u0434\\u0443 \\u043F\\u0440\\u0438\\u043C\\u0435\\u043D\\u044F\\u0442\\u044C \\u043D\\u0430 \\u043F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0435)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `quality-btn ${usefulness === 'Бесполезно в работе (с моими клиентами это не работает)' ? 'red' : ''}`,\n              style: {\n                width: '100%'\n              },\n              onClick: () => setUsefulness('Бесполезно в работе (с моими клиентами это не работает)'),\n              children: \"\\u0411\\u0435\\u0441\\u043F\\u043E\\u043B\\u0435\\u0437\\u043D\\u043E \\u0432 \\u0440\\u0430\\u0431\\u043E\\u0442\\u0435 (\\u0441 \\u043C\\u043E\\u0438\\u043C\\u0438 \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0430\\u043C\\u0438 \\u044D\\u0442\\u043E \\u043D\\u0435 \\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u0435\\u0442)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this);\n      case 5:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u0421\\u0430\\u043C\\u044B\\u0435 \\u044F\\u0440\\u043A\\u0438\\u0435 \\u043C\\u044B\\u0441\\u043B\\u0438 \\u0441 \\u043C\\u0435\\u0440\\u043E\\u043F\\u0440\\u0438\\u044F\\u0442\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-button-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"input-field\",\n              value: brightThoughts,\n              onChange: e => setBrightThoughts(e.target.value),\n              placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442 (\\u043C\\u0438\\u043D\\u0438\\u043C\\u0443\\u043C 5 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this);\n      case 6:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u0427\\u0442\\u043E \\u0441\\u0442\\u043E\\u0438\\u043B\\u043E \\u0431\\u044B \\u0434\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432 \\u0442\\u0440\\u0435\\u043D\\u0438\\u043D\\u0433?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this), additionalOptions.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `add-option-btn ${additionalSelections.includes(opt) ? 'selected' : ''}`,\n            onClick: () => toggleAdditionalSelection(opt),\n            children: opt\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this);\n      case 7:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u041E\\u0431\\u0449\\u0435\\u0435 \\u0432\\u043F\\u0435\\u0447\\u0430\\u0442\\u043B\\u0435\\u043D\\u0438\\u0435 \\u043E\\u0442 \\u0442\\u0440\\u0435\\u043D\\u0438\\u043D\\u0433\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"impression-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `impression-btn ${impression === 'happy' ? 'happy-selected' : ''}`,\n              onClick: () => setImpression('happy'),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: happyGif,\n                alt: \"Happy\",\n                style: {\n                  width: '20vw',\n                  borderRadius: '10px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `impression-btn ${impression === 'neutral' ? 'neutral-selected' : ''}`,\n              onClick: () => setImpression('neutral'),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: loyalGif,\n                alt: \"Neutral\",\n                style: {\n                  width: '20vw',\n                  borderRadius: '10px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `impression-btn ${impression === 'sad' ? 'sad-selected' : ''}`,\n              onClick: () => setImpression('sad'),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: sadGif,\n                alt: \"Sad\",\n                style: {\n                  width: '20vw',\n                  borderRadius: '10px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  if (isFinished) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thank-you-message\",\n      style: {\n        backgroundImage: `url(${backgroundImage})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0411\\u043B\\u0430\\u0433\\u043E\\u0434\\u0430\\u0440\\u0438\\u043C \\u0437\\u0430 \\u043F\\u0440\\u043E\\u0445\\u043E\\u0436\\u0434\\u0435\\u043D\\u0438\\u0435 \\u043E\\u043F\\u0440\\u043E\\u0441\\u0430!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ...swipeHandlers,\n    ref: containerRef,\n    className: \"feedback-container page-content\",\n    style: {\n      backgroundImage: `url(${backgroundImage})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-header\",\n      children: currentStep < 7 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `top-btn ${canGoNext() ? 'enabled' : 'disabled'}`,\n        onClick: canGoNext() ? handleNext : undefined,\n        children: \"\\u0414\\u0430\\u043B\\u0435\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `top-btn ${canGoNext() ? 'enabled' : 'disabled'}`,\n        onClick: canGoNext() ? handleFinish : undefined,\n        children: \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C \\u043E\\u043F\\u0440\\u043E\\u0441\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this), renderStep()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 439,\n    columnNumber: 5\n  }, this);\n};\n_s(FeedbackPage, \"3i/xnhTxHEsohxA0WLCmCQxFR9E=\", false, function () {\n  return [useSwipeable];\n});\n_c = FeedbackPage;\nexport default FeedbackPage;\nvar _c;\n$RefreshReg$(_c, \"FeedbackPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useSwipeable","Autosuggest","backgroundImage","partners","speakersData","happyGif","loyalGif","sadGif","jsxDEV","_jsxDEV","FeedbackPage","_s","partner","setPartner","partnerSuggestions","setPartnerSuggestions","getPartnerSuggestions","value","inputValue","trim","toLowerCase","length","filter","p","includes","handlePartnerChange","e","newValue","partnerInputProps","placeholder","onChange","autoComplete","onFocus","handleFocus","onBlur","handleBlur","speakersList","setSpeakersList","fullName","id","speakersSuggestions","setSpeakersSuggestions","getSpeakerSuggestions","s","handleSpeakerChange","index","updated","handleAddSpeaker","speakerInputProps","onSpeakersFetchRequested","suggestions","onSpeakersClearRequested","qualityRows","positive","negative","speakerQualities","setSpeakerQualities","currentSpeakerIndex","setCurrentSpeakerIndex","map","Array","fill","handleQualitySelectForSpeaker","rowIndex","type","usefulness","setUsefulness","brightThoughts","setBrightThoughts","additionalOptions","additionalSelections","setAdditionalSelections","toggleAdditionalSelection","option","item","impression","setImpression","containerRef","current","classList","add","remove","currentStep","setCurrentStep","isFinished","setIsFinished","isFinishClicked","setIsFinishClicked","canGoNext","every","q","handleNext","alert","prev","handlePrev","handleFinish","positiveQualitiesList","negativeQualitiesList","forEach","speaker","idx","row","j","selection","push","impressionStr","data","dateTime","Date","toISOString","answers","speakers","join","positiveQualities","negativeQualities","additionalSuggestions","response","fetch","method","headers","body","JSON","stringify","credentials","ok","error","console","swipeHandlers","onSwipedLeft","onSwipedRight","preventDefault","renderStep","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuggestionsFetchRequested","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","style","textAlign","backgroundColor","color","fontSize","inputProps","onClick","marginBottom","width","target","opt","src","alt","borderRadius","backgroundSize","backgroundPosition","ref","undefined","_c","$RefreshReg$"],"sources":["C:/Users/shapeless/Desktop/miniapp/src/FeedbackPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useSwipeable } from 'react-swipeable';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport backgroundImage from './components/background.png';\r\nimport partners from './components/autosuggest/partners.json';\r\nimport speakersData from './components/autosuggest/speakers.json';\r\nimport happyGif from './components/animations/happy.gif';\r\nimport loyalGif from './components/animations/loyal.gif';\r\nimport sadGif from './components/animations/sad.gif';\r\n\r\nimport './FeedbackPage.css';\r\n\r\nconst FeedbackPage = () => {\r\n  /********** Шаг 1: Ввод партнёра **********/\r\n  const [partner, setPartner] = useState('');\r\n  const [partnerSuggestions, setPartnerSuggestions] = useState([]);\r\n\r\n  const getPartnerSuggestions = (value) => {\r\n    const inputValue = (value || '').trim().toLowerCase();\r\n    if (inputValue.length < 2) return [];\r\n    return partners.filter(\r\n      (p) => typeof p === 'string' && p.toLowerCase().includes(inputValue)\r\n    );\r\n  };\r\n\r\n  const handlePartnerChange = (e, { newValue }) => {\r\n    setPartner(newValue);\r\n  };\r\n\r\n  const partnerInputProps = {\r\n    placeholder: 'Введите название партнёра (например, ВТБ)',\r\n    value: partner,\r\n    onChange: handlePartnerChange,\r\n    autoComplete: 'off',\r\n    onFocus: handleFocus,\r\n    onBlur: handleBlur,\r\n  };\r\n\r\n  /********** Шаг 2: Ввод ФИО спикера(ов) **********/\r\n  const [speakersList, setSpeakersList] = useState([{ fullName: '', id: 1 }]);\r\n  const [speakersSuggestions, setSpeakersSuggestions] = useState([]);\r\n\r\n  const getSpeakerSuggestions = (value) => {\r\n    const inputValue = (value || '').trim().toLowerCase();\r\n    if (inputValue.length < 2) return [];\r\n    return speakersData.filter(\r\n      (s) => typeof s === 'string' && s.toLowerCase().includes(inputValue)\r\n    );\r\n  };\r\n\r\n  const handleSpeakerChange = (index, e, { newValue }) => {\r\n    const updated = [...speakersList];\r\n    updated[index].fullName = newValue;\r\n    setSpeakersList(updated);\r\n  };\r\n\r\n  const handleAddSpeaker = () => {\r\n    setSpeakersList([...speakersList, { fullName: '', id: speakersList.length + 1 }]);\r\n  };\r\n\r\n  const speakerInputProps = (index) => ({\r\n    placeholder: 'Введите ФИО спикера (например, Иванов Иван)',\r\n    value: speakersList[index].fullName,\r\n    onChange: (e, { newValue }) => handleSpeakerChange(index, e, { newValue }),\r\n    autoComplete: 'off',\r\n    onFocus: handleFocus,\r\n    onBlur: handleBlur,\r\n  });\r\n\r\n  const onSpeakersFetchRequested = ({ value }) => {\r\n    const suggestions = getSpeakerSuggestions(value);\r\n    setSpeakersSuggestions(suggestions);\r\n  };\r\n  const onSpeakersClearRequested = () => setSpeakersSuggestions([]);\r\n\r\n  /********** Шаг 3: Оценка качеств спикера **********/\r\n  const qualityRows = [\r\n    { positive: 'Экспертный', negative: 'Компетентный' },\r\n    { positive: 'Энергичный', negative: 'Пассивный' },\r\n    { positive: 'Мотивирующий', negative: 'Невдохновляющий' },\r\n    { positive: 'Харизматичный', negative: 'Душный' },\r\n    { positive: 'Доступно доносит информацию', negative: 'Говорит сложными терминами' },\r\n  ];\r\n  const [speakerQualities, setSpeakerQualities] = useState([]);\r\n  const [currentSpeakerIndex, setCurrentSpeakerIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setSpeakerQualities(speakersList.map(() => Array(5).fill(null)));\r\n  }, [speakersList]);\r\n\r\n  const handleQualitySelectForSpeaker = (rowIndex, type) => {\r\n    const updated = [...speakerQualities];\r\n    updated[currentSpeakerIndex][rowIndex] =\r\n      updated[currentSpeakerIndex][rowIndex] === type ? null : type;\r\n    setSpeakerQualities(updated);\r\n  };\r\n\r\n  /********** Шаг 4: Фактическая ценность информации **********/\r\n  const [usefulness, setUsefulness] = useState('');\r\n\r\n  /********** Шаг 5: Яркие мысли **********/\r\n  const [brightThoughts, setBrightThoughts] = useState('');\r\n\r\n  /********** Шаг 6: Дополнительные предложения **********/\r\n  const additionalOptions = [\r\n    'Практики',\r\n    'Клиентских историй',\r\n    'Статистических данных',\r\n    'Фишек продаж',\r\n    \"Перерывов / 'Кофе'-пауз\",\r\n    'Разбор продуктовой линейки',\r\n    'Детальный разбор параметров продукта',\r\n  ];\r\n  const [additionalSelections, setAdditionalSelections] = useState([]);\r\n  const toggleAdditionalSelection = (option) => {\r\n    if (additionalSelections.includes(option)) {\r\n      setAdditionalSelections(additionalSelections.filter((item) => item !== option));\r\n    } else {\r\n      setAdditionalSelections([...additionalSelections, option]);\r\n    }\r\n  };\r\n\r\n  /********** Шаг 7: Общее впечатление от тренинга **********/\r\n  const [impression, setImpression] = useState('');\r\n\r\n  /********** Подъём содержимого при открытии клавиатуры **********/\r\n  const containerRef = useRef(null);\r\n\r\n  function handleFocus() {\r\n    if (containerRef.current) {\r\n      containerRef.current.classList.add('keyboard-up');\r\n    }\r\n  }\r\n\r\n  function handleBlur() {\r\n    if (containerRef.current) {\r\n      containerRef.current.classList.remove('keyboard-up');\r\n    }\r\n  }\r\n\r\n  /********** Логика шагов **********/\r\n  const [currentStep, setCurrentStep] = useState(1);\r\n  const [isFinished, setIsFinished] = useState(false);\r\n  const [isFinishClicked, setIsFinishClicked] = useState(false);\r\n\r\n  const canGoNext = () => {\r\n    switch (currentStep) {\r\n      case 1:\r\n        return partner.trim() !== '' && partners.includes(partner);\r\n      case 2:\r\n        return speakersList.every(\r\n          (s) => s.fullName.trim() !== '' && speakersData.includes(s.fullName)\r\n        );\r\n      case 3:\r\n        return speakerQualities[currentSpeakerIndex].every((q) => q !== null);\r\n      case 4:\r\n        return usefulness.trim() !== '';\r\n      case 5:\r\n        return brightThoughts.trim().length >= 5;\r\n      case 7:\r\n        return impression.trim() !== '';\r\n      default:\r\n        return true;\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (!canGoNext()) {\r\n      alert('Не выполнены условия для перехода к следующему шагу');\r\n      return;\r\n    }\r\n    if (currentStep === 3 && currentSpeakerIndex < speakersList.length - 1) {\r\n      setCurrentSpeakerIndex((prev) => prev + 1);\r\n      return;\r\n    }\r\n    setCurrentStep((prev) => prev + 1);\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    if (currentStep > 1) {\r\n      if (currentStep === 3 && currentSpeakerIndex > 0) {\r\n        setCurrentSpeakerIndex((prev) => prev - 1);\r\n        return;\r\n      }\r\n      setCurrentStep((prev) => prev - 1);\r\n    }\r\n  };\r\n\r\n  const handleFinish = async () => {\r\n    if (!canGoNext()) {\r\n      alert('Не выполнены условия для завершения опроса');\r\n      return;\r\n    }\r\n    if (isFinishClicked) return;\r\n    setIsFinishClicked(true);\r\n    setIsFinished(true);\r\n\r\n    // Собираем положительные/отрицательные качества\r\n    const positiveQualitiesList = [];\r\n    const negativeQualitiesList = [];\r\n    speakersList.forEach((speaker, idx) => {\r\n      qualityRows.forEach((row, j) => {\r\n        const selection = speakerQualities[idx][j];\r\n        if (selection === 'positive') {\r\n          positiveQualitiesList.push(`${row.positive} (${speaker.fullName})`);\r\n        } else if (selection === 'negative') {\r\n          negativeQualitiesList.push(`${row.negative} (${speaker.fullName})`);\r\n        }\r\n      });\r\n    });\r\n\r\n    let impressionStr = '';\r\n    if (impression === 'happy') impressionStr = 'Круто!';\r\n    else if (impression === 'neutral') impressionStr = 'Средне';\r\n    else if (impression === 'sad') impressionStr = 'Плохо';\r\n\r\n    const data = {\r\n      partner,\r\n      dateTime: new Date().toISOString(),\r\n      answers: {\r\n        speakers: speakersList.map((s) => s.fullName).join(', '),\r\n        positiveQualities: positiveQualitiesList.join(', '),\r\n        negativeQualities: negativeQualitiesList.join(', '),\r\n        usefulness,\r\n        brightThoughts,\r\n        additionalSuggestions: additionalSelections.join(', '),\r\n        impression: impressionStr,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('https://rgszh-miniapp.org/api/proxy/feedback/save', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data),\r\n        credentials: 'include',\r\n      });\r\n      if (!response.ok) {\r\n        alert('Ошибка при сохранении данных');\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при отправке данных:', error);\r\n      alert('Ошибка соединения с сервером');\r\n    }\r\n  };\r\n\r\n  /********** Свайпы для перехода между шагами **********/\r\n  const swipeHandlers = useSwipeable({\r\n    onSwipedLeft: () => handlePrev(),\r\n    onSwipedRight: () => {\r\n      if (canGoNext()) handleNext();\r\n    },\r\n    preventDefault: true\r\n  });\r\n\r\n  /********** Рендеринг шагов **********/\r\n  const renderStep = () => {\r\n    switch (currentStep) {\r\n      case 1:\r\n        return (\r\n          <div className=\"autosuggest-container\">\r\n            <h2>Введите название партнёра</h2>\r\n            <Autosuggest\r\n              suggestions={partnerSuggestions}\r\n              onSuggestionsFetchRequested={({ value }) =>\r\n                setPartnerSuggestions(getPartnerSuggestions(value))\r\n              }\r\n              onSuggestionsClearRequested={() => setPartnerSuggestions([])}\r\n              getSuggestionValue={(suggestion) => suggestion}\r\n              renderSuggestion={(suggestion) => (\r\n                <div style={{ textAlign: 'center', backgroundColor: '#fff', color: '#000', fontSize: '16px' }}>\r\n                  {suggestion}\r\n                </div>\r\n              )}\r\n              inputProps={partnerInputProps}\r\n            />\r\n          </div>\r\n        );\r\n\r\n      case 2:\r\n        return (\r\n          <div>\r\n            <h2>Фамилия и имя</h2>\r\n            {speakersList.map((speaker, index) => (\r\n              <div key={speaker.id} className=\"speaker-row\">\r\n                <Autosuggest\r\n                  suggestions={speakersSuggestions}\r\n                  onSuggestionsFetchRequested={({ value }) =>\r\n                    setSpeakersSuggestions(getSpeakerSuggestions(value))\r\n                  }\r\n                  onSuggestionsClearRequested={onSpeakersClearRequested}\r\n                  getSuggestionValue={(suggestion) => suggestion}\r\n                  renderSuggestion={(suggestion) => (\r\n                    <div style={{ textAlign: 'center', backgroundColor: '#fff', color: '#000', fontSize: '16px' }}>\r\n                      {suggestion}\r\n                    </div>\r\n                  )}\r\n                  inputProps={speakerInputProps(index)}\r\n                />\r\n                {index === speakersList.length - 1 && (\r\n                  <button type=\"button\" className=\"add-speaker-btn\" onClick={handleAddSpeaker}>\r\n                    <span className=\"add-speaker-symbol\">+</span>\r\n                  </button>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        );\r\n\r\n      case 3:\r\n        return (\r\n          <div>\r\n            <h2>{speakersList[currentSpeakerIndex].fullName}</h2>\r\n            <div style={{ marginBottom: '10px' }}>\r\n              {/* Подсказка, если нужно */}\r\n            </div>\r\n            {qualityRows.map((row, idx) => (\r\n              <div key={idx} className=\"quality-row\">\r\n                <button\r\n                  className={`quality-btn ${speakerQualities[currentSpeakerIndex][idx] === 'positive' ? 'green' : ''}`}\r\n                  onClick={() => handleQualitySelectForSpeaker(idx, 'positive')}\r\n                >\r\n                  {row.positive}\r\n                </button>\r\n                <button\r\n                  className={`quality-btn ${speakerQualities[currentSpeakerIndex][idx] === 'negative' ? 'red' : ''}`}\r\n                  onClick={() => handleQualitySelectForSpeaker(idx, 'negative')}\r\n                >\r\n                  {row.negative}\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        );\r\n\r\n      case 4:\r\n        return (\r\n          <div>\r\n            <h2>Фактическая ценность информации</h2>\r\n            <div className=\"usefulness-container\">\r\n              <button\r\n                className={`quality-btn ${usefulness === 'Полезно в работе (буду применять на практике)' ? 'green' : ''}`}\r\n                style={{ width: '100%' }}\r\n                onClick={() => setUsefulness('Полезно в работе (буду применять на практике)')}\r\n              >\r\n                Полезно в работе (буду применять на практике)\r\n              </button>\r\n              <button\r\n                className={`quality-btn ${usefulness === 'Бесполезно в работе (с моими клиентами это не работает)' ? 'red' : ''}`}\r\n                style={{ width: '100%' }}\r\n                onClick={() => setUsefulness('Бесполезно в работе (с моими клиентами это не работает)')}\r\n              >\r\n                Бесполезно в работе (с моими клиентами это не работает)\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 5:\r\n        return (\r\n          <div className=\"input-button-container\">\r\n            <h2>Самые яркие мысли с мероприятия</h2>\r\n            <div className=\"input-button-wrapper\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-field\"\r\n                value={brightThoughts}\r\n                onChange={(e) => setBrightThoughts(e.target.value)}\r\n                placeholder=\"Введите текст (минимум 5 символов)\"\r\n              />\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 6:\r\n        return (\r\n          <div>\r\n            <h2>Что стоило бы добавить в тренинг?</h2>\r\n            {additionalOptions.map((opt, idx) => (\r\n              <button\r\n                key={idx}\r\n                className={`add-option-btn ${additionalSelections.includes(opt) ? 'selected' : ''}`}\r\n                onClick={() => toggleAdditionalSelection(opt)}\r\n              >\r\n                {opt}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        );\r\n\r\n      case 7:\r\n        return (\r\n          <div>\r\n            <h2>Общее впечатление от тренинга</h2>\r\n            <div className=\"impression-container\">\r\n              <button\r\n                className={`impression-btn ${impression === 'happy' ? 'happy-selected' : ''}`}\r\n                onClick={() => setImpression('happy')}\r\n              >\r\n                <img src={happyGif} alt=\"Happy\" style={{ width: '20vw', borderRadius: '10px' }} />\r\n              </button>\r\n              <button\r\n                className={`impression-btn ${impression === 'neutral' ? 'neutral-selected' : ''}`}\r\n                onClick={() => setImpression('neutral')}\r\n              >\r\n                <img src={loyalGif} alt=\"Neutral\" style={{ width: '20vw', borderRadius: '10px' }} />\r\n              </button>\r\n              <button\r\n                className={`impression-btn ${impression === 'sad' ? 'sad-selected' : ''}`}\r\n                onClick={() => setImpression('sad')}\r\n              >\r\n                <img src={sadGif} alt=\"Sad\" style={{ width: '20vw', borderRadius: '10px' }} />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  if (isFinished) {\r\n    return (\r\n      <div\r\n        className=\"thank-you-message\"\r\n        style={{\r\n          backgroundImage: `url(${backgroundImage})`,\r\n          backgroundSize: 'cover',\r\n          backgroundPosition: 'center',\r\n        }}\r\n      >\r\n        <h2>Благодарим за прохождение опроса!</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      {...swipeHandlers}\r\n      ref={containerRef}\r\n      className=\"feedback-container page-content\"\r\n      style={{ backgroundImage: `url(${backgroundImage})` }}\r\n    >\r\n      {/* Блок с кнопкой \"Далее\"/\"Завершить\" над заголовком шага */}\r\n      <div className=\"step-header\">\r\n        {currentStep < 7 ? (\r\n          <button\r\n            className={`top-btn ${canGoNext() ? 'enabled' : 'disabled'}`}\r\n            onClick={canGoNext() ? handleNext : undefined}\r\n          >\r\n            Далее\r\n          </button>\r\n        ) : (\r\n          <button\r\n            className={`top-btn ${canGoNext() ? 'enabled' : 'disabled'}`}\r\n            onClick={canGoNext() ? handleFinish : undefined}\r\n          >\r\n            Завершить опрос\r\n          </button>\r\n        )}\r\n      </div>\r\n      {renderStep()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,OAAOC,eAAe,MAAM,6BAA6B;AACzD,OAAOC,QAAQ,MAAM,wCAAwC;AAC7D,OAAOC,YAAY,MAAM,wCAAwC;AACjE,OAAOC,QAAQ,MAAM,mCAAmC;AACxD,OAAOC,QAAQ,MAAM,mCAAmC;AACxD,OAAOC,MAAM,MAAM,iCAAiC;AAEpD,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACiB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEhE,MAAMmB,qBAAqB,GAAIC,KAAK,IAAK;IACvC,MAAMC,UAAU,GAAG,CAACD,KAAK,IAAI,EAAE,EAAEE,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACrD,IAAIF,UAAU,CAACG,MAAM,GAAG,CAAC,EAAE,OAAO,EAAE;IACpC,OAAOlB,QAAQ,CAACmB,MAAM,CACnBC,CAAC,IAAK,OAAOA,CAAC,KAAK,QAAQ,IAAIA,CAAC,CAACH,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACN,UAAU,CACrE,CAAC;EACH,CAAC;EAED,MAAMO,mBAAmB,GAAGA,CAACC,CAAC,EAAE;IAAEC;EAAS,CAAC,KAAK;IAC/Cd,UAAU,CAACc,QAAQ,CAAC;EACtB,CAAC;EAED,MAAMC,iBAAiB,GAAG;IACxBC,WAAW,EAAE,2CAA2C;IACxDZ,KAAK,EAAEL,OAAO;IACdkB,QAAQ,EAAEL,mBAAmB;IAC7BM,YAAY,EAAE,KAAK;IACnBC,OAAO,EAAEC,WAAW;IACpBC,MAAM,EAAEC;EACV,CAAC;;EAED;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGxC,QAAQ,CAAC,CAAC;IAAEyC,QAAQ,EAAE,EAAE;IAAEC,EAAE,EAAE;EAAE,CAAC,CAAC,CAAC;EAC3E,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EAElE,MAAM6C,qBAAqB,GAAIzB,KAAK,IAAK;IACvC,MAAMC,UAAU,GAAG,CAACD,KAAK,IAAI,EAAE,EAAEE,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACrD,IAAIF,UAAU,CAACG,MAAM,GAAG,CAAC,EAAE,OAAO,EAAE;IACpC,OAAOjB,YAAY,CAACkB,MAAM,CACvBqB,CAAC,IAAK,OAAOA,CAAC,KAAK,QAAQ,IAAIA,CAAC,CAACvB,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACN,UAAU,CACrE,CAAC;EACH,CAAC;EAED,MAAM0B,mBAAmB,GAAGA,CAACC,KAAK,EAAEnB,CAAC,EAAE;IAAEC;EAAS,CAAC,KAAK;IACtD,MAAMmB,OAAO,GAAG,CAAC,GAAGV,YAAY,CAAC;IACjCU,OAAO,CAACD,KAAK,CAAC,CAACP,QAAQ,GAAGX,QAAQ;IAClCU,eAAe,CAACS,OAAO,CAAC;EAC1B,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BV,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAE;MAAEE,QAAQ,EAAE,EAAE;MAAEC,EAAE,EAAEH,YAAY,CAACf,MAAM,GAAG;IAAE,CAAC,CAAC,CAAC;EACnF,CAAC;EAED,MAAM2B,iBAAiB,GAAIH,KAAK,KAAM;IACpChB,WAAW,EAAE,6CAA6C;IAC1DZ,KAAK,EAAEmB,YAAY,CAACS,KAAK,CAAC,CAACP,QAAQ;IACnCR,QAAQ,EAAEA,CAACJ,CAAC,EAAE;MAAEC;IAAS,CAAC,KAAKiB,mBAAmB,CAACC,KAAK,EAAEnB,CAAC,EAAE;MAAEC;IAAS,CAAC,CAAC;IAC1EI,YAAY,EAAE,KAAK;IACnBC,OAAO,EAAEC,WAAW;IACpBC,MAAM,EAAEC;EACV,CAAC,CAAC;EAEF,MAAMc,wBAAwB,GAAGA,CAAC;IAAEhC;EAAM,CAAC,KAAK;IAC9C,MAAMiC,WAAW,GAAGR,qBAAqB,CAACzB,KAAK,CAAC;IAChDwB,sBAAsB,CAACS,WAAW,CAAC;EACrC,CAAC;EACD,MAAMC,wBAAwB,GAAGA,CAAA,KAAMV,sBAAsB,CAAC,EAAE,CAAC;;EAEjE;EACA,MAAMW,WAAW,GAAG,CAClB;IAAEC,QAAQ,EAAE,YAAY;IAAEC,QAAQ,EAAE;EAAe,CAAC,EACpD;IAAED,QAAQ,EAAE,YAAY;IAAEC,QAAQ,EAAE;EAAY,CAAC,EACjD;IAAED,QAAQ,EAAE,cAAc;IAAEC,QAAQ,EAAE;EAAkB,CAAC,EACzD;IAAED,QAAQ,EAAE,eAAe;IAAEC,QAAQ,EAAE;EAAS,CAAC,EACjD;IAAED,QAAQ,EAAE,6BAA6B;IAAEC,QAAQ,EAAE;EAA6B,CAAC,CACpF;EACD,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG3D,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAAC4D,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG7D,QAAQ,CAAC,CAAC,CAAC;EAEjEC,SAAS,CAAC,MAAM;IACd0D,mBAAmB,CAACpB,YAAY,CAACuB,GAAG,CAAC,MAAMC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;EAClE,CAAC,EAAE,CAACzB,YAAY,CAAC,CAAC;EAElB,MAAM0B,6BAA6B,GAAGA,CAACC,QAAQ,EAAEC,IAAI,KAAK;IACxD,MAAMlB,OAAO,GAAG,CAAC,GAAGS,gBAAgB,CAAC;IACrCT,OAAO,CAACW,mBAAmB,CAAC,CAACM,QAAQ,CAAC,GACpCjB,OAAO,CAACW,mBAAmB,CAAC,CAACM,QAAQ,CAAC,KAAKC,IAAI,GAAG,IAAI,GAAGA,IAAI;IAC/DR,mBAAmB,CAACV,OAAO,CAAC;EAC9B,CAAC;;EAED;EACA,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGrE,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAM,CAACsE,cAAc,EAAEC,iBAAiB,CAAC,GAAGvE,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACA,MAAMwE,iBAAiB,GAAG,CACxB,UAAU,EACV,oBAAoB,EACpB,uBAAuB,EACvB,cAAc,EACd,yBAAyB,EACzB,4BAA4B,EAC5B,sCAAsC,CACvC;EACD,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAG1E,QAAQ,CAAC,EAAE,CAAC;EACpE,MAAM2E,yBAAyB,GAAIC,MAAM,IAAK;IAC5C,IAAIH,oBAAoB,CAAC9C,QAAQ,CAACiD,MAAM,CAAC,EAAE;MACzCF,uBAAuB,CAACD,oBAAoB,CAAChD,MAAM,CAAEoD,IAAI,IAAKA,IAAI,KAAKD,MAAM,CAAC,CAAC;IACjF,CAAC,MAAM;MACLF,uBAAuB,CAAC,CAAC,GAAGD,oBAAoB,EAAEG,MAAM,CAAC,CAAC;IAC5D;EACF,CAAC;;EAED;EACA,MAAM,CAACE,UAAU,EAAEC,aAAa,CAAC,GAAG/E,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMgF,YAAY,GAAG9E,MAAM,CAAC,IAAI,CAAC;EAEjC,SAASkC,WAAWA,CAAA,EAAG;IACrB,IAAI4C,YAAY,CAACC,OAAO,EAAE;MACxBD,YAAY,CAACC,OAAO,CAACC,SAAS,CAACC,GAAG,CAAC,aAAa,CAAC;IACnD;EACF;EAEA,SAAS7C,UAAUA,CAAA,EAAG;IACpB,IAAI0C,YAAY,CAACC,OAAO,EAAE;MACxBD,YAAY,CAACC,OAAO,CAACC,SAAS,CAACE,MAAM,CAAC,aAAa,CAAC;IACtD;EACF;;EAEA;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGtF,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACuF,UAAU,EAAEC,aAAa,CAAC,GAAGxF,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACyF,eAAe,EAAEC,kBAAkB,CAAC,GAAG1F,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAM2F,SAAS,GAAGA,CAAA,KAAM;IACtB,QAAQN,WAAW;MACjB,KAAK,CAAC;QACJ,OAAOtE,OAAO,CAACO,IAAI,CAAC,CAAC,KAAK,EAAE,IAAIhB,QAAQ,CAACqB,QAAQ,CAACZ,OAAO,CAAC;MAC5D,KAAK,CAAC;QACJ,OAAOwB,YAAY,CAACqD,KAAK,CACtB9C,CAAC,IAAKA,CAAC,CAACL,QAAQ,CAACnB,IAAI,CAAC,CAAC,KAAK,EAAE,IAAIf,YAAY,CAACoB,QAAQ,CAACmB,CAAC,CAACL,QAAQ,CACrE,CAAC;MACH,KAAK,CAAC;QACJ,OAAOiB,gBAAgB,CAACE,mBAAmB,CAAC,CAACgC,KAAK,CAAEC,CAAC,IAAKA,CAAC,KAAK,IAAI,CAAC;MACvE,KAAK,CAAC;QACJ,OAAOzB,UAAU,CAAC9C,IAAI,CAAC,CAAC,KAAK,EAAE;MACjC,KAAK,CAAC;QACJ,OAAOgD,cAAc,CAAChD,IAAI,CAAC,CAAC,CAACE,MAAM,IAAI,CAAC;MAC1C,KAAK,CAAC;QACJ,OAAOsD,UAAU,CAACxD,IAAI,CAAC,CAAC,KAAK,EAAE;MACjC;QACE,OAAO,IAAI;IACf;EACF,CAAC;EAED,MAAMwE,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI,CAACH,SAAS,CAAC,CAAC,EAAE;MAChBI,KAAK,CAAC,qDAAqD,CAAC;MAC5D;IACF;IACA,IAAIV,WAAW,KAAK,CAAC,IAAIzB,mBAAmB,GAAGrB,YAAY,CAACf,MAAM,GAAG,CAAC,EAAE;MACtEqC,sBAAsB,CAAEmC,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;MAC1C;IACF;IACAV,cAAc,CAAEU,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;EACpC,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIZ,WAAW,GAAG,CAAC,EAAE;MACnB,IAAIA,WAAW,KAAK,CAAC,IAAIzB,mBAAmB,GAAG,CAAC,EAAE;QAChDC,sBAAsB,CAAEmC,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;QAC1C;MACF;MACAV,cAAc,CAAEU,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;IACpC;EACF,CAAC;EAED,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACP,SAAS,CAAC,CAAC,EAAE;MAChBI,KAAK,CAAC,4CAA4C,CAAC;MACnD;IACF;IACA,IAAIN,eAAe,EAAE;IACrBC,kBAAkB,CAAC,IAAI,CAAC;IACxBF,aAAa,CAAC,IAAI,CAAC;;IAEnB;IACA,MAAMW,qBAAqB,GAAG,EAAE;IAChC,MAAMC,qBAAqB,GAAG,EAAE;IAChC7D,YAAY,CAAC8D,OAAO,CAAC,CAACC,OAAO,EAAEC,GAAG,KAAK;MACrChD,WAAW,CAAC8C,OAAO,CAAC,CAACG,GAAG,EAAEC,CAAC,KAAK;QAC9B,MAAMC,SAAS,GAAGhD,gBAAgB,CAAC6C,GAAG,CAAC,CAACE,CAAC,CAAC;QAC1C,IAAIC,SAAS,KAAK,UAAU,EAAE;UAC5BP,qBAAqB,CAACQ,IAAI,CAAC,GAAGH,GAAG,CAAChD,QAAQ,KAAK8C,OAAO,CAAC7D,QAAQ,GAAG,CAAC;QACrE,CAAC,MAAM,IAAIiE,SAAS,KAAK,UAAU,EAAE;UACnCN,qBAAqB,CAACO,IAAI,CAAC,GAAGH,GAAG,CAAC/C,QAAQ,KAAK6C,OAAO,CAAC7D,QAAQ,GAAG,CAAC;QACrE;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,IAAImE,aAAa,GAAG,EAAE;IACtB,IAAI9B,UAAU,KAAK,OAAO,EAAE8B,aAAa,GAAG,QAAQ,CAAC,KAChD,IAAI9B,UAAU,KAAK,SAAS,EAAE8B,aAAa,GAAG,QAAQ,CAAC,KACvD,IAAI9B,UAAU,KAAK,KAAK,EAAE8B,aAAa,GAAG,OAAO;IAEtD,MAAMC,IAAI,GAAG;MACX9F,OAAO;MACP+F,QAAQ,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MAClCC,OAAO,EAAE;QACPC,QAAQ,EAAE3E,YAAY,CAACuB,GAAG,CAAEhB,CAAC,IAAKA,CAAC,CAACL,QAAQ,CAAC,CAAC0E,IAAI,CAAC,IAAI,CAAC;QACxDC,iBAAiB,EAAEjB,qBAAqB,CAACgB,IAAI,CAAC,IAAI,CAAC;QACnDE,iBAAiB,EAAEjB,qBAAqB,CAACe,IAAI,CAAC,IAAI,CAAC;QACnD/C,UAAU;QACVE,cAAc;QACdgD,qBAAqB,EAAE7C,oBAAoB,CAAC0C,IAAI,CAAC,IAAI,CAAC;QACtDrC,UAAU,EAAE8B;MACd;IACF,CAAC;IAED,IAAI;MACF,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,mDAAmD,EAAE;QAChFC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAChB,IAAI,CAAC;QAC1BiB,WAAW,EAAE;MACf,CAAC,CAAC;MACF,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QAChBhC,KAAK,CAAC,8BAA8B,CAAC;MACvC;IACF,CAAC,CAAC,OAAOiC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDjC,KAAK,CAAC,8BAA8B,CAAC;IACvC;EACF,CAAC;;EAED;EACA,MAAMmC,aAAa,GAAG/H,YAAY,CAAC;IACjCgI,YAAY,EAAEA,CAAA,KAAMlC,UAAU,CAAC,CAAC;IAChCmC,aAAa,EAAEA,CAAA,KAAM;MACnB,IAAIzC,SAAS,CAAC,CAAC,EAAEG,UAAU,CAAC,CAAC;IAC/B,CAAC;IACDuC,cAAc,EAAE;EAClB,CAAC,CAAC;;EAEF;EACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,QAAQjD,WAAW;MACjB,KAAK,CAAC;QACJ,oBACEzE,OAAA;UAAK2H,SAAS,EAAC,uBAAuB;UAAAC,QAAA,gBACpC5H,OAAA;YAAA4H,QAAA,EAAI;UAAyB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClChI,OAAA,CAACR,WAAW;YACViD,WAAW,EAAEpC,kBAAmB;YAChC4H,2BAA2B,EAAEA,CAAC;cAAEzH;YAAM,CAAC,KACrCF,qBAAqB,CAACC,qBAAqB,CAACC,KAAK,CAAC,CACnD;YACD0H,2BAA2B,EAAEA,CAAA,KAAM5H,qBAAqB,CAAC,EAAE,CAAE;YAC7D6H,kBAAkB,EAAGC,UAAU,IAAKA,UAAW;YAC/CC,gBAAgB,EAAGD,UAAU,iBAC3BpI,OAAA;cAAKsI,KAAK,EAAE;gBAAEC,SAAS,EAAE,QAAQ;gBAAEC,eAAe,EAAE,MAAM;gBAAEC,KAAK,EAAE,MAAM;gBAAEC,QAAQ,EAAE;cAAO,CAAE;cAAAd,QAAA,EAC3FQ;YAAU;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CACL;YACFW,UAAU,EAAExH;UAAkB;YAAA0G,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAGV,KAAK,CAAC;QACJ,oBACEhI,OAAA;UAAA4H,QAAA,gBACE5H,OAAA;YAAA4H,QAAA,EAAI;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACrBrG,YAAY,CAACuB,GAAG,CAAC,CAACwC,OAAO,EAAEtD,KAAK,kBAC/BpC,OAAA;YAAsB2H,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC3C5H,OAAA,CAACR,WAAW;cACViD,WAAW,EAAEV,mBAAoB;cACjCkG,2BAA2B,EAAEA,CAAC;gBAAEzH;cAAM,CAAC,KACrCwB,sBAAsB,CAACC,qBAAqB,CAACzB,KAAK,CAAC,CACpD;cACD0H,2BAA2B,EAAExF,wBAAyB;cACtDyF,kBAAkB,EAAGC,UAAU,IAAKA,UAAW;cAC/CC,gBAAgB,EAAGD,UAAU,iBAC3BpI,OAAA;gBAAKsI,KAAK,EAAE;kBAAEC,SAAS,EAAE,QAAQ;kBAAEC,eAAe,EAAE,MAAM;kBAAEC,KAAK,EAAE,MAAM;kBAAEC,QAAQ,EAAE;gBAAO,CAAE;gBAAAd,QAAA,EAC3FQ;cAAU;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACR,CACL;cACFW,UAAU,EAAEpG,iBAAiB,CAACH,KAAK;YAAE;cAAAyF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtC,CAAC,EACD5F,KAAK,KAAKT,YAAY,CAACf,MAAM,GAAG,CAAC,iBAChCZ,OAAA;cAAQuD,IAAI,EAAC,QAAQ;cAACoE,SAAS,EAAC,iBAAiB;cAACiB,OAAO,EAAEtG,gBAAiB;cAAAsF,QAAA,eAC1E5H,OAAA;gBAAM2H,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,EAAC;cAAC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvC,CACT;UAAA,GAnBOtC,OAAO,CAAC5D,EAAE;YAAA+F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAoBf,CACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAGV,KAAK,CAAC;QACJ,oBACEhI,OAAA;UAAA4H,QAAA,gBACE5H,OAAA;YAAA4H,QAAA,EAAKjG,YAAY,CAACqB,mBAAmB,CAAC,CAACnB;UAAQ;YAAAgG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrDhI,OAAA;YAAKsI,KAAK,EAAE;cAAEO,YAAY,EAAE;YAAO;UAAE;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEhC,CAAC,EACLrF,WAAW,CAACO,GAAG,CAAC,CAAC0C,GAAG,EAAED,GAAG,kBACxB3F,OAAA;YAAe2H,SAAS,EAAC,aAAa;YAAAC,QAAA,gBACpC5H,OAAA;cACE2H,SAAS,EAAE,eAAe7E,gBAAgB,CAACE,mBAAmB,CAAC,CAAC2C,GAAG,CAAC,KAAK,UAAU,GAAG,OAAO,GAAG,EAAE,EAAG;cACrGiD,OAAO,EAAEA,CAAA,KAAMvF,6BAA6B,CAACsC,GAAG,EAAE,UAAU,CAAE;cAAAiC,QAAA,EAE7DhC,GAAG,CAAChD;YAAQ;cAAAiF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC,eACThI,OAAA;cACE2H,SAAS,EAAE,eAAe7E,gBAAgB,CAACE,mBAAmB,CAAC,CAAC2C,GAAG,CAAC,KAAK,UAAU,GAAG,KAAK,GAAG,EAAE,EAAG;cACnGiD,OAAO,EAAEA,CAAA,KAAMvF,6BAA6B,CAACsC,GAAG,EAAE,UAAU,CAAE;cAAAiC,QAAA,EAE7DhC,GAAG,CAAC/C;YAAQ;cAAAgF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC;UAAA,GAZDrC,GAAG;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAaR,CACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAGV,KAAK,CAAC;QACJ,oBACEhI,OAAA;UAAA4H,QAAA,gBACE5H,OAAA;YAAA4H,QAAA,EAAI;UAA+B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxChI,OAAA;YAAK2H,SAAS,EAAC,sBAAsB;YAAAC,QAAA,gBACnC5H,OAAA;cACE2H,SAAS,EAAE,eAAenE,UAAU,KAAK,+CAA+C,GAAG,OAAO,GAAG,EAAE,EAAG;cAC1G8E,KAAK,EAAE;gBAAEQ,KAAK,EAAE;cAAO,CAAE;cACzBF,OAAO,EAAEA,CAAA,KAAMnF,aAAa,CAAC,+CAA+C,CAAE;cAAAmE,QAAA,EAC/E;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACThI,OAAA;cACE2H,SAAS,EAAE,eAAenE,UAAU,KAAK,yDAAyD,GAAG,KAAK,GAAG,EAAE,EAAG;cAClH8E,KAAK,EAAE;gBAAEQ,KAAK,EAAE;cAAO,CAAE;cACzBF,OAAO,EAAEA,CAAA,KAAMnF,aAAa,CAAC,yDAAyD,CAAE;cAAAmE,QAAA,EACzF;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAGV,KAAK,CAAC;QACJ,oBACEhI,OAAA;UAAK2H,SAAS,EAAC,wBAAwB;UAAAC,QAAA,gBACrC5H,OAAA;YAAA4H,QAAA,EAAI;UAA+B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxChI,OAAA;YAAK2H,SAAS,EAAC,sBAAsB;YAAAC,QAAA,eACnC5H,OAAA;cACEuD,IAAI,EAAC,MAAM;cACXoE,SAAS,EAAC,aAAa;cACvBnH,KAAK,EAAEkD,cAAe;cACtBrC,QAAQ,EAAGJ,CAAC,IAAK0C,iBAAiB,CAAC1C,CAAC,CAAC8H,MAAM,CAACvI,KAAK,CAAE;cACnDY,WAAW,EAAC;YAAoC;cAAAyG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAGV,KAAK,CAAC;QACJ,oBACEhI,OAAA;UAAA4H,QAAA,gBACE5H,OAAA;YAAA4H,QAAA,EAAI;UAAiC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACzCpE,iBAAiB,CAACV,GAAG,CAAC,CAAC8F,GAAG,EAAErD,GAAG,kBAC9B3F,OAAA;YAEE2H,SAAS,EAAE,kBAAkB9D,oBAAoB,CAAC9C,QAAQ,CAACiI,GAAG,CAAC,GAAG,UAAU,GAAG,EAAE,EAAG;YACpFJ,OAAO,EAAEA,CAAA,KAAM7E,yBAAyB,CAACiF,GAAG,CAAE;YAAApB,QAAA,EAE7CoB;UAAG,GAJCrD,GAAG;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKF,CACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAGV,KAAK,CAAC;QACJ,oBACEhI,OAAA;UAAA4H,QAAA,gBACE5H,OAAA;YAAA4H,QAAA,EAAI;UAA6B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtChI,OAAA;YAAK2H,SAAS,EAAC,sBAAsB;YAAAC,QAAA,gBACnC5H,OAAA;cACE2H,SAAS,EAAE,kBAAkBzD,UAAU,KAAK,OAAO,GAAG,gBAAgB,GAAG,EAAE,EAAG;cAC9E0E,OAAO,EAAEA,CAAA,KAAMzE,aAAa,CAAC,OAAO,CAAE;cAAAyD,QAAA,eAEtC5H,OAAA;gBAAKiJ,GAAG,EAAErJ,QAAS;gBAACsJ,GAAG,EAAC,OAAO;gBAACZ,KAAK,EAAE;kBAAEQ,KAAK,EAAE,MAAM;kBAAEK,YAAY,EAAE;gBAAO;cAAE;gBAAAtB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5E,CAAC,eACThI,OAAA;cACE2H,SAAS,EAAE,kBAAkBzD,UAAU,KAAK,SAAS,GAAG,kBAAkB,GAAG,EAAE,EAAG;cAClF0E,OAAO,EAAEA,CAAA,KAAMzE,aAAa,CAAC,SAAS,CAAE;cAAAyD,QAAA,eAExC5H,OAAA;gBAAKiJ,GAAG,EAAEpJ,QAAS;gBAACqJ,GAAG,EAAC,SAAS;gBAACZ,KAAK,EAAE;kBAAEQ,KAAK,EAAE,MAAM;kBAAEK,YAAY,EAAE;gBAAO;cAAE;gBAAAtB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9E,CAAC,eACThI,OAAA;cACE2H,SAAS,EAAE,kBAAkBzD,UAAU,KAAK,KAAK,GAAG,cAAc,GAAG,EAAE,EAAG;cAC1E0E,OAAO,EAAEA,CAAA,KAAMzE,aAAa,CAAC,KAAK,CAAE;cAAAyD,QAAA,eAEpC5H,OAAA;gBAAKiJ,GAAG,EAAEnJ,MAAO;gBAACoJ,GAAG,EAAC,KAAK;gBAACZ,KAAK,EAAE;kBAAEQ,KAAK,EAAE,MAAM;kBAAEK,YAAY,EAAE;gBAAO;cAAE;gBAAAtB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAGV;QACE,OAAO,IAAI;IACf;EACF,CAAC;EAED,IAAIrD,UAAU,EAAE;IACd,oBACE3E,OAAA;MACE2H,SAAS,EAAC,mBAAmB;MAC7BW,KAAK,EAAE;QACL7I,eAAe,EAAE,OAAOA,eAAe,GAAG;QAC1C2J,cAAc,EAAE,OAAO;QACvBC,kBAAkB,EAAE;MACtB,CAAE;MAAAzB,QAAA,eAEF5H,OAAA;QAAA4H,QAAA,EAAI;MAAiC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAEV;EAEA,oBACEhI,OAAA;IAAA,GACMsH,aAAa;IACjBgC,GAAG,EAAElF,YAAa;IAClBuD,SAAS,EAAC,iCAAiC;IAC3CW,KAAK,EAAE;MAAE7I,eAAe,EAAE,OAAOA,eAAe;IAAI,CAAE;IAAAmI,QAAA,gBAGtD5H,OAAA;MAAK2H,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzBnD,WAAW,GAAG,CAAC,gBACdzE,OAAA;QACE2H,SAAS,EAAE,WAAW5C,SAAS,CAAC,CAAC,GAAG,SAAS,GAAG,UAAU,EAAG;QAC7D6D,OAAO,EAAE7D,SAAS,CAAC,CAAC,GAAGG,UAAU,GAAGqE,SAAU;QAAA3B,QAAA,EAC/C;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAEThI,OAAA;QACE2H,SAAS,EAAE,WAAW5C,SAAS,CAAC,CAAC,GAAG,SAAS,GAAG,UAAU,EAAG;QAC7D6D,OAAO,EAAE7D,SAAS,CAAC,CAAC,GAAGO,YAAY,GAAGiE,SAAU;QAAA3B,QAAA,EACjD;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IACT;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EACLN,UAAU,CAAC,CAAC;EAAA;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV,CAAC;AAAC9H,EAAA,CArcID,YAAY;EAAA,QA2OMV,YAAY;AAAA;AAAAiK,EAAA,GA3O9BvJ,YAAY;AAuclB,eAAeA,YAAY;AAAC,IAAAuJ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}