{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shapeless\\\\Desktop\\\\miniapp\\\\src\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './Register.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [status, setStatus] = useState('');\n  const [emailValid, setEmailValid] = useState(false);\n  const [verificationCode, setVerificationCode] = useState('');\n  const [generatedCode, setGeneratedCode] = useState('');\n  const [level, setLevel] = useState(''); // Объявляем состояние для уровня доступа\n\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n  const handleEmailSubmit = async () => {\n    const domain = email.split('@')[1]; // Получаем домен из email\n\n    try {\n      // Отправляем запрос на сервер для проверки домена\n      console.log(\"Отправляем email на сервер:\", email);\n      const response = await axios.post('http://127.0.0.1:5000/check_email', {\n        email\n      });\n      console.log(\"Ответ сервера:\", response.data); // Логируем ответ от сервера\n\n      // Если домен найден в одной из категорий\n      if (response.data.isValid) {\n        setEmailValid(true);\n        setLevel(response.data.level); // Сохраняем уровень доступа\n        const code = Math.random().toString(36).slice(-12); // Генерация 12-значного кода\n        setGeneratedCode(code);\n\n        // Отправка кода на почту\n        sendEmail(email, code);\n        setStatus('На ваш email отправлен код регистрации.');\n      } else {\n        setStatus('Увы, ваш домен не зарегистрирован в нашей системе.');\n      }\n    } catch (error) {\n      console.error('Ошибка при проверке email', error);\n      setStatus('Произошла ошибка при проверке email. Попробуйте снова.');\n    }\n  };\n  const handleCodeSubmit = () => {\n    if (verificationCode === generatedCode) {\n      setStatus('Регистрация успешна!');\n      // Присваивание уровня доступа в приложении\n      console.log('Пользователь имеет уровень:', level);\n      // Дополнительные действия, такие как сохранение данных о пользователе, редирект и т.д.\n    } else {\n      setStatus('Неверный код, попробуйте снова.');\n    }\n  };\n  const sendEmail = (toEmail, code) => {\n    // Логика отправки email\n    console.log(`Sending email to: ${toEmail} with code: ${code}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448\\u0443 \\u043A\\u043E\\u0440\\u043F\\u043E\\u0440\\u0430\\u0442\\u0438\\u0432\\u043D\\u0443\\u044E \\u043F\\u043E\\u0447\\u0442\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: handleEmailChange,\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEmailSubmit,\n      children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), emailValid && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: verificationCode,\n        onChange: e => setVerificationCode(e.target.value),\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043A\\u043E\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCodeSubmit,\n        children: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C \\u043A\\u043E\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), !emailValid && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"MunO2k8jnFhh5P+2ws7MBsiwQzU=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","email","setEmail","status","setStatus","emailValid","setEmailValid","verificationCode","setVerificationCode","generatedCode","setGeneratedCode","level","setLevel","handleEmailChange","e","target","value","handleEmailSubmit","domain","split","console","log","response","post","data","isValid","code","Math","random","toString","slice","sendEmail","error","handleCodeSubmit","toEmail","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/shapeless/Desktop/miniapp/src/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Register.css';\r\n\r\nconst Register = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const [emailValid, setEmailValid] = useState(false);\r\n  const [verificationCode, setVerificationCode] = useState('');\r\n  const [generatedCode, setGeneratedCode] = useState('');\r\n  const [level, setLevel] = useState('');  // Объявляем состояние для уровня доступа\r\n\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const handleEmailSubmit = async () => {\r\n    const domain = email.split('@')[1];  // Получаем домен из email\r\n\r\n    try {\r\n      // Отправляем запрос на сервер для проверки домена\r\n      console.log(\"Отправляем email на сервер:\", email);\r\n      const response = await axios.post('http://127.0.0.1:5000/check_email', { email });\r\n      console.log(\"Ответ сервера:\", response.data);  // Логируем ответ от сервера\r\n\r\n      // Если домен найден в одной из категорий\r\n      if (response.data.isValid) {\r\n        setEmailValid(true);\r\n        setLevel(response.data.level);  // Сохраняем уровень доступа\r\n        const code = Math.random().toString(36).slice(-12); // Генерация 12-значного кода\r\n        setGeneratedCode(code);\r\n\r\n        // Отправка кода на почту\r\n        sendEmail(email, code);\r\n\r\n        setStatus('На ваш email отправлен код регистрации.');\r\n      } else {\r\n        setStatus('Увы, ваш домен не зарегистрирован в нашей системе.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при проверке email', error);\r\n      setStatus('Произошла ошибка при проверке email. Попробуйте снова.');\r\n    }\r\n  };\r\n\r\n  const handleCodeSubmit = () => {\r\n    if (verificationCode === generatedCode) {\r\n      setStatus('Регистрация успешна!');\r\n      // Присваивание уровня доступа в приложении\r\n      console.log('Пользователь имеет уровень:', level);\r\n      // Дополнительные действия, такие как сохранение данных о пользователе, редирект и т.д.\r\n    } else {\r\n      setStatus('Неверный код, попробуйте снова.');\r\n    }\r\n  };\r\n\r\n  const sendEmail = (toEmail, code) => {\r\n    // Логика отправки email\r\n    console.log(`Sending email to: ${toEmail} with code: ${code}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <h2>Введите вашу корпоративную почту</h2>\r\n      <input\r\n        type=\"email\"\r\n        value={email}\r\n        onChange={handleEmailChange}\r\n        placeholder=\"Введите email\"\r\n      />\r\n      <button onClick={handleEmailSubmit}>Зарегистрироваться</button>\r\n\r\n      {emailValid && (\r\n        <>\r\n          <h3>{status}</h3>\r\n          <input\r\n            type=\"text\"\r\n            value={verificationCode}\r\n            onChange={(e) => setVerificationCode(e.target.value)}\r\n            placeholder=\"Введите код\"\r\n          />\r\n          <button onClick={handleCodeSubmit}>Подтвердить код</button>\r\n        </>\r\n      )}\r\n\r\n      {!emailValid && <h3>{status}</h3>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}