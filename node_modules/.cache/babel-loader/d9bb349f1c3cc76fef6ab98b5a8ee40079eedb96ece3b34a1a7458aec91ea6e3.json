{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{useSwipeable}from'react-swipeable';import'./ProfilePage.css';import backgroundImage from'./components/background.png';// Подключаем Telegram WebApp API\nimport{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const Telegram=window.Telegram?window.Telegram.WebApp:null;const ProfilePage=()=>{const navigate=useNavigate();const userName=localStorage.getItem('userName')||'Гость';const[swipeClass,setSwipeClass]=useState('');useEffect(()=>{if(Telegram){Telegram.expand();console.log(\"Telegram WebView активирован\");}},[]);const handleLogout=()=>{localStorage.removeItem('userToken');localStorage.removeItem('userUuid');navigate('/');};const handleSwipeLeft=()=>{console.log(\"Свайп влево обнаружен!\");setSwipeClass('swipe-left');setTimeout(()=>{navigate('/main-menu');},500);};const swipeHandlers=useSwipeable({onSwipedLeft:handleSwipeLeft,preventDefault:true});return/*#__PURE__*/_jsxs(\"div\",{className:`profile-container ${swipeClass}`,style:{backgroundImage:`url(${backgroundImage})`,backgroundSize:'cover',backgroundPosition:'center'},...swipeHandlers,children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"profile-text\",children:[userName,\", \\u043D\\u0430\\u0436\\u043C\\u0438 \\u0447\\u0442\\u043E\\u0431\\u044B \\u0432\\u044B\\u0439\\u0442\\u0438\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"logout-btn\",onClick:handleLogout,children:\"\\u0412\\u044B\\u0439\\u0442\\u0438\"})]});};export default ProfilePage;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useSwipeable","backgroundImage","jsxs","_jsxs","jsx","_jsx","Telegram","window","WebApp","ProfilePage","navigate","userName","localStorage","getItem","swipeClass","setSwipeClass","expand","console","log","handleLogout","removeItem","handleSwipeLeft","setTimeout","swipeHandlers","onSwipedLeft","preventDefault","className","style","backgroundSize","backgroundPosition","children","onClick"],"sources":["C:/Users/shapeless/Desktop/miniapp/src/ProfilePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSwipeable } from 'react-swipeable';\r\nimport './ProfilePage.css';\r\nimport backgroundImage from './components/background.png';\r\n\r\n// Подключаем Telegram WebApp API\r\nconst Telegram = window.Telegram ? window.Telegram.WebApp : null;\r\n\r\nconst ProfilePage = () => {\r\n  const navigate = useNavigate();\r\n  const userName = localStorage.getItem('userName') || 'Гость';\r\n  const [swipeClass, setSwipeClass] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (Telegram) {\r\n      Telegram.expand();\r\n      console.log(\"Telegram WebView активирован\");\r\n    }\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('userToken');\r\n    localStorage.removeItem('userUuid');\r\n    navigate('/');\r\n  };\r\n\r\n  const handleSwipeLeft = () => {\r\n    console.log(\"Свайп влево обнаружен!\");\r\n    setSwipeClass('swipe-left');\r\n    setTimeout(() => {\r\n      navigate('/main-menu');\r\n    }, 500);\r\n  };\r\n\r\n  const swipeHandlers = useSwipeable({\r\n    onSwipedLeft: handleSwipeLeft,\r\n    preventDefault: true\r\n  });\r\n\r\n  return (\r\n    <div className={`profile-container ${swipeClass}`}\r\n         style={{ backgroundImage: `url(${backgroundImage})`, backgroundSize: 'cover', backgroundPosition: 'center' }}\r\n         {...swipeHandlers}>\r\n      <h1 className=\"profile-text\">{userName}, нажми чтобы выйти</h1>\r\n      <button className=\"logout-btn\" onClick={handleLogout}>\r\n        Выйти\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,YAAY,KAAQ,iBAAiB,CAC9C,MAAO,mBAAmB,CAC1B,MAAO,CAAAC,eAAe,KAAM,6BAA6B,CAEzD;AAAA,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,QAAQ,CAAGC,MAAM,CAACD,QAAQ,CAAGC,MAAM,CAACD,QAAQ,CAACE,MAAM,CAAG,IAAI,CAEhE,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAAAC,QAAQ,CAAGX,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAY,QAAQ,CAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,EAAI,OAAO,CAC5D,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CAEhDC,SAAS,CAAC,IAAM,CACd,GAAIQ,QAAQ,CAAE,CACZA,QAAQ,CAACU,MAAM,CAAC,CAAC,CACjBC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC,CAC7C,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzBP,YAAY,CAACQ,UAAU,CAAC,WAAW,CAAC,CACpCR,YAAY,CAACQ,UAAU,CAAC,UAAU,CAAC,CACnCV,QAAQ,CAAC,GAAG,CAAC,CACf,CAAC,CAED,KAAM,CAAAW,eAAe,CAAGA,CAAA,GAAM,CAC5BJ,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC,CACrCH,aAAa,CAAC,YAAY,CAAC,CAC3BO,UAAU,CAAC,IAAM,CACfZ,QAAQ,CAAC,YAAY,CAAC,CACxB,CAAC,CAAE,GAAG,CAAC,CACT,CAAC,CAED,KAAM,CAAAa,aAAa,CAAGvB,YAAY,CAAC,CACjCwB,YAAY,CAAEH,eAAe,CAC7BI,cAAc,CAAE,IAClB,CAAC,CAAC,CAEF,mBACEtB,KAAA,QAAKuB,SAAS,CAAE,qBAAqBZ,UAAU,EAAG,CAC7Ca,KAAK,CAAE,CAAE1B,eAAe,CAAE,OAAOA,eAAe,GAAG,CAAE2B,cAAc,CAAE,OAAO,CAAEC,kBAAkB,CAAE,QAAS,CAAE,IACzGN,aAAa,CAAAO,QAAA,eACpB3B,KAAA,OAAIuB,SAAS,CAAC,cAAc,CAAAI,QAAA,EAAEnB,QAAQ,CAAC,gGAAmB,EAAI,CAAC,cAC/DN,IAAA,WAAQqB,SAAS,CAAC,YAAY,CAACK,OAAO,CAAEZ,YAAa,CAAAW,QAAA,CAAC,gCAEtD,CAAQ,CAAC,EACN,CAAC,CAEV,CAAC,CAED,cAAe,CAAArB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}