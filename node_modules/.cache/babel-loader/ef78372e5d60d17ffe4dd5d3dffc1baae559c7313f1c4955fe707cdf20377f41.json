{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shapeless\\\\Desktop\\\\miniapp\\\\src\\\\ConfirmCodePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport './ConfirmCodePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConfirmCodePage = () => {\n  _s();\n  var _location$state;\n  const [code, setCode] = useState('');\n  const [status, setStatus] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const email = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.email) || '';\n  const handleCodeChange = e => {\n    setCode(e.target.value);\n  };\n  const handleVerifyCode = async () => {\n    setStatus('Проверяем код...');\n    try {\n      const response = await fetch('http://127.0.0.1:5000/verify_code', {\n        method: 'POST',\n        body: JSON.stringify({\n          email,\n          code\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const result = await response.json();\n      if (result.success) {\n        setStatus('✅ Регистрация успешна! Добро пожаловать!');\n        setTimeout(() => {\n          navigate('/polls'); // Переход на страницу с опросами после успешной регистрации\n        }, 2000);\n      } else {\n        setStatus('❌ Неверный код, попробуйте снова.');\n      }\n    } catch (error) {\n      setStatus('Ошибка проверки кода. Попробуйте позже.');\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"confirm-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043A\\u043E\\u0434, \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u043D\\u044B\\u0439 \\u043D\\u0430 \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u043D\\u0443\\u044E \\u043F\\u043E\\u0447\\u0442\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: code,\n      onChange: handleCodeChange,\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043A\\u043E\\u0434\",\n      className: \"input-field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn red-btn\",\n      onClick: handleVerifyCode,\n      children: \"\\u041F\\u0440\\u043E\\u0432\\u0435\\u0440\\u0438\\u0442\\u044C \\u043A\\u043E\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(ConfirmCodePage, \"GwzteAleRTO/1t5ZwuUByO6BIC4=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ConfirmCodePage;\nexport default ConfirmCodePage;\nvar _c;\n$RefreshReg$(_c, \"ConfirmCodePage\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","jsxDEV","_jsxDEV","ConfirmCodePage","_s","_location$state","code","setCode","status","setStatus","navigate","location","email","state","handleCodeChange","e","target","value","handleVerifyCode","response","fetch","method","body","JSON","stringify","headers","result","json","success","setTimeout","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/shapeless/Desktop/miniapp/src/ConfirmCodePage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport './ConfirmCodePage.css';\r\n\r\nconst ConfirmCodePage = () => {\r\n  const [code, setCode] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const email = location.state?.email || '';\r\n\r\n  const handleCodeChange = (e) => {\r\n    setCode(e.target.value);\r\n  };\r\n\r\n  const handleVerifyCode = async () => {\r\n    setStatus('Проверяем код...');\r\n\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:5000/verify_code', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ email, code }),\r\n        headers: { 'Content-Type': 'application/json' },\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.success) {\r\n        setStatus('✅ Регистрация успешна! Добро пожаловать!');\r\n        setTimeout(() => {\r\n          navigate('/polls'); // Переход на страницу с опросами после успешной регистрации\r\n        }, 2000);\r\n      } else {\r\n        setStatus('❌ Неверный код, попробуйте снова.');\r\n      }\r\n    } catch (error) {\r\n      setStatus('Ошибка проверки кода. Попробуйте позже.');\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"confirm-container\">\r\n    <div className=\"logo\"/>\r\n      <h2>Введите код, отправленный на указанную почту</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={code}\r\n        onChange={handleCodeChange}\r\n        placeholder=\"Введите код\"\r\n        className=\"input-field\"\r\n      />\r\n      <button className=\"btn red-btn\" onClick={handleVerifyCode}>Проверить код</button>\r\n      <p>{status}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmCodePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}