{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shapeless\\\\Desktop\\\\miniapp\\\\src\\\\MarzaPollPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport backgroundImage from './components/background.png';\nimport logo from './components/logo.png';\nimport './MarzaPollPage.css'; // создайте отдельный CSS-файл для стилей, или добавьте стили в общий\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MarzaPollPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [selectedOption, setSelectedOption] = useState('');\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const pollQuestion = \"Зачем продавать маржа?\";\n  const options = [\"Чтобы отстал руководитель\", \"Чтобы перевыполнить план и заработать много деняк\", \"Чтобы победить в конкурсе и полетать на самолёте\", \"Чтобы клиент меня любил сильнее, чем маму\", \"Какого ещё маржа? Я не в курсе\"];\n  const handleSubmit = async () => {\n    if (!selectedOption) return;\n    // Здесь можно реализовать вызов API для регистрации голоса\n    // Например: await fetch('/api/poll/marza', { method: 'POST', body: JSON.stringify({ answer: selectedOption }) });\n    setIsSubmitted(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"marza-container\",\n    style: {\n      backgroundImage: `url(${backgroundImage})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"marza-logo-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Logo\",\n        className: \"marza-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"marza-content-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"marza-title\",\n        children: pollQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), !isSubmitted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"marza-options\",\n          children: options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"marza-option-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"marzaPoll\",\n              value: option,\n              checked: selectedOption === option,\n              onChange: () => setSelectedOption(option)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"marza-option-text\",\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"marza-submit-btn\",\n          onClick: handleSubmit,\n          disabled: !selectedOption,\n          children: \"\\u0414\\u0430\\u043B\\u0435\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"marza-thanks\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0421\\u043F\\u0430\\u0441\\u0438\\u0431\\u043E \\u0437\\u0430 \\u0443\\u0447\\u0430\\u0441\\u0442\\u0438\\u0435!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(MarzaPollPage, \"boqE2xwLrSmYdgTN0fzl/IySW1w=\", false, function () {\n  return [useNavigate];\n});\n_c = MarzaPollPage;\nexport default MarzaPollPage;\nvar _c;\n$RefreshReg$(_c, \"MarzaPollPage\");","map":{"version":3,"names":["React","useState","useNavigate","backgroundImage","logo","jsxDEV","_jsxDEV","Fragment","_Fragment","MarzaPollPage","_s","navigate","selectedOption","setSelectedOption","isSubmitted","setIsSubmitted","pollQuestion","options","handleSubmit","className","style","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","option","idx","type","name","value","checked","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/shapeless/Desktop/miniapp/src/MarzaPollPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport backgroundImage from './components/background.png';\r\nimport logo from './components/logo.png';\r\nimport './MarzaPollPage.css'; // создайте отдельный CSS-файл для стилей, или добавьте стили в общий\r\n\r\nconst MarzaPollPage = () => {\r\n  const navigate = useNavigate();\r\n  const [selectedOption, setSelectedOption] = useState('');\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  const pollQuestion = \"Зачем продавать маржа?\";\r\n  const options = [\r\n    \"Чтобы отстал руководитель\",\r\n    \"Чтобы перевыполнить план и заработать много деняк\",\r\n    \"Чтобы победить в конкурсе и полетать на самолёте\",\r\n    \"Чтобы клиент меня любил сильнее, чем маму\",\r\n    \"Какого ещё маржа? Я не в курсе\"\r\n  ];\r\n\r\n  const handleSubmit = async () => {\r\n    if (!selectedOption) return;\r\n    // Здесь можно реализовать вызов API для регистрации голоса\r\n    // Например: await fetch('/api/poll/marza', { method: 'POST', body: JSON.stringify({ answer: selectedOption }) });\r\n    setIsSubmitted(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"marza-container\" style={{ backgroundImage: `url(${backgroundImage})` }}>\r\n      {/* Логотип */}\r\n      <div className=\"marza-logo-container\">\r\n        <img src={logo} alt=\"Logo\" className=\"marza-logo\" />\r\n      </div>\r\n      {/* Контент опроса */}\r\n      <div className=\"marza-content-wrapper\">\r\n        <h2 className=\"marza-title\">{pollQuestion}</h2>\r\n        {!isSubmitted ? (\r\n          <>\r\n            <div className=\"marza-options\">\r\n              {options.map((option, idx) => (\r\n                <label key={idx} className=\"marza-option-label\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"marzaPoll\"\r\n                    value={option}\r\n                    checked={selectedOption === option}\r\n                    onChange={() => setSelectedOption(option)}\r\n                  />\r\n                  <span className=\"marza-option-text\">{option}</span>\r\n                </label>\r\n              ))}\r\n            </div>\r\n            <button className=\"marza-submit-btn\" onClick={handleSubmit} disabled={!selectedOption}>\r\n              Далее\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <div className=\"marza-thanks\">\r\n            <h3>Спасибо за участие!</h3>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarzaPollPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,eAAe,MAAM,6BAA6B;AACzD,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAO,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMe,YAAY,GAAG,wBAAwB;EAC7C,MAAMC,OAAO,GAAG,CACd,2BAA2B,EAC3B,mDAAmD,EACnD,kDAAkD,EAClD,2CAA2C,EAC3C,gCAAgC,CACjC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACN,cAAc,EAAE;IACrB;IACA;IACAG,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,oBACET,OAAA;IAAKa,SAAS,EAAC,iBAAiB;IAACC,KAAK,EAAE;MAAEjB,eAAe,EAAE,OAAOA,eAAe;IAAI,CAAE;IAAAkB,QAAA,gBAErFf,OAAA;MAAKa,SAAS,EAAC,sBAAsB;MAAAE,QAAA,eACnCf,OAAA;QAAKgB,GAAG,EAAElB,IAAK;QAACmB,GAAG,EAAC,MAAM;QAACJ,SAAS,EAAC;MAAY;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eAENrB,OAAA;MAAKa,SAAS,EAAC,uBAAuB;MAAAE,QAAA,gBACpCf,OAAA;QAAIa,SAAS,EAAC,aAAa;QAAAE,QAAA,EAAEL;MAAY;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAC9C,CAACb,WAAW,gBACXR,OAAA,CAAAE,SAAA;QAAAa,QAAA,gBACEf,OAAA;UAAKa,SAAS,EAAC,eAAe;UAAAE,QAAA,EAC3BJ,OAAO,CAACW,GAAG,CAAC,CAACC,MAAM,EAAEC,GAAG,kBACvBxB,OAAA;YAAiBa,SAAS,EAAC,oBAAoB;YAAAE,QAAA,gBAC7Cf,OAAA;cACEyB,IAAI,EAAC,OAAO;cACZC,IAAI,EAAC,WAAW;cAChBC,KAAK,EAAEJ,MAAO;cACdK,OAAO,EAAEtB,cAAc,KAAKiB,MAAO;cACnCM,QAAQ,EAAEA,CAAA,KAAMtB,iBAAiB,CAACgB,MAAM;YAAE;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3C,CAAC,eACFrB,OAAA;cAAMa,SAAS,EAAC,mBAAmB;cAAAE,QAAA,EAAEQ;YAAM;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA,GARzCG,GAAG;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OASR,CACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNrB,OAAA;UAAQa,SAAS,EAAC,kBAAkB;UAACiB,OAAO,EAAElB,YAAa;UAACmB,QAAQ,EAAE,CAACzB,cAAe;UAAAS,QAAA,EAAC;QAEvF;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,eACT,CAAC,gBAEHrB,OAAA;QAAKa,SAAS,EAAC,cAAc;QAAAE,QAAA,eAC3Bf,OAAA;UAAAe,QAAA,EAAI;QAAmB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjB,EAAA,CA1DID,aAAa;EAAA,QACAP,WAAW;AAAA;AAAAoC,EAAA,GADxB7B,aAAa;AA4DnB,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}