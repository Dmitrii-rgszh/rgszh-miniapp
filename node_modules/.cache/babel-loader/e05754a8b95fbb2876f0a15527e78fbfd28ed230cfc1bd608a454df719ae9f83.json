{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shapeless\\\\Desktop\\\\miniapp\\\\src\\\\AssessmentPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport backgroundImage from './components/background.png';\nimport logo from './components/logo.png';\nimport surnames from './components/autosuggest/surname.json';\nimport firstnames from './components/autosuggest/firstname.json';\nimport patronymics from './components/autosuggest/lastname.json';\nimport './AssessmentPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AssessmentPage() {\n  _s();\n  /*** Фамилия ***/\n  const [surnameValue, setSurnameValue] = useState('');\n  const [surnameSuggestions, setSurnameSuggestions] = useState([]);\n  const surnameList = surnames.map(item => item.male || item.female);\n  const getSurnameSuggestions = value => {\n    const trimmed = value.trim().toLowerCase();\n    if (trimmed.length < 2) return [];\n    return surnameList.filter(s => s.toLowerCase().includes(trimmed));\n  };\n  const [offsetY, setOffsetY] = useState(0);\n  const onSurnameChange = (event, {\n    newValue\n  }) => {\n    setSurnameValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase());\n  };\n  const onSurnameSuggestionsFetchRequested = ({\n    value\n  }) => {\n    setSurnameSuggestions(getSurnameSuggestions(value));\n  };\n  const onSurnameSuggestionsClearRequested = () => {\n    setSurnameSuggestions([]);\n  };\n  const surnameInputProps = {\n    placeholder: 'Введите фамилию',\n    value: surnameValue,\n    onChange: onSurnameChange,\n    onFocus: () => setSurnameSuggestions([]),\n    required: true,\n    autoComplete: 'off'\n  };\n\n  /*** Имя ***/\n  const [firstNameValue, setFirstNameValue] = useState('');\n  const [firstNameSuggestions, setFirstNameSuggestions] = useState([]);\n  const firstNameList = firstnames.map(item => typeof item === 'string' ? item : item.firstName || item.name);\n  const getFirstNameSuggestions = value => {\n    const trimmed = value.trim().toLowerCase();\n    if (trimmed.length < 2) return [];\n    return firstNameList.filter(s => s.toLowerCase().includes(trimmed));\n  };\n  const onFirstNameChange = (event, {\n    newValue\n  }) => {\n    setFirstNameValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase());\n  };\n  const onFirstNameSuggestionsFetchRequested = ({\n    value\n  }) => {\n    setFirstNameSuggestions(getFirstNameSuggestions(value));\n  };\n  const onFirstNameSuggestionsClearRequested = () => {\n    setFirstNameSuggestions([]);\n  };\n  const firstNameInputProps = {\n    placeholder: 'Введите имя',\n    value: firstNameValue,\n    onChange: onFirstNameChange,\n    onFocus: () => setFirstNameSuggestions([]),\n    required: true,\n    autoComplete: 'off'\n  };\n\n  /*** Отчество ***/\n  const [patronymicValue, setPatronymicValue] = useState('');\n  const [patronymicSuggestions, setPatronymicSuggestions] = useState([]);\n  const patronymicList = patronymics.map(item => typeof item === 'string' ? item : item.patronymic || item.name);\n  const getPatronymicSuggestions = value => {\n    const trimmed = value.trim().toLowerCase();\n    if (trimmed.length < 2) return [];\n    return patronymicList.filter(s => s.toLowerCase().includes(trimmed));\n  };\n  const onPatronymicChange = (event, {\n    newValue\n  }) => {\n    setPatronymicValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase());\n  };\n  const onPatronymicSuggestionsFetchRequested = ({\n    value\n  }) => {\n    setPatronymicSuggestions(getPatronymicSuggestions(value));\n  };\n  const onPatronymicSuggestionsClearRequested = () => {\n    setPatronymicSuggestions([]);\n  };\n  const patronymicInputProps = {\n    placeholder: 'Введите отчество',\n    value: patronymicValue,\n    onChange: onPatronymicChange,\n    onFocus: () => setPatronymicSuggestions([]),\n    required: true,\n    autoComplete: 'off'\n  };\n\n  /*** Опрос ***/\n  const [isStarted, setIsStarted] = useState(false);\n  const [isFinishClicked, setIsFinishClicked] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [isFinished, setIsFinished] = useState(false);\n  const [shuffledAnswers, setShuffledAnswers] = useState([]);\n  const [formError, setFormError] = useState('');\n\n  // Массив вопросов\n  const questions = [{\n    question: 'Какой формат работы вам ближе?',\n    answers: ['Когда можно детально разобраться в процессах и построить устойчивую систему', 'Когда задачи достаточно разнообразны и требуют гибкого подхода', 'Когда есть чёткий алгоритм действий и понятный конечный результат']\n  }\n  // ... (добавьте остальные вопросы)\n  ];\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    if (isStarted && questions.length > 0) {\n      shuffleAnswers();\n    }\n  }, [currentQuestion, isStarted]);\n  const shuffleAnswers = () => {\n    if (questions.length > 0 && currentQuestion < questions.length) {\n      const shuffled = [...questions[currentQuestion].answers].sort(() => Math.random() - 0.5);\n      setShuffledAnswers(shuffled);\n    }\n  };\n  const handleScroll = () => {\n    setOffsetY(window.pageYOffset); // Обновляем значение offsetY при прокрутке\n  };\n  const handleStart = () => {\n    if (!surnameValue || !firstNameValue || !patronymicValue) {\n      setFormError('Пожалуйста, заполните все поля');\n      return;\n    }\n    setFormError(''); // Очищаем ошибку, если все поля заполнены\n    setIsStarted(true);\n    console.log('Опрос начат!', isStarted); // Отладка\n  };\n  const handleNext = () => {\n    if (!selectedAnswer) {\n      setErrorMessage('Выберите 1 из 3 вариантов');\n      setTimeout(() => setErrorMessage(''), 1000);\n      return;\n    }\n    setUserAnswers(prev => [...prev, selectedAnswer]);\n    setSelectedAnswer('');\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(prev => prev + 1); // Переход к следующему вопросу\n      shuffleAnswers(); // Перемешиваем ответы для нового вопроса\n    } else {\n      setIsFinished(true); // Завершаем опрос, если это последний вопрос\n    }\n  };\n  const handleFinish = async () => {\n    if (isFinishClicked) return; // Игнорировать повторные нажатия\n\n    setIsFinishClicked(true); // Устанавливаем флаг завершения\n    setIsFinished(true); // Сразу показываем страницу благодарности\n\n    const data = {\n      fullName: `${surnameValue} ${firstNameValue} ${patronymicValue}`,\n      dateTime: new Date().toISOString(),\n      answers: userAnswers\n    };\n    try {\n      const response = await fetch(\"https://rgszh-miniapp.org/api/proxy/assessment/save\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer token\"\n        },\n        body: JSON.stringify(data),\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        alert(\"Ошибка при сохранении данных\");\n      }\n    } catch (error) {\n      console.error(\"Ошибка при отправке данных:\", error);\n      alert(\"Ошибка соединения с сервером\");\n    }\n  };\n  if (isFinished) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thank-you-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        style: {\n          backgroundImage: `url(${logo})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\u0411\\u043B\\u0430\\u0433\\u043E\\u0434\\u0430\\u0440\\u0438\\u043C \\u0437\\u0430 \\u043F\\u0440\\u043E\\u0445\\u043E\\u0436\\u0434\\u0435\\u043D\\u0438\\u0435 \\u043E\\u043F\\u0440\\u043E\\u0441\\u0430, \", firstNameValue, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0415\\u0441\\u043B\\u0438 \\u0412\\u0430\\u0448\\u0438 \\u0432\\u0437\\u0433\\u043B\\u044F\\u0434\\u044B \\u0441\\u043E\\u043E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0443\\u044E\\u0442 \\u0432\\u0437\\u0433\\u043B\\u044F\\u0434\\u0430\\u043C \\u043A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u0438 - \\u043C\\u044B \\u043E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E \\u0441\\u0432\\u044F\\u0436\\u0435\\u043C\\u0441\\u044F!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this);\n  }\n  if (isStarted && questions.length > 0 && currentQuestion < questions.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        backgroundImage: `url(${backgroundImage})`,\n        backgroundPositionY: `${offsetY * 0.5}px`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        style: {\n          backgroundImage: `url(${logo})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: questions[currentQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answers-container\",\n        children: shuffledAnswers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `answer-btn ${selectedAnswer === answer ? 'selected' : ''}`,\n          onClick: () => setSelectedAnswer(answer),\n          children: answer\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn next-btn\",\n        onClick: currentQuestion < questions.length - 1 ? handleNext : handleFinish,\n        disabled: !selectedAnswer,\n        children: currentQuestion < questions.length - 1 ? 'Далее' : 'Завершить опрос'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      backgroundImage: `url(${backgroundImage})`,\n      backgroundPositionY: `${offsetY * 0.5}px`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      style: {\n        backgroundImage: `url(${logo})`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448\\u0438 \\u0424\\u0418\\u041E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"name-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Autosuggest, {\n          suggestions: surnameSuggestions,\n          onSuggestionsFetchRequested: onSurnameSuggestionsFetchRequested,\n          onSuggestionsClearRequested: onSurnameSuggestionsClearRequested,\n          getSuggestionValue: suggestion => suggestion,\n          renderSuggestion: suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: suggestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 47\n          }, this),\n          inputProps: surnameInputProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u0418\\u043C\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Autosuggest, {\n          suggestions: firstNameSuggestions,\n          onSuggestionsFetchRequested: onFirstNameSuggestionsFetchRequested,\n          onSuggestionsClearRequested: onFirstNameSuggestionsClearRequested,\n          getSuggestionValue: suggestion => suggestion,\n          renderSuggestion: suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: suggestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 47\n          }, this),\n          inputProps: firstNameInputProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u041E\\u0442\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Autosuggest, {\n          suggestions: patronymicSuggestions,\n          onSuggestionsFetchRequested: onPatronymicSuggestionsFetchRequested,\n          onSuggestionsClearRequested: onPatronymicSuggestionsClearRequested,\n          getSuggestionValue: suggestion => suggestion,\n          renderSuggestion: suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: suggestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 47\n          }, this),\n          inputProps: patronymicInputProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), formError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: formError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `btn ${!surnameValue || !firstNameValue || !patronymicValue ? 'disabled-btn' : 'red-btn'}`,\n        onClick: handleStart,\n        disabled: !surnameValue || !firstNameValue || !patronymicValue,\n        children: \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u043E\\u043F\\u0440\\u043E\\u0441\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n}\n_s(AssessmentPage, \"1zJK1c/zqVwGm8AxMWprZU4q8sk=\");\n_c = AssessmentPage;\nexport default AssessmentPage;\nvar _c;\n$RefreshReg$(_c, \"AssessmentPage\");","map":{"version":3,"names":["React","useState","useEffect","Autosuggest","backgroundImage","logo","surnames","firstnames","patronymics","jsxDEV","_jsxDEV","AssessmentPage","_s","surnameValue","setSurnameValue","surnameSuggestions","setSurnameSuggestions","surnameList","map","item","male","female","getSurnameSuggestions","value","trimmed","trim","toLowerCase","length","filter","s","includes","offsetY","setOffsetY","onSurnameChange","event","newValue","charAt","toUpperCase","slice","onSurnameSuggestionsFetchRequested","onSurnameSuggestionsClearRequested","surnameInputProps","placeholder","onChange","onFocus","required","autoComplete","firstNameValue","setFirstNameValue","firstNameSuggestions","setFirstNameSuggestions","firstNameList","firstName","name","getFirstNameSuggestions","onFirstNameChange","onFirstNameSuggestionsFetchRequested","onFirstNameSuggestionsClearRequested","firstNameInputProps","patronymicValue","setPatronymicValue","patronymicSuggestions","setPatronymicSuggestions","patronymicList","patronymic","getPatronymicSuggestions","onPatronymicChange","onPatronymicSuggestionsFetchRequested","onPatronymicSuggestionsClearRequested","patronymicInputProps","isStarted","setIsStarted","isFinishClicked","setIsFinishClicked","errorMessage","setErrorMessage","currentQuestion","setCurrentQuestion","selectedAnswer","setSelectedAnswer","userAnswers","setUserAnswers","isFinished","setIsFinished","shuffledAnswers","setShuffledAnswers","formError","setFormError","questions","question","answers","window","addEventListener","handleScroll","shuffleAnswers","shuffled","sort","Math","random","pageYOffset","handleStart","console","log","handleNext","setTimeout","prev","handleFinish","data","fullName","dateTime","Date","toISOString","response","fetch","method","headers","body","JSON","stringify","credentials","ok","alert","error","className","children","style","fileName","_jsxFileName","lineNumber","columnNumber","backgroundPositionY","answer","index","onClick","disabled","suggestions","onSuggestionsFetchRequested","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","inputProps","type","_c","$RefreshReg$"],"sources":["C:/Users/shapeless/Desktop/miniapp/src/AssessmentPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport backgroundImage from './components/background.png';\r\nimport logo from './components/logo.png';\r\nimport surnames from './components/autosuggest/surname.json';\r\nimport firstnames from './components/autosuggest/firstname.json';\r\nimport patronymics from './components/autosuggest/lastname.json';\r\nimport './AssessmentPage.css';\r\n\r\nfunction AssessmentPage() {\r\n  /*** Фамилия ***/\r\n  const [surnameValue, setSurnameValue] = useState('');\r\n  const [surnameSuggestions, setSurnameSuggestions] = useState([]);\r\n  const surnameList = surnames.map(item => item.male || item.female);\r\n\r\n  const getSurnameSuggestions = (value) => {\r\n    const trimmed = value.trim().toLowerCase();\r\n    if (trimmed.length < 2) return [];\r\n    return surnameList.filter(s => s.toLowerCase().includes(trimmed));\r\n  };\r\n\r\n  const [offsetY, setOffsetY] = useState(0);\r\n\r\n  const onSurnameChange = (event, { newValue }) => {\r\n    setSurnameValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase());\r\n  };\r\n\r\n  const onSurnameSuggestionsFetchRequested = ({ value }) => {\r\n    setSurnameSuggestions(getSurnameSuggestions(value));\r\n  };\r\n\r\n  const onSurnameSuggestionsClearRequested = () => {\r\n    setSurnameSuggestions([]);\r\n  };\r\n\r\n  const surnameInputProps = {\r\n    placeholder: 'Введите фамилию',\r\n    value: surnameValue,\r\n    onChange: onSurnameChange,\r\n    onFocus: () => setSurnameSuggestions([]),\r\n    required: true,\r\n    autoComplete: 'off'\r\n  };\r\n\r\n  /*** Имя ***/\r\n  const [firstNameValue, setFirstNameValue] = useState('');\r\n  const [firstNameSuggestions, setFirstNameSuggestions] = useState([]);\r\n  const firstNameList = firstnames.map(item => typeof item === 'string' ? item : (item.firstName || item.name));\r\n\r\n  const getFirstNameSuggestions = (value) => {\r\n    const trimmed = value.trim().toLowerCase();\r\n    if (trimmed.length < 2) return [];\r\n    return firstNameList.filter(s => s.toLowerCase().includes(trimmed));\r\n  };\r\n\r\n  const onFirstNameChange = (event, { newValue }) => {\r\n    setFirstNameValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase());\r\n  };\r\n\r\n  const onFirstNameSuggestionsFetchRequested = ({ value }) => {\r\n    setFirstNameSuggestions(getFirstNameSuggestions(value));\r\n  };\r\n\r\n  const onFirstNameSuggestionsClearRequested = () => {\r\n    setFirstNameSuggestions([]);\r\n  };\r\n\r\n  const firstNameInputProps = {\r\n    placeholder: 'Введите имя',\r\n    value: firstNameValue,\r\n    onChange: onFirstNameChange,\r\n    onFocus: () => setFirstNameSuggestions([]),\r\n    required: true,\r\n    autoComplete: 'off'\r\n  };\r\n\r\n  /*** Отчество ***/\r\n  const [patronymicValue, setPatronymicValue] = useState('');\r\n  const [patronymicSuggestions, setPatronymicSuggestions] = useState([]);\r\n  const patronymicList = patronymics.map(item => typeof item === 'string' ? item : (item.patronymic || item.name));\r\n\r\n  const getPatronymicSuggestions = (value) => {\r\n    const trimmed = value.trim().toLowerCase();\r\n    if (trimmed.length < 2) return [];\r\n    return patronymicList.filter(s => s.toLowerCase().includes(trimmed));\r\n  };\r\n\r\n  const onPatronymicChange = (event, { newValue }) => {\r\n    setPatronymicValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase());\r\n  };\r\n\r\n  const onPatronymicSuggestionsFetchRequested = ({ value }) => {\r\n    setPatronymicSuggestions(getPatronymicSuggestions(value));\r\n  };\r\n\r\n  const onPatronymicSuggestionsClearRequested = () => {\r\n    setPatronymicSuggestions([]);\r\n  };\r\n\r\n  const patronymicInputProps = {\r\n    placeholder: 'Введите отчество',\r\n    value: patronymicValue,\r\n    onChange: onPatronymicChange,\r\n    onFocus: () => setPatronymicSuggestions([]),\r\n    required: true,\r\n    autoComplete: 'off'\r\n  };\r\n\r\n  /*** Опрос ***/\r\n  const [isStarted, setIsStarted] = useState(false);\r\n  const [isFinishClicked, setIsFinishClicked] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState('');\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n  const [isFinished, setIsFinished] = useState(false);\r\n  const [shuffledAnswers, setShuffledAnswers] = useState([]);\r\n  const [formError, setFormError] = useState('');\r\n\r\n  // Массив вопросов\r\n  const questions = [\r\n    {\r\n      question: 'Какой формат работы вам ближе?',\r\n      answers: [\r\n        'Когда можно детально разобраться в процессах и построить устойчивую систему',\r\n        'Когда задачи достаточно разнообразны и требуют гибкого подхода',\r\n        'Когда есть чёткий алгоритм действий и понятный конечный результат'\r\n      ],\r\n    },\r\n    // ... (добавьте остальные вопросы)\r\n  ];\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n    if (isStarted && questions.length > 0) {\r\n      shuffleAnswers();\r\n    }\r\n  }, [currentQuestion, isStarted]);\r\n\r\n  const shuffleAnswers = () => {\r\n    if (questions.length > 0 && currentQuestion < questions.length) {\r\n      const shuffled = [...questions[currentQuestion].answers].sort(() => Math.random() - 0.5);\r\n      setShuffledAnswers(shuffled);\r\n    }\r\n  };\r\n\r\n  const handleScroll = () => {\r\n    setOffsetY(window.pageYOffset);  // Обновляем значение offsetY при прокрутке\r\n  };\r\n\r\n  const handleStart = () => {\r\n    if (!surnameValue || !firstNameValue || !patronymicValue) {\r\n      setFormError('Пожалуйста, заполните все поля');\r\n      return;\r\n    }\r\n    setFormError(''); // Очищаем ошибку, если все поля заполнены\r\n    setIsStarted(true);\r\n    console.log('Опрос начат!', isStarted); // Отладка\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (!selectedAnswer) {\r\n      setErrorMessage('Выберите 1 из 3 вариантов');\r\n      setTimeout(() => setErrorMessage(''), 1000);\r\n      return;\r\n    }\r\n\r\n    setUserAnswers(prev => [...prev, selectedAnswer]);\r\n    setSelectedAnswer('');\r\n\r\n    if (currentQuestion < questions.length - 1) {\r\n      setCurrentQuestion(prev => prev + 1); // Переход к следующему вопросу\r\n      shuffleAnswers(); // Перемешиваем ответы для нового вопроса\r\n    } else {\r\n      setIsFinished(true);  // Завершаем опрос, если это последний вопрос\r\n    }\r\n  };\r\n\r\n  const handleFinish = async () => {\r\n    if (isFinishClicked) return; // Игнорировать повторные нажатия\r\n\r\n    setIsFinishClicked(true); // Устанавливаем флаг завершения\r\n    setIsFinished(true);      // Сразу показываем страницу благодарности\r\n\r\n    const data = {\r\n      fullName: `${surnameValue} ${firstNameValue} ${patronymicValue}`,\r\n      dateTime: new Date().toISOString(),\r\n      answers: userAnswers,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\"https://rgszh-miniapp.org/api/proxy/assessment/save\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": \"Bearer token\",\r\n        },\r\n        body: JSON.stringify(data),\r\n        credentials: 'include',\r\n      });\r\n\r\n      if (!response.ok) {\r\n        alert(\"Ошибка при сохранении данных\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Ошибка при отправке данных:\", error);\r\n      alert(\"Ошибка соединения с сервером\");\r\n    }\r\n  };\r\n\r\n  if (isFinished) {\r\n    return (\r\n      <div className=\"thank-you-message\">\r\n        <div className=\"logo\" style={{ backgroundImage: `url(${logo})` }} />\r\n        <h2>Благодарим за прохождение опроса, {firstNameValue}!</h2>\r\n        <p>Если Ваши взгляды соответствуют взглядам компании - мы обязательно свяжемся!</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isStarted && questions.length > 0 && currentQuestion < questions.length) {\r\n    return (\r\n      <div className=\"container\" style={{ backgroundImage: `url(${backgroundImage})`, backgroundPositionY: `${offsetY * 0.5}px` }}>\r\n        <div className=\"logo\" style={{ backgroundImage: `url(${logo})` }} /> {/* Логотип */}\r\n        <h2>{questions[currentQuestion].question}</h2>\r\n        <div className=\"answers-container\">\r\n          {shuffledAnswers.map((answer, index) => (\r\n            <button\r\n              key={index}\r\n              className={`answer-btn ${selectedAnswer === answer ? 'selected' : ''}`}\r\n              onClick={() => setSelectedAnswer(answer)}\r\n            >\r\n              {answer}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n        <button\r\n          className=\"btn next-btn\"\r\n          onClick={currentQuestion < questions.length - 1 ? handleNext : handleFinish}\r\n          disabled={!selectedAnswer}\r\n        >\r\n          {currentQuestion < questions.length - 1 ? 'Далее' : 'Завершить опрос'}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\" style={{ backgroundImage: `url(${backgroundImage})`, backgroundPositionY: `${offsetY * 0.5}px` }}>\r\n      <div className=\"logo\" style={{ backgroundImage: `url(${logo})` }} />\r\n      <h2>Введите ваши ФИО</h2>\r\n      <form className=\"name-form\">\r\n        <div className=\"input-container\">\r\n          <label>Фамилия</label>\r\n          <Autosuggest\r\n            suggestions={surnameSuggestions}\r\n            onSuggestionsFetchRequested={onSurnameSuggestionsFetchRequested}\r\n            onSuggestionsClearRequested={onSurnameSuggestionsClearRequested}\r\n            getSuggestionValue={(suggestion) => suggestion}\r\n            renderSuggestion={(suggestion) => <div>{suggestion}</div>}\r\n            inputProps={surnameInputProps}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-container\">\r\n          <label>Имя</label>\r\n          <Autosuggest\r\n            suggestions={firstNameSuggestions}\r\n            onSuggestionsFetchRequested={onFirstNameSuggestionsFetchRequested}\r\n            onSuggestionsClearRequested={onFirstNameSuggestionsClearRequested}\r\n            getSuggestionValue={(suggestion) => suggestion}\r\n            renderSuggestion={(suggestion) => <div>{suggestion}</div>}\r\n            inputProps={firstNameInputProps}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-container\">\r\n          <label>Отчество</label>\r\n          <Autosuggest\r\n            suggestions={patronymicSuggestions}\r\n            onSuggestionsFetchRequested={onPatronymicSuggestionsFetchRequested}\r\n            onSuggestionsClearRequested={onPatronymicSuggestionsClearRequested}\r\n            getSuggestionValue={(suggestion) => suggestion}\r\n            renderSuggestion={(suggestion) => <div>{suggestion}</div>}\r\n            inputProps={patronymicInputProps}\r\n          />\r\n        </div>\r\n\r\n        {formError && <p className=\"error-message\">{formError}</p>}\r\n\r\n        <button\r\n          type=\"button\"\r\n          className={`btn ${!surnameValue || !firstNameValue || !patronymicValue ? 'disabled-btn' : 'red-btn'}`}\r\n          onClick={handleStart}\r\n          disabled={!surnameValue || !firstNameValue || !patronymicValue}\r\n        >\r\n          Начать опрос\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AssessmentPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}