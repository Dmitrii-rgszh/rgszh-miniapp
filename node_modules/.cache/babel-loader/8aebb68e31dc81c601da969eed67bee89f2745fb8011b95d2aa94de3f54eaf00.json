{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import'./QuestionsPage.css';// Пример массива вопросов (без явной нумерации в строках)\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const questions=[\"Как вы оцениваете качество обучения?\",\"Насколько понятны инструкции?\",\"Довольны ли вы материалами?\"// … добавьте вопросы до 25\n];const QuestionsPage=()=>{const[currentQuestion,setCurrentQuestion]=useState(0);const navigate=useNavigate();const totalQuestions=25;// Общее число вопросов\nconst handleNextQuestion=()=>{if(currentQuestion<totalQuestions-1){setCurrentQuestion(currentQuestion+1);}else{// Если все вопросы пройдены, переходим на страницу благодарности\nnavigate('/thankyou');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"questions-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-indicator\",children:`${currentQuestion+1} / ${totalQuestions}`}),/*#__PURE__*/_jsx(\"div\",{className:\"question\",children:/*#__PURE__*/_jsx(\"p\",{children:questions[currentQuestion]||\"Вопрос отсутствует\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:handleNextQuestion,className:\"next-btn\",children:\"\\u0414\\u0430\\u043B\\u0435\\u0435\"})]});};export default QuestionsPage;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","questions","QuestionsPage","currentQuestion","setCurrentQuestion","navigate","totalQuestions","handleNextQuestion","className","children","onClick"],"sources":["C:/Users/shapeless/Desktop/miniapp/src/QuestionsPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './QuestionsPage.css';\r\n\r\n// Пример массива вопросов (без явной нумерации в строках)\r\nconst questions = [\r\n  \"Как вы оцениваете качество обучения?\",\r\n  \"Насколько понятны инструкции?\",\r\n  \"Довольны ли вы материалами?\",\r\n  // … добавьте вопросы до 25\r\n];\r\n\r\nconst QuestionsPage = () => {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const navigate = useNavigate();\r\n  const totalQuestions = 25; // Общее число вопросов\r\n\r\n  const handleNextQuestion = () => {\r\n    if (currentQuestion < totalQuestions - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n    } else {\r\n      // Если все вопросы пройдены, переходим на страницу благодарности\r\n      navigate('/thankyou');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"questions-container\">\r\n      <div className=\"progress-indicator\">\r\n        {`${currentQuestion + 1} / ${totalQuestions}`}\r\n      </div>\r\n      <div className=\"question\">\r\n        <p>{questions[currentQuestion] || \"Вопрос отсутствует\"}</p>\r\n      </div>\r\n      <button onClick={handleNextQuestion} className=\"next-btn\">\r\n        Далее\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionsPage;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,qBAAqB,CAE5B;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,SAAS,CAAG,CAChB,sCAAsC,CACtC,+BAA+B,CAC/B,6BACA;AAAA,CACD,CAED,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,eAAe,CAAEC,kBAAkB,CAAC,CAAGT,QAAQ,CAAC,CAAC,CAAC,CACzD,KAAM,CAAAU,QAAQ,CAAGT,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAU,cAAc,CAAG,EAAE,CAAE;AAE3B,KAAM,CAAAC,kBAAkB,CAAGA,CAAA,GAAM,CAC/B,GAAIJ,eAAe,CAAGG,cAAc,CAAG,CAAC,CAAE,CACxCF,kBAAkB,CAACD,eAAe,CAAG,CAAC,CAAC,CACzC,CAAC,IAAM,CACL;AACAE,QAAQ,CAAC,WAAW,CAAC,CACvB,CACF,CAAC,CAED,mBACEL,KAAA,QAAKQ,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClCX,IAAA,QAAKU,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CAChC,GAAGN,eAAe,CAAG,CAAC,MAAMG,cAAc,EAAE,CAC1C,CAAC,cACNR,IAAA,QAAKU,SAAS,CAAC,UAAU,CAAAC,QAAA,cACvBX,IAAA,MAAAW,QAAA,CAAIR,SAAS,CAACE,eAAe,CAAC,EAAI,oBAAoB,CAAI,CAAC,CACxD,CAAC,cACNL,IAAA,WAAQY,OAAO,CAAEH,kBAAmB,CAACC,SAAS,CAAC,UAAU,CAAAC,QAAA,CAAC,gCAE1D,CAAQ,CAAC,EACN,CAAC,CAEV,CAAC,CAED,cAAe,CAAAP,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}