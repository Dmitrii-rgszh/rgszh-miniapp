{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import{useNavigate}from'react-router-dom';import{useSwipeable}from'react-swipeable';import'./Styles/global.css';// Montserrat + базовые сбросы\nimport'./Styles/background.css';// фон-градиент, шум, subtle-dot, pi-иконка\nimport'./Styles/logo.css';// Анимации логотипа (оставляем без изменений)\nimport'./WelcomePage.css';// Позиционирование и анимации текста\nimport backgroundImage from'./components/background.png';import logoImage from'./components/logo.png';import piImage from'./components/pi.png';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const WelcomePage=()=>{const navigate=useNavigate();// Рефы на логотип и текст, чтобы переключать CSS-классы\nconst logoRef=useRef(null);const textRef=useRef(null);// Флаг, чтобы запустить exit-анимацию текста\nconst[textExiting,setTextExiting]=useState(false);// Состояние для приветственного текста\nconst[greeting,setGreeting]=useState('');useEffect(()=>{// 1) Определяем приветствие по времени суток\nconst hour=new Date().getHours();let text='';if(hour>=6&&hour<11)text='Доброе утро';else if(hour>=11&&hour<17)text='Добрый день';else if(hour>=17&&hour<24)text='Добрый вечер';else text='Доброй ночи';setGreeting(text);// 2) Запускаем entry-анимацию логотипа (через CSS-класс из logo.css)\nif(logoRef.current){logoRef.current.classList.add('animate-logo');}// 3) Через небольшую задержку (например, 100ms) запускаем entry-анимацию текста\n//    чтобы логотип успел «въехать» немного раньше\nconst textEntryTimer=setTimeout(()=>{if(textRef.current){textRef.current.classList.add('animate-text');}},100);// 4) Через 2 секунды запускаем exit-анимацию:\n//    • для логотипа: переключаем CSS-класс на animate-logo-exit\n//    • для текста: переключаем CSS-класс на animate-text-exit\nconst exitTimer=setTimeout(()=>{if(logoRef.current){logoRef.current.classList.remove('animate-logo');logoRef.current.classList.add('animate-logo-exit');}if(textRef.current){textRef.current.classList.remove('animate-text');textRef.current.classList.add('animate-text-exit');}setTextExiting(true);},2000);// 5) Через 2.8 секунды переходим на /main-menu,\n//    даём 0.8 секунды, чтобы exit-анимация текста (и логотипа) завершилась\nconst navTimer=setTimeout(()=>{navigate('/main-menu');},2800);return()=>{clearTimeout(textEntryTimer);clearTimeout(exitTimer);clearTimeout(navTimer);};},[navigate]);// Свайп-обработчик (если нужен)\nconst swipeHandlers=useSwipeable({preventDefault:true});return/*#__PURE__*/_jsxs(\"div\",{className:\"welcome-container\",style:{backgroundImage:`url(${backgroundImage})`},...swipeHandlers,children:[/*#__PURE__*/_jsx(\"div\",{className:\"subtle-dot dot-1\"}),/*#__PURE__*/_jsx(\"div\",{className:\"subtle-dot dot-2\"}),/*#__PURE__*/_jsx(\"div\",{className:\"subtle-dot dot-3\"}),/*#__PURE__*/_jsx(\"div\",{className:\"subtle-dot dot-4\"}),/*#__PURE__*/_jsx(\"div\",{className:\"subtle-dot dot-5\"}),/*#__PURE__*/_jsx(\"div\",{className:\"subtle-dot dot-6\"}),/*#__PURE__*/_jsx(\"div\",{className:\"subtle-dot dot-7\"}),/*#__PURE__*/_jsx(\"div\",{className:\"subtle-dot dot-8\"}),/*#__PURE__*/_jsx(\"div\",{className:\"subtle-dot dot-9\"}),/*#__PURE__*/_jsx(\"div\",{className:\"subtle-dot dot-10\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mainmenu-overlay\"}),/*#__PURE__*/_jsx(\"div\",{ref:logoRef,className:\"logo-wrapper\",children:/*#__PURE__*/_jsx(\"img\",{src:logoImage,alt:\"\\u041B\\u043E\\u0433\\u043E\\u0442\\u0438\\u043F \\u0420\\u0413\\u0421 \\u0416\\u0438\\u0437\\u043D\\u044C\",className:\"logo-image\"})}),/*#__PURE__*/_jsx(\"div\",{ref:textRef,className:\"text-wrapper\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"welcome-title\",children:greeting})})]});};export default WelcomePage;","map":{"version":3,"names":["React","useEffect","useRef","useState","useNavigate","useSwipeable","backgroundImage","logoImage","piImage","jsx","_jsx","jsxs","_jsxs","WelcomePage","navigate","logoRef","textRef","textExiting","setTextExiting","greeting","setGreeting","hour","Date","getHours","text","current","classList","add","textEntryTimer","setTimeout","exitTimer","remove","navTimer","clearTimeout","swipeHandlers","preventDefault","className","style","children","ref","src","alt"],"sources":["C:/Users/shapeless/Desktop/miniapp/src/WelcomePage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useNavigate }               from 'react-router-dom';\r\nimport { useSwipeable }              from 'react-swipeable';\r\n\r\nimport './Styles/global.css';      // Montserrat + базовые сбросы\r\nimport './Styles/background.css';  // фон-градиент, шум, subtle-dot, pi-иконка\r\nimport './Styles/logo.css';        // Анимации логотипа (оставляем без изменений)\r\nimport './WelcomePage.css';        // Позиционирование и анимации текста\r\n\r\nimport backgroundImage from './components/background.png';\r\nimport logoImage       from './components/logo.png';\r\nimport piImage         from './components/pi.png';\r\n\r\nconst WelcomePage = () => {\r\n  const navigate = useNavigate();\r\n\r\n  // Рефы на логотип и текст, чтобы переключать CSS-классы\r\n  const logoRef = useRef(null);\r\n  const textRef = useRef(null);\r\n\r\n  // Флаг, чтобы запустить exit-анимацию текста\r\n  const [textExiting, setTextExiting] = useState(false);\r\n\r\n  // Состояние для приветственного текста\r\n  const [greeting, setGreeting] = useState('');\r\n\r\n  useEffect(() => {\r\n    // 1) Определяем приветствие по времени суток\r\n    const hour = new Date().getHours();\r\n    let text = '';\r\n    if (hour >= 6 && hour < 11)       text = 'Доброе утро';\r\n    else if (hour >= 11 && hour < 17) text = 'Добрый день';\r\n    else if (hour >= 17 && hour < 24) text = 'Добрый вечер';\r\n    else                              text = 'Доброй ночи';\r\n    setGreeting(text);\r\n\r\n    // 2) Запускаем entry-анимацию логотипа (через CSS-класс из logo.css)\r\n    if (logoRef.current) {\r\n      logoRef.current.classList.add('animate-logo');\r\n    }\r\n\r\n    // 3) Через небольшую задержку (например, 100ms) запускаем entry-анимацию текста\r\n    //    чтобы логотип успел «въехать» немного раньше\r\n    const textEntryTimer = setTimeout(() => {\r\n      if (textRef.current) {\r\n        textRef.current.classList.add('animate-text');\r\n      }\r\n    }, 100);\r\n\r\n    // 4) Через 2 секунды запускаем exit-анимацию:\r\n    //    • для логотипа: переключаем CSS-класс на animate-logo-exit\r\n    //    • для текста: переключаем CSS-класс на animate-text-exit\r\n    const exitTimer = setTimeout(() => {\r\n      if (logoRef.current) {\r\n        logoRef.current.classList.remove('animate-logo');\r\n        logoRef.current.classList.add('animate-logo-exit');\r\n      }\r\n      if (textRef.current) {\r\n        textRef.current.classList.remove('animate-text');\r\n        textRef.current.classList.add('animate-text-exit');\r\n      }\r\n      setTextExiting(true);\r\n    }, 2000);\r\n\r\n    // 5) Через 2.8 секунды переходим на /main-menu,\r\n    //    даём 0.8 секунды, чтобы exit-анимация текста (и логотипа) завершилась\r\n    const navTimer = setTimeout(() => {\r\n      navigate('/main-menu');\r\n    }, 2800);\r\n\r\n    return () => {\r\n      clearTimeout(textEntryTimer);\r\n      clearTimeout(exitTimer);\r\n      clearTimeout(navTimer);\r\n    };\r\n  }, [navigate]);\r\n\r\n  // Свайп-обработчик (если нужен)\r\n  const swipeHandlers = useSwipeable({ preventDefault: true });\r\n\r\n  return (\r\n    <div\r\n      className=\"welcome-container\"\r\n      style={{ backgroundImage: `url(${backgroundImage})` }}\r\n      {...swipeHandlers}\r\n    >\r\n      {/* 10 «subtle-dot» шариков (из background.css) */}\r\n      <div className=\"subtle-dot dot-1\"  />\r\n      <div className=\"subtle-dot dot-2\"  />\r\n      <div className=\"subtle-dot dot-3\"  />\r\n      <div className=\"subtle-dot dot-4\"  />\r\n      <div className=\"subtle-dot dot-5\"  />\r\n      <div className=\"subtle-dot dot-6\"  />\r\n      <div className=\"subtle-dot dot-7\"  />\r\n      <div className=\"subtle-dot dot-8\"  />\r\n      <div className=\"subtle-dot dot-9\"  />\r\n      <div className=\"subtle-dot dot-10\" />\r\n\r\n      {/* Полупрозрачный оверлей (если нужен) */}\r\n      <div className=\"mainmenu-overlay\" />\r\n\r\n      {/* === ЛОГОТИП (CSS-анимации в logo.css, ничего не меняется) === */}\r\n      <div ref={logoRef} className=\"logo-wrapper\">\r\n        <img\r\n          src={logoImage}\r\n          alt=\"Логотип РГС Жизнь\"\r\n          className=\"logo-image\"\r\n        />\r\n      </div>\r\n\r\n      {/* === ТЕКСТ-ПРИВЕТСТВИЕ (чисто через CSS-анимации) === */}\r\n      <div ref={textRef} className=\"text-wrapper\">\r\n        <h1 className=\"welcome-title\">{greeting}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WelcomePage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}