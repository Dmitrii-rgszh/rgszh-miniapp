{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shapeless\\\\Desktop\\\\miniapp\\\\src\\\\AssessmentPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport backgroundImage from './components/background.png';\nimport logo from './components/logo.png';\nimport surnames from './components/autosuggest/surname.json';\nimport firstnames from './components/autosuggest/firstname.json';\nimport patronymics from './components/autosuggest/lastname.json';\nimport './AssessmentPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AssessmentPage() {\n  _s();\n  // Поля ввода ФИО\n  const [surnameValue, setSurnameValue] = useState('');\n  const [surnameSuggestions, setSurnameSuggestions] = useState([]);\n  const surnameList = surnames.map(item => item.male || item.female);\n  const [firstNameValue, setFirstNameValue] = useState('');\n  const [firstNameSuggestions, setFirstNameSuggestions] = useState([]);\n  const firstNameList = firstnames.map(item => typeof item === 'string' ? item : item.firstName || item.name);\n  const [patronymicValue, setPatronymicValue] = useState('');\n  const [patronymicSuggestions, setPatronymicSuggestions] = useState([]);\n  const patronymicList = patronymics.map(item => typeof item === 'string' ? item : item.patronymic || item.name);\n\n  // Функции для подсказок\n  const getSurnameSuggestions = value => {\n    const trimmed = value.trim().toLowerCase();\n    if (trimmed.length < 2) return [];\n    return surnameList.filter(s => s.toLowerCase().startsWith(trimmed));\n  };\n  const getFirstNameSuggestions = value => {\n    const trimmed = value.trim().toLowerCase();\n    if (trimmed.length < 2) return [];\n    return firstNameList.filter(s => s.toLowerCase().startsWith(trimmed));\n  };\n  const getPatronymicSuggestions = value => {\n    const trimmed = value.trim().toLowerCase();\n    if (trimmed.length < 2) return [];\n    return patronymicList.filter(s => s.toLowerCase().startsWith(trimmed));\n  };\n\n  // Состояние для фокуса ввода\n  const [isInputFocused, setIsInputFocused] = useState(false);\n\n  // Обновлённые inputProps\n  const surnameInputProps = {\n    placeholder: 'Введите фамилию',\n    value: surnameValue,\n    onChange: (event, {\n      newValue\n    }) => setSurnameValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase()),\n    onFocus: () => {\n      setIsInputFocused(true);\n      setSurnameSuggestions([]);\n    },\n    onBlur: () => setIsInputFocused(false),\n    required: true,\n    autoComplete: 'off'\n  };\n  const firstNameInputProps = {\n    placeholder: 'Введите имя',\n    value: firstNameValue,\n    onChange: (event, {\n      newValue\n    }) => setFirstNameValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase()),\n    onFocus: () => {\n      setIsInputFocused(true);\n      setFirstNameSuggestions([]);\n    },\n    onBlur: () => setIsInputFocused(false),\n    required: true,\n    autoComplete: 'off'\n  };\n  const patronymicInputProps = {\n    placeholder: 'Введите отчество',\n    value: patronymicValue,\n    onChange: (event, {\n      newValue\n    }) => setPatronymicValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase()),\n    onFocus: () => {\n      setIsInputFocused(true);\n      setPatronymicSuggestions([]);\n    },\n    onBlur: () => setIsInputFocused(false),\n    required: true,\n    autoComplete: 'off'\n  };\n\n  /*** Опрос ***/\n  const [isStarted, setIsStarted] = useState(false);\n  const [isFinishClicked, setIsFinishClicked] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [isFinished, setIsFinished] = useState(false);\n  const [shuffledAnswers, setShuffledAnswers] = useState([]);\n  const [formError, setFormError] = useState('');\n  const [offsetY, setOffsetY] = useState(0);\n\n  // Состояние для анимации перехода между вопросами\n  const [fadeTransition, setFadeTransition] = useState(false);\n\n  // Массив вопросов\n  const questions = [{\n    question: 'Какой формат работы вам ближе?',\n    answers: ['Когда можно детально разобраться в процессах и построить устойчивую систему', 'Когда задачи достаточно разнообразны и требуют гибкого подхода', 'Когда есть чёткий алгоритм действий и понятный конечный результат']\n  }, {\n    question: 'Если коллега допустил серьёзную ошибку, что для вас логичнее сделать?',\n    answers: ['Понять, что пошло не так, и вместе найти пути исправления', 'В первую очередь скорректировать свои планы с учётом возникших проблем', 'Сделать выводы для себя и минимизировать влияние на мою работу']\n  }, {\n    question: 'В команде нарастает напряжение, которое влияет на общий процесс. Как вы реагируете?',\n    answers: ['Стараюсь выяснить причину и предложить возможные решения, учитывая интересы всех', 'Наблюдаю за развитием ситуации и при необходимости высказываю своё мнение', 'Предпочитаю не вовлекаться, если это напрямую не затрагивает мою зону ответственности']\n  }, {\n    question: 'Как относитесь к комментариям по вашей работе?',\n    answers: ['Считаю их возможностью для развития, если они аргументированы', 'Выслушиваю, но меняю подход только при реальной необходимости', 'Если работа выполнена по стандартам, дополнительные замечания не критичны']\n  }, {\n    question: 'Клиент или партнер выражает недовольство результатом. Как поступаете?',\n    answers: ['Пытаюсь понять, где возникли расхождения, и найти приемлемое решение', 'Сначала оцениваю обоснованность претензий, при необходимости уточняю детали', 'Если всё сделано согласно договорённостям, считаю, что моя задача выполнена']\n  }, {\n    question: 'Какой рабочий стиль для вас комфортнее?',\n    answers: ['Выстраивать системные процессы, учитывая интересы всех сторон надолго вперёд', 'Следовать намеченному плану, при необходимости поддерживая взаимодействие', 'Сосредотачиваться на своих задачах, минимизируя отвлечения на внешние факторы']\n  }, {\n    question: 'Как вы относитесь к идее поддерживать контакт с бывшими клиентами или коллегами, чтобы в будущем возможно было сотрудничество?',\n    answers: ['Считаю это важным для выстраивания долгосрочных отношений', 'Можно поддерживать связь, если в этом есть очевидная практическая выгода', 'Предпочитаю фокусироваться на текущих проектах, не распыляясь на прошлое']\n  }, {\n    question: 'Если приходится выбирать между краткосрочной выгодой и построением долгосрочных отношений, что окажется важнее?',\n    answers: ['Долгосрочная перспектива, даже если сейчас придётся чем-то пожертвовать', 'Зависит от ситуации — оцениваю риски, возможности и совокупную пользу', 'Скорее выберу краткосрочную выгоду, ведь будущее сложно прогнозировать']\n  }, {\n    question: 'Насколько вы готовы вкладываться в общее развитие и успехи команды?',\n    answers: ['Считаю важным делиться опытом, помогать коллегам и укреплять общий результат', 'Поддерживаю такие инициативы, если они не мешают моей продуктивности', 'Сосредотачиваюсь на своей зоне ответственности, дополнительные усилия — опциональны']\n  }, {\n    question: 'Как относитесь к идее регулярных встреч или мозговых штурмов с коллегами для совершенствования общего процесса?',\n    answers: ['Считаю это ценным инструментом для укрепления взаимопонимания и улучшения результата', 'Участвую, если уверен(а), что это оправданно и не перегружает рабочее время', 'Предпочитаю решать задачи в индивидуальном порядке, без лишних обсуждений']\n  }, {\n    question: 'Как относитесь к повышению квалификации?',\n    answers: ['Постоянно осваиваю новые инструменты и технологии, чтобы быть в курсе трендов', 'Изучаю что-то новое, когда это действительно нужно для выполнения задач', 'Считаю, что уже имеющихся знаний обычно достаточно для базовых процессов']\n  }, {\n    question: 'Как реагируете, когда сталкиваетесь с незнакомой задачей?',\n    answers: ['С радостью вижу шанс изучить новую область и расширить компетенции', 'Изучаю столько, сколько требуется, чтобы качественно решить задачу', 'Предпочитаю применять проверенные методы, если они дают нужный результат']\n  }, {\n    question: 'Как относитесь к обмену знаниями в команде?',\n    answers: ['Считаю, что это взаимовыгодный процесс: чем больше делимся, тем сильнее команда', 'Готов(а) поделиться опытом, если вижу, что это действительно кому-то полезно', 'Каждый занимается своей областью, делиться или нет — решение сугубо личное']\n  }, {\n    question: 'Что делаете, если замечаете, что используемый процесс устарел?',\n    answers: ['Изучаю, как его можно обновить, и вношу конкретные предложения', 'Предлагаю альтернативы, если вижу в этом реальную пользу', 'Если процесс пока работает, значит, радикальные изменения не обязательны']\n  }, {\n    question: 'Насколько важно для вас идти в ногу с новыми трендами в своей сфере?',\n    answers: ['Постоянно ищу и пробую инновационные подходы, слежу за профессиональными сообществами', 'Изучаю новинки по мере необходимости, когда они могут пригодиться в работе', 'Ориентируюсь в основном на проверенные временем технологии']\n  }, {\n    question: 'Как подходите к решению сложных задач?',\n    answers: ['Стараюсь рассмотреть задачу под разными углами и привлекаю экспертов при необходимости', 'Опираюсь на имеющиеся знания, обращаясь за поддержкой только если это действительно нужно', 'Использую знакомые шаблоны, которые уже доказали свою эффективность']\n  }, {\n    question: 'Как относитесь к критическому анализу своих профессиональных методов?',\n    answers: ['Считаю, что это естественный путь к росту экспертизы и поиску новых решений', 'Прислушиваюсь, если замечания выглядят обоснованными и практичными', 'Если метод работает, то лишний анализ может только замедлить процесс']\n  }, {\n    question: 'Какой тип задач для вас наиболее интересен?',\n    answers: ['Когда можно глубоко вникнуть и довести методику до высокого уровня', 'Когда нужно сочетать проверенные подходы и что-то новое', 'Когда есть чёткая инструкция и предсказуемый результат, без лишнего эксперимента']\n  }, {\n    question: 'Как оцениваете качество выполненной работы?',\n    answers: ['Если результат заметно превосходит обычные ожидания и удивляет заказчика/коллег', 'Если всё сделано надёжно, в срок и соответствует ключевым целям', 'Если задача решена строго по заданным критериям и нет существенных нареканий']\n  }, {\n    question: 'Как относитесь к инициативе, выходящей за рамки поставленных задач?',\n    answers: ['Часто предлагаю идеи, которые могут сделать итог действительно впечатляющим', 'Высказываю предложения, когда вижу, что это принесёт реальную пользу', 'Предпочитаю не выходить за рамки инструкции, чтобы не рисковать понапрасну']\n  }, {\n    question: 'Как воспринимаете нестандартные решения?',\n    answers: ['Это шанс получить новый опыт и порадовать команду или клиентов', 'Готов(а) их рассмотреть, если они оправданы и не слишком рискованны', 'Предпочитаю проверенные пути, чтобы избежать лишних экспериментов']\n  }, {\n    question: 'Какую обратную связь по работе вам приятнее всего получать?',\n    answers: ['Когда говорят, что всё получилось даже лучше, чем ожидали', 'Когда отмечают аккуратное, качественное выполнение без ошибок', 'Когда просто подтверждают, что всё соответствует заранее установленным требованиям']\n  }, {\n    question: 'Если видите возможность улучшить процесс, что делаете?',\n    answers: ['Инициирую изменения, стремясь поднять планку качества и удивить результатом', 'Оцениваю плюсы и минусы, предлагаю улучшения, если они действительно востребованы', 'Если текущая схема работает стабильно, глобальных перемен обычно не вношу']\n  }, {\n    question: 'Как относитесь к деталям в работе?',\n    answers: ['Считаю, что именно нюансы придают результату яркость и особое качество', 'Уделяю им внимание, когда это влияет на общее впечатление и удовлетворённость клиентов', 'Главная цель — выполнить работу по основным критериям, не вдаваясь в мелочи']\n  }, {\n    question: 'Как воспринимаете конечных пользователей или клиентов вашей работы?',\n    answers: ['Стараюсь удивить их качеством и оригинальностью, чтобы оставить сильное впечатление', 'Важно, чтобы они получили то, что нужно, и остались довольны', 'Главное — соответствие техническим требованиям и срокам, без лишних нюансов']\n  }];\n  useEffect(() => {\n    const handleScroll = () => {\n      setOffsetY(window.pageYOffset);\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n  useEffect(() => {\n    if (isStarted && questions.length > 0) {\n      shuffleAnswers();\n    }\n  }, [currentQuestion, isStarted]);\n  useEffect(() => {\n    // Прокручиваем страницу вверх при изменении вопроса\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  }, [currentQuestion]);\n  const shuffleAnswers = () => {\n    if (questions.length > 0 && currentQuestion < questions.length) {\n      const shuffled = [...questions[currentQuestion].answers].sort(() => Math.random() - 0.5);\n      setShuffledAnswers(shuffled);\n    }\n  };\n  const handleStart = () => {\n    console.log('Кнопка \"Начать опрос\" нажата');\n    if (!surnameValue.trim() || !firstNameValue.trim() || !patronymicValue.trim()) {\n      setFormError('Пожалуйста, заполните все поля');\n      return;\n    }\n    setFormError('');\n    setIsStarted(true);\n    console.log('isStarted:', true);\n  };\n  const handleNext = () => {\n    if (!selectedAnswer) {\n      setErrorMessage('Выберите 1 из 3 вариантов');\n      setTimeout(() => setErrorMessage(''), 1000);\n      return;\n    }\n    setUserAnswers(prev => [...prev, selectedAnswer]);\n    setSelectedAnswer('');\n    // Запускаем анимацию исчезновения текущего вопроса\n    setFadeTransition(true);\n    setTimeout(() => {\n      if (currentQuestion < questions.length - 1) {\n        setCurrentQuestion(prev => prev + 1);\n        shuffleAnswers();\n      } else {\n        handleFinish();\n      }\n      // После смены вопроса восстанавливаем видимость\n      setFadeTransition(false);\n    }, 500); // 500 мс для плавного перехода\n  };\n  const handleFinish = async () => {\n    if (isFinishClicked) return;\n    setIsFinishClicked(true);\n    setIsFinished(true);\n    const data = {\n      fullName: `${surnameValue} ${firstNameValue} ${patronymicValue}`,\n      dateTime: new Date().toISOString(),\n      answers: userAnswers,\n      avoidOverwrite: true\n    };\n    try {\n      const response = await fetch(\"https://rgszh-miniapp.org/api/proxy/assessment/save\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer token\"\n        },\n        body: JSON.stringify(data),\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        alert(\"Ошибка при сохранении данных\");\n      }\n    } catch (error) {\n      console.error(\"Ошибка при отправке данных:\", error);\n      alert(\"Ошибка соединения с сервером\");\n    }\n  };\n  if (isFinished) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thank-you-message\",\n      style: {\n        backgroundImage: `url(${backgroundImage})`,\n        backgroundPositionY: `${offsetY * 0.5}px`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-assessment\",\n        style: {\n          backgroundImage: `url(${logo})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\u0411\\u043B\\u0430\\u0433\\u043E\\u0434\\u0430\\u0440\\u0438\\u043C \\u0437\\u0430 \\u043F\\u0440\\u043E\\u0445\\u043E\\u0436\\u0434\\u0435\\u043D\\u0438\\u0435 \\u043E\\u043F\\u0440\\u043E\\u0441\\u0430, \", firstNameValue, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0415\\u0441\\u043B\\u0438 \\u0412\\u0430\\u0448\\u0438 \\u0432\\u0437\\u0433\\u043B\\u044F\\u0434\\u044B \\u0441\\u043E\\u043E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0443\\u044E\\u0442 \\u0432\\u0437\\u0433\\u043B\\u044F\\u0434\\u0430\\u043C \\u043A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u0438 - \\u043C\\u044B \\u043E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E \\u0441\\u0432\\u044F\\u0436\\u0435\\u043C\\u0441\\u044F!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }, this);\n  }\n  if (isStarted && questions.length > 0 && currentQuestion < questions.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        backgroundImage: `url(${backgroundImage})`,\n        backgroundPositionY: `${offsetY * 0.5}px`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-assessment\",\n        style: {\n          backgroundImage: `url(${logo})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-wrapper\",\n        style: {\n          transition: 'opacity 0.5s ease',\n          opacity: fadeTransition ? 0 : 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-container\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: questions[currentQuestion].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answers-container\",\n          children: shuffledAnswers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `answer-btn ${selectedAnswer === answer ? 'selected' : ''}`,\n            onClick: () => setSelectedAnswer(answer),\n            children: answer\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn next-btn\",\n        onClick: currentQuestion < questions.length - 1 ? handleNext : handleFinish,\n        disabled: !selectedAnswer,\n        children: currentQuestion < questions.length - 1 ? 'Далее' : 'Завершить опрос'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      backgroundImage: `url(${backgroundImage})`,\n      backgroundPositionY: `0px`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `logo-assessment ${isInputFocused ? 'input-focused' : ''}`,\n      style: {\n        backgroundImage: `url(${logo})`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448\\u0438 \\u0424\\u0418\\u041E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"name-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Autosuggest, {\n          suggestions: surnameSuggestions,\n          onSuggestionsFetchRequested: ({\n            value\n          }) => setSurnameSuggestions(getSurnameSuggestions(value)),\n          onSuggestionsClearRequested: () => setSurnameSuggestions([]),\n          getSuggestionValue: suggestion => suggestion,\n          renderSuggestion: suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: suggestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 47\n          }, this),\n          inputProps: surnameInputProps,\n          theme: {\n            container: 'react-autosuggest__container',\n            input: 'react-autosuggest__input',\n            suggestionsContainer: 'react-autosuggest__suggestions-container',\n            suggestionsList: 'react-autosuggest__suggestions-list',\n            suggestion: 'react-autosuggest__suggestion',\n            suggestionHighlighted: 'react-autosuggest__suggestion--highlighted'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u0418\\u043C\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Autosuggest, {\n          suggestions: firstNameSuggestions,\n          onSuggestionsFetchRequested: ({\n            value\n          }) => setFirstNameSuggestions(getFirstNameSuggestions(value)),\n          onSuggestionsClearRequested: () => setFirstNameSuggestions([]),\n          getSuggestionValue: suggestion => suggestion,\n          renderSuggestion: suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: suggestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 47\n          }, this),\n          inputProps: firstNameInputProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u041E\\u0442\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Autosuggest, {\n          suggestions: patronymicSuggestions,\n          onSuggestionsFetchRequested: ({\n            value\n          }) => setPatronymicSuggestions(getPatronymicSuggestions(value)),\n          onSuggestionsClearRequested: () => setPatronymicSuggestions([]),\n          getSuggestionValue: suggestion => suggestion,\n          renderSuggestion: suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: suggestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 47\n          }, this),\n          inputProps: patronymicInputProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `btn ${!surnameValue || !firstNameValue || !patronymicValue ? 'disabled-btn' : 'red-btn'}`,\n        onClick: handleStart,\n        disabled: !surnameValue || !firstNameValue || !patronymicValue,\n        children: \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u043E\\u043F\\u0440\\u043E\\u0441\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 437,\n    columnNumber: 5\n  }, this);\n}\n_s(AssessmentPage, \"9zHK9km3DeqtPwzwiA2GPimu9IY=\");\n_c = AssessmentPage;\nexport default AssessmentPage;\nvar _c;\n$RefreshReg$(_c, \"AssessmentPage\");","map":{"version":3,"names":["React","useState","useEffect","Autosuggest","backgroundImage","logo","surnames","firstnames","patronymics","jsxDEV","_jsxDEV","AssessmentPage","_s","surnameValue","setSurnameValue","surnameSuggestions","setSurnameSuggestions","surnameList","map","item","male","female","firstNameValue","setFirstNameValue","firstNameSuggestions","setFirstNameSuggestions","firstNameList","firstName","name","patronymicValue","setPatronymicValue","patronymicSuggestions","setPatronymicSuggestions","patronymicList","patronymic","getSurnameSuggestions","value","trimmed","trim","toLowerCase","length","filter","s","startsWith","getFirstNameSuggestions","getPatronymicSuggestions","isInputFocused","setIsInputFocused","surnameInputProps","placeholder","onChange","event","newValue","charAt","toUpperCase","slice","onFocus","onBlur","required","autoComplete","firstNameInputProps","patronymicInputProps","isStarted","setIsStarted","isFinishClicked","setIsFinishClicked","errorMessage","setErrorMessage","currentQuestion","setCurrentQuestion","selectedAnswer","setSelectedAnswer","userAnswers","setUserAnswers","isFinished","setIsFinished","shuffledAnswers","setShuffledAnswers","formError","setFormError","offsetY","setOffsetY","fadeTransition","setFadeTransition","questions","question","answers","handleScroll","window","pageYOffset","addEventListener","removeEventListener","shuffleAnswers","scrollTo","top","behavior","shuffled","sort","Math","random","handleStart","console","log","handleNext","setTimeout","prev","handleFinish","data","fullName","dateTime","Date","toISOString","avoidOverwrite","response","fetch","method","headers","body","JSON","stringify","credentials","ok","alert","error","className","style","backgroundPositionY","children","fileName","_jsxFileName","lineNumber","columnNumber","transition","opacity","answer","index","onClick","disabled","suggestions","onSuggestionsFetchRequested","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","inputProps","theme","container","input","suggestionsContainer","suggestionsList","suggestionHighlighted","type","_c","$RefreshReg$"],"sources":["C:/Users/shapeless/Desktop/miniapp/src/AssessmentPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport backgroundImage from './components/background.png';\r\nimport logo from './components/logo.png';\r\nimport surnames from './components/autosuggest/surname.json';\r\nimport firstnames from './components/autosuggest/firstname.json';\r\nimport patronymics from './components/autosuggest/lastname.json';\r\nimport './AssessmentPage.css';\r\n\r\nfunction AssessmentPage() {\r\n  // Поля ввода ФИО\r\n  const [surnameValue, setSurnameValue] = useState('');\r\n  const [surnameSuggestions, setSurnameSuggestions] = useState([]);\r\n  const surnameList = surnames.map(item => item.male || item.female);\r\n\r\n  const [firstNameValue, setFirstNameValue] = useState('');\r\n  const [firstNameSuggestions, setFirstNameSuggestions] = useState([]);\r\n  const firstNameList = firstnames.map(item => typeof item === 'string' ? item : (item.firstName || item.name));\r\n\r\n  const [patronymicValue, setPatronymicValue] = useState('');\r\n  const [patronymicSuggestions, setPatronymicSuggestions] = useState([]);\r\n  const patronymicList = patronymics.map(item => typeof item === 'string' ? item : (item.patronymic || item.name));\r\n\r\n  // Функции для подсказок\r\n  const getSurnameSuggestions = (value) => {\r\n    const trimmed = value.trim().toLowerCase();\r\n    if (trimmed.length < 2) return [];\r\n    return surnameList.filter(s => s.toLowerCase().startsWith(trimmed));\r\n  };\r\n  const getFirstNameSuggestions = (value) => {\r\n    const trimmed = value.trim().toLowerCase();\r\n    if (trimmed.length < 2) return [];\r\n    return firstNameList.filter(s => s.toLowerCase().startsWith(trimmed));\r\n  };\r\n  const getPatronymicSuggestions = (value) => {\r\n    const trimmed = value.trim().toLowerCase();\r\n    if (trimmed.length < 2) return [];\r\n    return patronymicList.filter(s => s.toLowerCase().startsWith(trimmed));\r\n  };\r\n\r\n  // Состояние для фокуса ввода\r\n  const [isInputFocused, setIsInputFocused] = useState(false);\r\n\r\n  // Обновлённые inputProps\r\n  const surnameInputProps = {\r\n    placeholder: 'Введите фамилию',\r\n    value: surnameValue,\r\n    onChange: (event, { newValue }) =>\r\n      setSurnameValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase()),\r\n    onFocus: () => {\r\n      setIsInputFocused(true);\r\n      setSurnameSuggestions([]);\r\n    },\r\n    onBlur: () => setIsInputFocused(false),\r\n    required: true,\r\n    autoComplete: 'off'\r\n  };\r\n\r\n  const firstNameInputProps = {\r\n    placeholder: 'Введите имя',\r\n    value: firstNameValue,\r\n    onChange: (event, { newValue }) =>\r\n      setFirstNameValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase()),\r\n    onFocus: () => {\r\n      setIsInputFocused(true);\r\n      setFirstNameSuggestions([]);\r\n    },\r\n    onBlur: () => setIsInputFocused(false),\r\n    required: true,\r\n    autoComplete: 'off'\r\n  };\r\n\r\n  const patronymicInputProps = {\r\n    placeholder: 'Введите отчество',\r\n    value: patronymicValue,\r\n    onChange: (event, { newValue }) =>\r\n      setPatronymicValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase()),\r\n    onFocus: () => {\r\n      setIsInputFocused(true);\r\n      setPatronymicSuggestions([]);\r\n    },\r\n    onBlur: () => setIsInputFocused(false),\r\n    required: true,\r\n    autoComplete: 'off'\r\n  };\r\n\r\n  /*** Опрос ***/\r\n  const [isStarted, setIsStarted] = useState(false);\r\n  const [isFinishClicked, setIsFinishClicked] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState('');\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n  const [isFinished, setIsFinished] = useState(false);\r\n  const [shuffledAnswers, setShuffledAnswers] = useState([]);\r\n  const [formError, setFormError] = useState('');\r\n  const [offsetY, setOffsetY] = useState(0);\r\n\r\n  // Состояние для анимации перехода между вопросами\r\n  const [fadeTransition, setFadeTransition] = useState(false);\r\n\r\n  // Массив вопросов\r\n  const questions = [\r\n    {\r\n      question: 'Какой формат работы вам ближе?',\r\n      answers: [\r\n        'Когда можно детально разобраться в процессах и построить устойчивую систему',\r\n        'Когда задачи достаточно разнообразны и требуют гибкого подхода',\r\n        'Когда есть чёткий алгоритм действий и понятный конечный результат'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Если коллега допустил серьёзную ошибку, что для вас логичнее сделать?',\r\n      answers: [\r\n        'Понять, что пошло не так, и вместе найти пути исправления',\r\n        'В первую очередь скорректировать свои планы с учётом возникших проблем',\r\n        'Сделать выводы для себя и минимизировать влияние на мою работу'\r\n      ],\r\n    },\r\n    {\r\n      question: 'В команде нарастает напряжение, которое влияет на общий процесс. Как вы реагируете?',\r\n      answers: [\r\n        'Стараюсь выяснить причину и предложить возможные решения, учитывая интересы всех',\r\n        'Наблюдаю за развитием ситуации и при необходимости высказываю своё мнение',\r\n        'Предпочитаю не вовлекаться, если это напрямую не затрагивает мою зону ответственности'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Как относитесь к комментариям по вашей работе?',\r\n      answers: [\r\n        'Считаю их возможностью для развития, если они аргументированы',\r\n        'Выслушиваю, но меняю подход только при реальной необходимости',\r\n        'Если работа выполнена по стандартам, дополнительные замечания не критичны'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Клиент или партнер выражает недовольство результатом. Как поступаете?',\r\n      answers: [\r\n        'Пытаюсь понять, где возникли расхождения, и найти приемлемое решение',\r\n        'Сначала оцениваю обоснованность претензий, при необходимости уточняю детали',\r\n        'Если всё сделано согласно договорённостям, считаю, что моя задача выполнена'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Какой рабочий стиль для вас комфортнее?',\r\n      answers: [\r\n        'Выстраивать системные процессы, учитывая интересы всех сторон надолго вперёд',\r\n        'Следовать намеченному плану, при необходимости поддерживая взаимодействие',\r\n        'Сосредотачиваться на своих задачах, минимизируя отвлечения на внешние факторы'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Как вы относитесь к идее поддерживать контакт с бывшими клиентами или коллегами, чтобы в будущем возможно было сотрудничество?',\r\n      answers: [\r\n        'Считаю это важным для выстраивания долгосрочных отношений',\r\n        'Можно поддерживать связь, если в этом есть очевидная практическая выгода',\r\n        'Предпочитаю фокусироваться на текущих проектах, не распыляясь на прошлое'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Если приходится выбирать между краткосрочной выгодой и построением долгосрочных отношений, что окажется важнее?',\r\n      answers: [\r\n        'Долгосрочная перспектива, даже если сейчас придётся чем-то пожертвовать',\r\n        'Зависит от ситуации — оцениваю риски, возможности и совокупную пользу',\r\n        'Скорее выберу краткосрочную выгоду, ведь будущее сложно прогнозировать'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Насколько вы готовы вкладываться в общее развитие и успехи команды?',\r\n      answers: [\r\n        'Считаю важным делиться опытом, помогать коллегам и укреплять общий результат',\r\n        'Поддерживаю такие инициативы, если они не мешают моей продуктивности',\r\n        'Сосредотачиваюсь на своей зоне ответственности, дополнительные усилия — опциональны'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Как относитесь к идее регулярных встреч или мозговых штурмов с коллегами для совершенствования общего процесса?',\r\n      answers: [\r\n        'Считаю это ценным инструментом для укрепления взаимопонимания и улучшения результата',\r\n        'Участвую, если уверен(а), что это оправданно и не перегружает рабочее время',\r\n        'Предпочитаю решать задачи в индивидуальном порядке, без лишних обсуждений'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Как относитесь к повышению квалификации?',\r\n      answers: [\r\n        'Постоянно осваиваю новые инструменты и технологии, чтобы быть в курсе трендов',\r\n        'Изучаю что-то новое, когда это действительно нужно для выполнения задач',\r\n        'Считаю, что уже имеющихся знаний обычно достаточно для базовых процессов'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Как реагируете, когда сталкиваетесь с незнакомой задачей?',\r\n      answers: [\r\n        'С радостью вижу шанс изучить новую область и расширить компетенции',\r\n        'Изучаю столько, сколько требуется, чтобы качественно решить задачу',\r\n        'Предпочитаю применять проверенные методы, если они дают нужный результат'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Как относитесь к обмену знаниями в команде?',\r\n      answers: [\r\n        'Считаю, что это взаимовыгодный процесс: чем больше делимся, тем сильнее команда',\r\n        'Готов(а) поделиться опытом, если вижу, что это действительно кому-то полезно',\r\n        'Каждый занимается своей областью, делиться или нет — решение сугубо личное'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Что делаете, если замечаете, что используемый процесс устарел?',\r\n      answers: [\r\n        'Изучаю, как его можно обновить, и вношу конкретные предложения',\r\n        'Предлагаю альтернативы, если вижу в этом реальную пользу',\r\n        'Если процесс пока работает, значит, радикальные изменения не обязательны'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Насколько важно для вас идти в ногу с новыми трендами в своей сфере?',\r\n      answers: [\r\n        'Постоянно ищу и пробую инновационные подходы, слежу за профессиональными сообществами',\r\n        'Изучаю новинки по мере необходимости, когда они могут пригодиться в работе',\r\n        'Ориентируюсь в основном на проверенные временем технологии'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Как подходите к решению сложных задач?',\r\n      answers: [\r\n        'Стараюсь рассмотреть задачу под разными углами и привлекаю экспертов при необходимости',\r\n        'Опираюсь на имеющиеся знания, обращаясь за поддержкой только если это действительно нужно',\r\n        'Использую знакомые шаблоны, которые уже доказали свою эффективность'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Как относитесь к критическому анализу своих профессиональных методов?',\r\n      answers: [\r\n        'Считаю, что это естественный путь к росту экспертизы и поиску новых решений',\r\n        'Прислушиваюсь, если замечания выглядят обоснованными и практичными',\r\n        'Если метод работает, то лишний анализ может только замедлить процесс'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Какой тип задач для вас наиболее интересен?',\r\n      answers: [\r\n        'Когда можно глубоко вникнуть и довести методику до высокого уровня',\r\n        'Когда нужно сочетать проверенные подходы и что-то новое',\r\n        'Когда есть чёткая инструкция и предсказуемый результат, без лишнего эксперимента'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Как оцениваете качество выполненной работы?',\r\n      answers: [\r\n        'Если результат заметно превосходит обычные ожидания и удивляет заказчика/коллег',\r\n        'Если всё сделано надёжно, в срок и соответствует ключевым целям',\r\n        'Если задача решена строго по заданным критериям и нет существенных нареканий'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Как относитесь к инициативе, выходящей за рамки поставленных задач?',\r\n      answers: [\r\n        'Часто предлагаю идеи, которые могут сделать итог действительно впечатляющим',\r\n        'Высказываю предложения, когда вижу, что это принесёт реальную пользу',\r\n        'Предпочитаю не выходить за рамки инструкции, чтобы не рисковать понапрасну'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Как воспринимаете нестандартные решения?',\r\n      answers: [\r\n        'Это шанс получить новый опыт и порадовать команду или клиентов',\r\n        'Готов(а) их рассмотреть, если они оправданы и не слишком рискованны',\r\n        'Предпочитаю проверенные пути, чтобы избежать лишних экспериментов'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Какую обратную связь по работе вам приятнее всего получать?',\r\n      answers: [\r\n        'Когда говорят, что всё получилось даже лучше, чем ожидали',\r\n        'Когда отмечают аккуратное, качественное выполнение без ошибок',\r\n        'Когда просто подтверждают, что всё соответствует заранее установленным требованиям'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Если видите возможность улучшить процесс, что делаете?',\r\n      answers: [\r\n        'Инициирую изменения, стремясь поднять планку качества и удивить результатом',\r\n        'Оцениваю плюсы и минусы, предлагаю улучшения, если они действительно востребованы',\r\n        'Если текущая схема работает стабильно, глобальных перемен обычно не вношу'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Как относитесь к деталям в работе?',\r\n      answers: [\r\n        'Считаю, что именно нюансы придают результату яркость и особое качество',\r\n        'Уделяю им внимание, когда это влияет на общее впечатление и удовлетворённость клиентов',\r\n        'Главная цель — выполнить работу по основным критериям, не вдаваясь в мелочи'\r\n      ],\r\n    },\r\n    {\r\n      question: 'Как воспринимаете конечных пользователей или клиентов вашей работы?',\r\n      answers: [\r\n        'Стараюсь удивить их качеством и оригинальностью, чтобы оставить сильное впечатление',\r\n        'Важно, чтобы они получили то, что нужно, и остались довольны',\r\n        'Главное — соответствие техническим требованиям и срокам, без лишних нюансов'\r\n      ],\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      setOffsetY(window.pageYOffset);\r\n    };\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isStarted && questions.length > 0) {\r\n      shuffleAnswers();\r\n    }\r\n  }, [currentQuestion, isStarted]);\r\n\r\n  useEffect(() => {\r\n    // Прокручиваем страницу вверх при изменении вопроса\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  }, [currentQuestion]);\r\n\r\n  const shuffleAnswers = () => {\r\n    if (questions.length > 0 && currentQuestion < questions.length) {\r\n      const shuffled = [...questions[currentQuestion].answers].sort(() => Math.random() - 0.5);\r\n      setShuffledAnswers(shuffled);\r\n    }\r\n  };\r\n\r\n  const handleStart = () => {\r\n    console.log('Кнопка \"Начать опрос\" нажата');\r\n    if (!surnameValue.trim() || !firstNameValue.trim() || !patronymicValue.trim()) {\r\n      setFormError('Пожалуйста, заполните все поля');\r\n      return;\r\n    }\r\n    setFormError('');\r\n    setIsStarted(true);\r\n    console.log('isStarted:', true);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (!selectedAnswer) {\r\n      setErrorMessage('Выберите 1 из 3 вариантов');\r\n      setTimeout(() => setErrorMessage(''), 1000);\r\n      return;\r\n    }\r\n    setUserAnswers(prev => [...prev, selectedAnswer]);\r\n    setSelectedAnswer('');\r\n    // Запускаем анимацию исчезновения текущего вопроса\r\n    setFadeTransition(true);\r\n    setTimeout(() => {\r\n      if (currentQuestion < questions.length - 1) {\r\n        setCurrentQuestion(prev => prev + 1);\r\n        shuffleAnswers();\r\n      } else {\r\n        handleFinish();\r\n      }\r\n      // После смены вопроса восстанавливаем видимость\r\n      setFadeTransition(false);\r\n    }, 500); // 500 мс для плавного перехода\r\n  };\r\n\r\n  const handleFinish = async () => {\r\n    if (isFinishClicked) return;\r\n    setIsFinishClicked(true);\r\n    setIsFinished(true);\r\n    const data = {\r\n      fullName: `${surnameValue} ${firstNameValue} ${patronymicValue}`,\r\n      dateTime: new Date().toISOString(),\r\n      answers: userAnswers,\r\n      avoidOverwrite: true,\r\n    };\r\n    try {\r\n      const response = await fetch(\"https://rgszh-miniapp.org/api/proxy/assessment/save\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": \"Bearer token\",\r\n        },\r\n        body: JSON.stringify(data),\r\n        credentials: 'include',\r\n      });\r\n      if (!response.ok) {\r\n        alert(\"Ошибка при сохранении данных\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Ошибка при отправке данных:\", error);\r\n      alert(\"Ошибка соединения с сервером\");\r\n    }\r\n  };\r\n\r\n  if (isFinished) {\r\n    return (\r\n      <div className=\"thank-you-message\" style={{ backgroundImage: `url(${backgroundImage})`, backgroundPositionY: `${offsetY * 0.5}px` }}>\r\n        <div className=\"logo-assessment\" style={{ backgroundImage: `url(${logo})` }} />\r\n        <h2>Благодарим за прохождение опроса, {firstNameValue}!</h2>\r\n        <p>Если Ваши взгляды соответствуют взглядам компании - мы обязательно свяжемся!</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isStarted && questions.length > 0 && currentQuestion < questions.length) {\r\n    return (\r\n      <div className=\"container\" style={{ backgroundImage: `url(${backgroundImage})`, backgroundPositionY: `${offsetY * 0.5}px` }}>\r\n        <div className=\"logo-assessment\" style={{ backgroundImage: `url(${logo})` }} />\r\n        <div className=\"question-wrapper\" style={{ transition: 'opacity 0.5s ease', opacity: fadeTransition ? 0 : 1 }}>\r\n          <div className=\"question-container\">\r\n            <h2>{questions[currentQuestion].question}</h2>\r\n          </div>\r\n          <div className=\"answers-container\">\r\n            {shuffledAnswers.map((answer, index) => (\r\n              <button\r\n                key={index}\r\n                className={`answer-btn ${selectedAnswer === answer ? 'selected' : ''}`}\r\n                onClick={() => setSelectedAnswer(answer)}\r\n              >\r\n                {answer}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n        <button\r\n          className=\"btn next-btn\"\r\n          onClick={currentQuestion < questions.length - 1 ? handleNext : handleFinish}\r\n          disabled={!selectedAnswer}\r\n        >\r\n          {currentQuestion < questions.length - 1 ? 'Далее' : 'Завершить опрос'}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\" style={{ backgroundImage: `url(${backgroundImage})`, backgroundPositionY: `0px` }}>\r\n      <div className={`logo-assessment ${isInputFocused ? 'input-focused' : ''}`} style={{ backgroundImage: `url(${logo})` }} />\r\n      <h2>Введите ваши ФИО</h2>\r\n      <form className=\"name-form\">\r\n        <div className=\"input-container\">\r\n          <label>Фамилия</label>\r\n          <Autosuggest\r\n            suggestions={surnameSuggestions}\r\n            onSuggestionsFetchRequested={({ value }) => setSurnameSuggestions(getSurnameSuggestions(value))}\r\n            onSuggestionsClearRequested={() => setSurnameSuggestions([])}\r\n            getSuggestionValue={(suggestion) => suggestion}\r\n            renderSuggestion={(suggestion) => <div>{suggestion}</div>}\r\n            inputProps={surnameInputProps}\r\n            theme={{\r\n              container: 'react-autosuggest__container',\r\n              input: 'react-autosuggest__input',\r\n              suggestionsContainer: 'react-autosuggest__suggestions-container',\r\n              suggestionsList: 'react-autosuggest__suggestions-list',\r\n              suggestion: 'react-autosuggest__suggestion',\r\n              suggestionHighlighted: 'react-autosuggest__suggestion--highlighted',\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <label>Имя</label>\r\n          <Autosuggest\r\n            suggestions={firstNameSuggestions}\r\n            onSuggestionsFetchRequested={({ value }) => setFirstNameSuggestions(getFirstNameSuggestions(value))}\r\n            onSuggestionsClearRequested={() => setFirstNameSuggestions([])}\r\n            getSuggestionValue={(suggestion) => suggestion}\r\n            renderSuggestion={(suggestion) => <div>{suggestion}</div>}\r\n            inputProps={firstNameInputProps}\r\n          />\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <label>Отчество</label>\r\n          <Autosuggest\r\n            suggestions={patronymicSuggestions}\r\n            onSuggestionsFetchRequested={({ value }) => setPatronymicSuggestions(getPatronymicSuggestions(value))}\r\n            onSuggestionsClearRequested={() => setPatronymicSuggestions([])}\r\n            getSuggestionValue={(suggestion) => suggestion}\r\n            renderSuggestion={(suggestion) => <div>{suggestion}</div>}\r\n            inputProps={patronymicInputProps}\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className={`btn ${!surnameValue || !firstNameValue || !patronymicValue ? 'disabled-btn' : 'red-btn'}`}\r\n          onClick={ handleStart }\r\n          disabled={!surnameValue || !firstNameValue || !patronymicValue}\r\n        >\r\n          Начать опрос\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AssessmentPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}