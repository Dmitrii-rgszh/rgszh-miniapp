{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import Autosuggest from'react-autosuggest';import logo from'./components/logo.png';import backgroundImage from'./components/background.jpg';import partners from'./components/autosuggest/partners.json';import speakers from'./components/autosuggest/speakers.json';import'./FeedbackPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FeedbackPage=()=>{// Состояния для ввода партнёра и подсказок\nconst[partner,setPartner]=useState('');const[partnerSuggestions,setPartnerSuggestions]=useState([]);// Реф на контейнер для добавления/удаления класса .keyboard-up\nconst containerRef=useRef(null);// Реф на кнопку «Далее», чтобы прокручивать её в область видимости\nconst nextButtonRef=useRef(null);// При фокусе на поле ввода: добавляем класс \"keyboard-up\" и прокручиваем кнопку\nconst handleFocus=()=>{if(containerRef.current){containerRef.current.classList.add('keyboard-up');}// Небольшая задержка, чтобы клавиатура успела открыться\nsetTimeout(()=>{if(nextButtonRef.current){nextButtonRef.current.scrollIntoView({behavior:'smooth',block:'end'});}},300);};// При потере фокуса: убираем класс \"keyboard-up\"\nconst handleBlur=()=>{if(containerRef.current){containerRef.current.classList.remove('keyboard-up');}};// Автосаджест (пример, если нужно)\nconst getPartnerSuggestions=value=>{const inputValue=value?value.trim().toLowerCase():'';return inputValue.length<2?[]:partners.filter(p=>typeof p==='string'&&p.toLowerCase().includes(inputValue));};const handlePartnerChange=e=>{setPartner(e.target.value);};const partnerInputProps={placeholder:'Введите название партнёра (например, ВТБ)',value:partner,onChange:handlePartnerChange,onFocus:handleFocus,onBlur:handleBlur,autoComplete:'off'};// Пример остальной логики (список спикеров, шаги и т.д.)\nconst[speakersList,setSpeakersList]=useState([{fullName:'',id:1}]);const handleAddSpeaker=()=>{setSpeakersList([...speakersList,{fullName:'',id:speakersList.length+1}]);};const handleSpeakerChange=(e,index)=>{const updated=[...speakersList];updated[index].fullName=e.target.value;setSpeakersList(updated);};const qualityRows=[{positive:'Экспертный',negative:'Компетентный'},{positive:'Энергичный',negative:'Пассивный'},{positive:'Мотивирующий',negative:'Невдохновляющий'},{positive:'Харизматичный',negative:'Душный'},{positive:'Доступно доносит информацию',negative:'Говорит сложными терминами'}];const[speakerQualities,setSpeakerQualities]=useState([]);const[currentSpeakerIndex,setCurrentSpeakerIndex]=useState(0);useEffect(()=>{// Инициализируем массив оценок при изменении списка спикеров\nsetSpeakerQualities(speakersList.map(()=>Array(5).fill(null)));},[speakersList]);const handleQualitySelectForSpeaker=(rowIndex,type)=>{const updated=[...speakerQualities];updated[currentSpeakerIndex][rowIndex]=type;setSpeakerQualities(updated);};const[usefulness,setUsefulness]=useState('');const handleUsefulness=value=>{setUsefulness(value);};const[brightThoughts,setBrightThoughts]=useState('');const handleBrightThoughts=e=>{setBrightThoughts(e.target.value);};const additionalOptions=['Практики','Клиентских историй','Статистических данных','Фишек продаж',\"Перерывов / 'Кофе'-пауз\",'Разбор продуктовой линейки','Детальный разбор параметров продукта','Ящик Prosecco'];const[additionalSelections,setAdditionalSelections]=useState([]);const toggleAdditionalSelection=option=>{if(additionalSelections.includes(option)){setAdditionalSelections(additionalSelections.filter(item=>item!==option));}else{setAdditionalSelections([...additionalSelections,option]);}};const[impression,setImpression]=useState('');const handleImpression=value=>{setImpression(value);};const[currentStep,setCurrentStep]=useState(1);const[isFinished,setIsFinished]=useState(false);const[isFinishClicked,setIsFinishClicked]=useState(false);const handleNext=()=>{if(currentStep===1&&!partner.trim()){alert('Введите название партнёра!');return;}// ... валидация для остальных шагов ...\nsetCurrentStep(prev=>prev+1);};const handleFinish=async()=>{if(isFinishClicked)return;setIsFinishClicked(true);setIsFinished(true);// Пример формирования данных для отправки\nconst data={partner// ... прочие ответы ...\n};try{const response=await fetch('https://rgszh-miniapp.org/api/feedback/save',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(data),credentials:'include'});if(!response.ok){alert('Ошибка при сохранении данных');}}catch(error){console.error('Ошибка при отправке данных:',error);alert('Ошибка соединения с сервером');}};if(isFinished){return/*#__PURE__*/_jsx(\"div\",{className:\"thank-you-message\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"\\u0411\\u043B\\u0430\\u0433\\u043E\\u0434\\u0430\\u0440\\u0438\\u043C \\u0437\\u0430 \\u043F\\u0440\\u043E\\u0445\\u043E\\u0436\\u0434\\u0435\\u043D\\u0438\\u0435 \\u043E\\u043F\\u0440\\u043E\\u0441\\u0430!\"})});}return/*#__PURE__*/_jsxs(\"div\",{ref:containerRef,className:\"container page-content\",style:{backgroundImage:`url(${backgroundImage})`},children:[/*#__PURE__*/_jsx(\"div\",{className:\"logo\",children:/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"\\u041B\\u043E\\u0433\\u043E\\u0442\\u0438\\u043F\",className:\"logo-image\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"input-label\",children:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u0430\\u0440\\u0442\\u043D\\u0451\\u0440\\u0430\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"partner-input\",value:partner,onChange:handlePartnerChange,onFocus:handleFocus,onBlur:handleBlur,placeholder:\"\\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440, \\u0412\\u0422\\u0411\"}),/*#__PURE__*/_jsx(\"button\",{ref:nextButtonRef,className:\"full-width-btn\",onClick:handleNext,children:\"\\u0414\\u0430\\u043B\\u0435\\u0435\"})]});};export default FeedbackPage;","map":{"version":3,"names":["React","useState","useEffect","useRef","Autosuggest","logo","backgroundImage","partners","speakers","jsx","_jsx","jsxs","_jsxs","FeedbackPage","partner","setPartner","partnerSuggestions","setPartnerSuggestions","containerRef","nextButtonRef","handleFocus","current","classList","add","setTimeout","scrollIntoView","behavior","block","handleBlur","remove","getPartnerSuggestions","value","inputValue","trim","toLowerCase","length","filter","p","includes","handlePartnerChange","e","target","partnerInputProps","placeholder","onChange","onFocus","onBlur","autoComplete","speakersList","setSpeakersList","fullName","id","handleAddSpeaker","handleSpeakerChange","index","updated","qualityRows","positive","negative","speakerQualities","setSpeakerQualities","currentSpeakerIndex","setCurrentSpeakerIndex","map","Array","fill","handleQualitySelectForSpeaker","rowIndex","type","usefulness","setUsefulness","handleUsefulness","brightThoughts","setBrightThoughts","handleBrightThoughts","additionalOptions","additionalSelections","setAdditionalSelections","toggleAdditionalSelection","option","item","impression","setImpression","handleImpression","currentStep","setCurrentStep","isFinished","setIsFinished","isFinishClicked","setIsFinishClicked","handleNext","alert","prev","handleFinish","data","response","fetch","method","headers","body","JSON","stringify","credentials","ok","error","console","className","children","ref","style","src","alt","onClick"],"sources":["C:/Users/shapeless/Desktop/miniapp/src/FeedbackPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport logo from './components/logo.png';\r\nimport backgroundImage from './components/background.jpg';\r\nimport partners from './components/autosuggest/partners.json';\r\nimport speakers from './components/autosuggest/speakers.json';\r\nimport './FeedbackPage.css';\r\n\r\nconst FeedbackPage = () => {\r\n  // Состояния для ввода партнёра и подсказок\r\n  const [partner, setPartner] = useState('');\r\n  const [partnerSuggestions, setPartnerSuggestions] = useState([]);\r\n\r\n  // Реф на контейнер для добавления/удаления класса .keyboard-up\r\n  const containerRef = useRef(null);\r\n  // Реф на кнопку «Далее», чтобы прокручивать её в область видимости\r\n  const nextButtonRef = useRef(null);\r\n\r\n  // При фокусе на поле ввода: добавляем класс \"keyboard-up\" и прокручиваем кнопку\r\n  const handleFocus = () => {\r\n    if (containerRef.current) {\r\n      containerRef.current.classList.add('keyboard-up');\r\n    }\r\n    // Небольшая задержка, чтобы клавиатура успела открыться\r\n    setTimeout(() => {\r\n      if (nextButtonRef.current) {\r\n        nextButtonRef.current.scrollIntoView({ behavior: 'smooth', block: 'end' });\r\n      }\r\n    }, 300);\r\n  };\r\n\r\n  // При потере фокуса: убираем класс \"keyboard-up\"\r\n  const handleBlur = () => {\r\n    if (containerRef.current) {\r\n      containerRef.current.classList.remove('keyboard-up');\r\n    }\r\n  };\r\n\r\n  // Автосаджест (пример, если нужно)\r\n  const getPartnerSuggestions = (value) => {\r\n    const inputValue = value ? value.trim().toLowerCase() : '';\r\n    return inputValue.length < 2\r\n      ? []\r\n      : partners.filter(\r\n          (p) => typeof p === 'string' && p.toLowerCase().includes(inputValue)\r\n        );\r\n  };\r\n\r\n  const handlePartnerChange = (e) => {\r\n    setPartner(e.target.value);\r\n  };\r\n\r\n  const partnerInputProps = {\r\n    placeholder: 'Введите название партнёра (например, ВТБ)',\r\n    value: partner,\r\n    onChange: handlePartnerChange,\r\n    onFocus: handleFocus,\r\n    onBlur: handleBlur,\r\n    autoComplete: 'off'\r\n  };\r\n\r\n  // Пример остальной логики (список спикеров, шаги и т.д.)\r\n  const [speakersList, setSpeakersList] = useState([{ fullName: '', id: 1 }]);\r\n  const handleAddSpeaker = () => {\r\n    setSpeakersList([...speakersList, { fullName: '', id: speakersList.length + 1 }]);\r\n  };\r\n  const handleSpeakerChange = (e, index) => {\r\n    const updated = [...speakersList];\r\n    updated[index].fullName = e.target.value;\r\n    setSpeakersList(updated);\r\n  };\r\n\r\n  const qualityRows = [\r\n    { positive: 'Экспертный', negative: 'Компетентный' },\r\n    { positive: 'Энергичный', negative: 'Пассивный' },\r\n    { positive: 'Мотивирующий', negative: 'Невдохновляющий' },\r\n    { positive: 'Харизматичный', negative: 'Душный' },\r\n    { positive: 'Доступно доносит информацию', negative: 'Говорит сложными терминами' },\r\n  ];\r\n\r\n  const [speakerQualities, setSpeakerQualities] = useState([]);\r\n  const [currentSpeakerIndex, setCurrentSpeakerIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // Инициализируем массив оценок при изменении списка спикеров\r\n    setSpeakerQualities(speakersList.map(() => Array(5).fill(null)));\r\n  }, [speakersList]);\r\n\r\n  const handleQualitySelectForSpeaker = (rowIndex, type) => {\r\n    const updated = [...speakerQualities];\r\n    updated[currentSpeakerIndex][rowIndex] = type;\r\n    setSpeakerQualities(updated);\r\n  };\r\n\r\n  const [usefulness, setUsefulness] = useState('');\r\n  const handleUsefulness = (value) => {\r\n    setUsefulness(value);\r\n  };\r\n\r\n  const [brightThoughts, setBrightThoughts] = useState('');\r\n  const handleBrightThoughts = (e) => {\r\n    setBrightThoughts(e.target.value);\r\n  };\r\n\r\n  const additionalOptions = [\r\n    'Практики',\r\n    'Клиентских историй',\r\n    'Статистических данных',\r\n    'Фишек продаж',\r\n    \"Перерывов / 'Кофе'-пауз\",\r\n    'Разбор продуктовой линейки',\r\n    'Детальный разбор параметров продукта',\r\n    'Ящик Prosecco',\r\n  ];\r\n  const [additionalSelections, setAdditionalSelections] = useState([]);\r\n  const toggleAdditionalSelection = (option) => {\r\n    if (additionalSelections.includes(option)) {\r\n      setAdditionalSelections(additionalSelections.filter((item) => item !== option));\r\n    } else {\r\n      setAdditionalSelections([...additionalSelections, option]);\r\n    }\r\n  };\r\n\r\n  const [impression, setImpression] = useState('');\r\n  const handleImpression = (value) => {\r\n    setImpression(value);\r\n  };\r\n\r\n  const [currentStep, setCurrentStep] = useState(1);\r\n  const [isFinished, setIsFinished] = useState(false);\r\n  const [isFinishClicked, setIsFinishClicked] = useState(false);\r\n\r\n  const handleNext = () => {\r\n    if (currentStep === 1 && !partner.trim()) {\r\n      alert('Введите название партнёра!');\r\n      return;\r\n    }\r\n    // ... валидация для остальных шагов ...\r\n    setCurrentStep((prev) => prev + 1);\r\n  };\r\n\r\n  const handleFinish = async () => {\r\n    if (isFinishClicked) return;\r\n    setIsFinishClicked(true);\r\n    setIsFinished(true);\r\n\r\n    // Пример формирования данных для отправки\r\n    const data = {\r\n      partner,\r\n      // ... прочие ответы ...\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('https://rgszh-miniapp.org/api/feedback/save', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data),\r\n        credentials: 'include',\r\n      });\r\n      if (!response.ok) {\r\n        alert('Ошибка при сохранении данных');\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при отправке данных:', error);\r\n      alert('Ошибка соединения с сервером');\r\n    }\r\n  };\r\n\r\n  if (isFinished) {\r\n    return (\r\n      <div className=\"thank-you-message\">\r\n        <h2>Благодарим за прохождение опроса!</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      className=\"container page-content\"\r\n      style={{ backgroundImage: `url(${backgroundImage})` }}\r\n    >\r\n      <div className=\"logo\">\r\n        <img src={logo} alt=\"Логотип\" className=\"logo-image\" />\r\n      </div>\r\n\r\n      <div className=\"input-label\">Введите название партнёра</div>\r\n      <input\r\n        type=\"text\"\r\n        className=\"partner-input\"\r\n        value={partner}\r\n        onChange={handlePartnerChange}\r\n        onFocus={handleFocus}\r\n        onBlur={handleBlur}\r\n        placeholder=\"Например, ВТБ\"\r\n      />\r\n\r\n      <button ref={nextButtonRef} className=\"full-width-btn\" onClick={handleNext}>\r\n        Далее\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackPage;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}