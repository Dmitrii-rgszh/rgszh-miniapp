{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shapeless\\\\Desktop\\\\miniapp\\\\src\\\\EmailInputPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport logo from './components/logo.png';\nimport './EmailInputPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailInputPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [status, setStatus] = useState('');\n  const navigate = useNavigate();\n  const handleEmailChange = e => setEmail(e.target.value);\n  const handleCheckEmail = async () => {\n    setStatus('Проверка e-mail...');\n    try {\n      // Отправляем e-mail на сервер для проверки и генерации кода\n      const response = await fetch('/api/proxy/check-email', {\n        method: 'POST',\n        body: JSON.stringify({\n          email\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const result = await response.json();\n      if (result.success) {\n        // Переходим на страницу ввода кода и передаём e-mail, а также уровень (если понадобится)\n        navigate('/confirm-code', {\n          state: {\n            email,\n            accessLevel: result.accessLevel\n          }\n        });\n      } else {\n        setStatus(result.message);\n      }\n    } catch (error) {\n      setStatus('Ошибка при проверке e-mail.');\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo-email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 e-mail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"email-input\",\n        placeholder: \"E-mail\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"check-btn\",\n        onClick: handleCheckEmail,\n        disabled: !email.trim(),\n        children: \"\\u041F\\u0440\\u043E\\u0432\\u0435\\u0440\\u0438\\u0442\\u044C e-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"status-message\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailInputPage, \"WnX+iRnCIx4CYfcOpGRgvsfjI5A=\", false, function () {\n  return [useNavigate];\n});\n_c = EmailInputPage;\nexport default EmailInputPage;\nvar _c;\n$RefreshReg$(_c, \"EmailInputPage\");","map":{"version":3,"names":["React","useState","useNavigate","logo","jsxDEV","_jsxDEV","EmailInputPage","_s","email","setEmail","status","setStatus","navigate","handleEmailChange","e","target","value","handleCheckEmail","response","fetch","method","body","JSON","stringify","headers","result","json","success","state","accessLevel","message","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","disabled","trim","_c","$RefreshReg$"],"sources":["C:/Users/shapeless/Desktop/miniapp/src/EmailInputPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport logo from './components/logo.png';\r\nimport './EmailInputPage.css';\r\n\r\nconst EmailInputPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleEmailChange = (e) => setEmail(e.target.value);\r\n\r\n  const handleCheckEmail = async () => {\r\n    setStatus('Проверка e-mail...');\r\n    try {\r\n      // Отправляем e-mail на сервер для проверки и генерации кода\r\n      const response = await fetch('/api/proxy/check-email', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ email }),\r\n        headers: { 'Content-Type': 'application/json' },\r\n      });\r\n      const result = await response.json();\r\n\r\n      if (result.success) {\r\n        // Переходим на страницу ввода кода и передаём e-mail, а также уровень (если понадобится)\r\n        navigate('/confirm-code', { state: { email, accessLevel: result.accessLevel } });\r\n      } else {\r\n        setStatus(result.message);\r\n      }\r\n    } catch (error) {\r\n      setStatus('Ошибка при проверке e-mail.');\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n    <div className=\"logo-email\" />\r\n    <h2>Введите ваш e-mail</h2>\r\n    <div className=\"input-container\">\r\n      <input\r\n        type=\"email\"\r\n        className=\"email-input\"\r\n        placeholder=\"E-mail\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <button\r\n        className=\"check-btn\"\r\n        onClick={handleCheckEmail}\r\n        disabled={!email.trim()}\r\n      >\r\n        Проверить e-mail\r\n      </button>\r\n    </div>\r\n    {status && <p className=\"status-message\">{status}</p>}\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default EmailInputPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}