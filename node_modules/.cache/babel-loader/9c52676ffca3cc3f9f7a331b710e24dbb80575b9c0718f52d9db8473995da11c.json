{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shapeless\\\\Desktop\\\\miniapp\\\\src\\\\FeedbackPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport logo from './components/logo.png';\nimport partners from './components/autosuggest/partners.json';\nimport speakers from './components/autosuggest/speakers.json';\nimport './FeedbackPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedbackPage = () => {\n  _s();\n  // Состояние для шага опроса – сразу начинаем с этапа 1\n  const [isStarted, setIsStarted] = useState(true);\n  const [isFinished, setIsFinished] = useState(false);\n  const [isFinishClicked, setIsFinishClicked] = useState(false);\n  const [currentStep, setCurrentStep] = useState(1);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [shuffledAnswers, setShuffledAnswers] = useState([]);\n\n  // Шаг 1: Выбор партнёра (Autosuggest)\n  const [partner, setPartner] = useState('');\n  const [partnerSuggestions, setPartnerSuggestions] = useState([]);\n  const getPartnerSuggestions = value => {\n    const inputValue = value.trim().toLowerCase();\n    return inputValue.length < 2 ? [] : partners.filter(p => p.toLowerCase().includes(inputValue));\n  };\n  const onPartnerChange = (event, {\n    newValue\n  }) => {\n    setPartner(newValue);\n  };\n  const partnerInputProps = {\n    placeholder: 'Введите название партнёра',\n    value: partner,\n    onChange: onPartnerChange,\n    autoComplete: 'off'\n  };\n\n  // Шаг 2: Выбор ФИО спикера(ов) (автозаполнение из speakers.json)\n  const [speakersList, setSpeakersList] = useState([{\n    fullName: '',\n    id: 1\n  }]);\n  const handleAddSpeaker = () => {\n    setSpeakersList([...speakersList, {\n      fullName: '',\n      id: speakersList.length + 1\n    }]);\n  };\n  const handleSpeakerChange = (e, index) => {\n    const updated = [...speakersList];\n    updated[index].fullName = e.target.value;\n    setSpeakersList(updated);\n  };\n\n  // Шаг 3: Оценка качеств спикера (5 строк, 2 кнопки в каждой)\n  const qualityRows = [{\n    positive: \"Экспертный\",\n    negative: \"Компетентный\"\n  }, {\n    positive: \"Энергичный\",\n    negative: \"Пассивный\"\n  }, {\n    positive: \"Мотивирующий\",\n    negative: \"Невдохновляющий\"\n  }, {\n    positive: \"Харизматичный\",\n    negative: \"Душный\"\n  }, {\n    positive: \"Доступно доносит информацию\",\n    negative: \"Говорит сложными терминами\"\n  }];\n  const [selectedQualities, setSelectedQualities] = useState(Array(5).fill(null));\n  const handleQualitySelect = (rowIndex, type) => {\n    const newSelection = [...selectedQualities];\n    newSelection[rowIndex] = type;\n    setSelectedQualities(newSelection);\n  };\n\n  // Шаг 4: Фактическая ценность информации – 2 кнопки\n  const [usefulness, setUsefulness] = useState('');\n  const handleUsefulness = value => {\n    setUsefulness(value);\n  };\n\n  // Шаг 5: Самые яркие мысли с мероприятия – текстовое поле\n  const [brightThoughts, setBrightThoughts] = useState('');\n  const handleBrightThoughts = e => {\n    setBrightThoughts(e.target.value);\n  };\n\n  // Шаг 6: Что добавить в тренинг – 8 кнопок, множественный выбор\n  const additionalOptions = [\"Практики\", \"Клиентских историй\", \"Статистических данных\", \"Фишек продаж\", \"Перерывов / 'Кофе'-пауз\", \"Разбор продуктовой линейки\", \"Детальный разбор параметров продукта\", \"Ящик Prosecco\"];\n  const [additionalSelections, setAdditionalSelections] = useState([]);\n  const toggleAdditionalSelection = option => {\n    if (additionalSelections.includes(option)) {\n      setAdditionalSelections(additionalSelections.filter(item => item !== option));\n    } else {\n      setAdditionalSelections([...additionalSelections, option]);\n    }\n  };\n\n  // Шаг 7: Общее впечатление от тренинга – выбор через 3 смайлика\n  const [impression, setImpression] = useState('');\n  const handleImpression = value => {\n    setImpression(value);\n  };\n\n  // Перемешиваем варианты ответа для вопросов (если нужны)\n  useEffect(() => {\n    if (isStarted && questions[currentStep - 1]) {\n      const shuffled = [...questions[currentStep - 1].answers].sort(() => Math.random() - 0.5);\n      setShuffledAnswers(shuffled);\n    }\n  }, [currentStep, isStarted]);\n  const handleNext = () => {\n    // Простейшая валидация обязательных шагов\n    if (currentStep === 1 && !partner) {\n      alert(\"Введите название партнёра\");\n      return;\n    }\n    if (currentStep === 2 && speakersList[0].fullName.trim() === \"\") {\n      alert(\"Введите хотя бы одного спикера\");\n      return;\n    }\n    if (currentStep === 3 && selectedQualities[0] === null) {\n      alert(\"Выберите оценку качеств спикера в первой строке\");\n      return;\n    }\n    if (currentStep === 4 && !usefulness) {\n      alert(\"Выберите ответ на вопрос 'Фактическая ценность информации'\");\n      return;\n    }\n    if (currentStep === 5 && brightThoughts.trim().length < 5) {\n      alert(\"Ответ на вопрос 'Самые яркие мысли с мероприятия' должен содержать минимум 5 символов\");\n      return;\n    }\n    if (currentStep === 7 && !impression) {\n      alert(\"Выберите общее впечатление от тренинга\");\n      return;\n    }\n    if (currentStep < 7) {\n      setCurrentStep(currentStep + 1);\n    } else {\n      handleFinish();\n    }\n  };\n  const handleFinish = async () => {\n    setIsFinishClicked(true);\n    setIsFinished(true); // сразу показываем страницу благодарности\n\n    const data = {\n      partner,\n      speakers: speakersList.map(s => s.fullName),\n      answers: {\n        speakerQualities: selectedQualities,\n        usefulness,\n        brightThoughts,\n        additionalSuggestions: additionalSelections,\n        impression\n      },\n      dateTime: new Date().toISOString()\n    };\n    try {\n      const response = await fetch('https://rgszh-miniapp.org/api/feedback/save', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data),\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        alert(\"Ошибка при сохранении данных\");\n      }\n    } catch (error) {\n      console.error(\"Ошибка при отправке данных:\", error);\n      alert(\"Ошибка соединения с сервером\");\n    }\n  };\n\n  // Пример вопросов – если они используются (можно расширить)\n  const questions = [{\n    question: 'Какой формат работы вам ближе?',\n    answers: ['Когда можно детально разобраться в процессах и построить устойчивую систему', 'Когда задачи достаточно разнообразны и требуют гибкого подхода', 'Когда есть чёткий алгоритм действий и понятный конечный результат']\n  }\n  // Дополнительные вопросы можно добавить, если нужно\n  ];\n  const renderStep = () => {\n    switch (currentStep) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u0430\\u0440\\u0442\\u043D\\u0451\\u0440\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Autosuggest, {\n            suggestions: partnerSuggestions,\n            onSuggestionsFetchRequested: ({\n              value\n            }) => setPartnerSuggestions(getPartnerSuggestions(value)),\n            onSuggestionsClearRequested: () => setPartnerSuggestions([]),\n            getSuggestionValue: suggestion => suggestion,\n            renderSuggestion: suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: suggestion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 47\n            }, this),\n            inputProps: partnerInputProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0424\\u0418\\u041E \\u0441\\u043F\\u0438\\u043A\\u0435\\u0440\\u0430(\\u043E\\u0432)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), speakersList.map((speaker, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: speaker.fullName,\n              onChange: e => handleSpeakerChange(e, index),\n              placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0424\\u0418\\u041E \\u0441\\u043F\\u0438\\u043A\\u0435\\u0440\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), index === speakersList.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddSpeaker,\n              children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u043F\\u0438\\u043A\\u0435\\u0440\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this);\n      case 3:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u041E\\u0446\\u0435\\u043D\\u0438\\u0442\\u0435 \\u043A\\u0430\\u0447\\u0435\\u0441\\u0442\\u0432\\u0430 \\u0441\\u043F\\u0438\\u043A\\u0435\\u0440\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), qualityRows.map((row, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quality-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleQualitySelect(idx, 'positive'),\n              className: selectedQualities[idx] === 'positive' ? 'green' : '',\n              children: row.positive\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleQualitySelect(idx, 'negative'),\n              className: selectedQualities[idx] === 'negative' ? 'red' : '',\n              children: row.negative\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this);\n      case 4:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u0424\\u0430\\u043A\\u0442\\u0438\\u0447\\u0435\\u0441\\u043A\\u0430\\u044F \\u0446\\u0435\\u043D\\u043D\\u043E\\u0441\\u0442\\u044C \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"usefulness-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleUsefulness(\"Полезно в работе (буду применять на практике)\"),\n              className: usefulness === \"Полезно в работе (буду применять на практике)\" ? 'green' : '',\n              children: \"\\u041F\\u043E\\u043B\\u0435\\u0437\\u043D\\u043E \\u0432 \\u0440\\u0430\\u0431\\u043E\\u0442\\u0435 (\\u0431\\u0443\\u0434\\u0443 \\u043F\\u0440\\u0438\\u043C\\u0435\\u043D\\u044F\\u0442\\u044C \\u043D\\u0430 \\u043F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0435)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleUsefulness(\"Бесполезно в работе (с моими клиентами это не работает)\"),\n              className: usefulness === \"Бесполезно в работе (с моими клиентами это не работает)\" ? 'red' : '',\n              children: \"\\u0411\\u0435\\u0441\\u043F\\u043E\\u043B\\u0435\\u0437\\u043D\\u043E \\u0432 \\u0440\\u0430\\u0431\\u043E\\u0442\\u0435 (\\u0441 \\u043C\\u043E\\u0438\\u043C\\u0438 \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0430\\u043C\\u0438 \\u044D\\u0442\\u043E \\u043D\\u0435 \\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u0435\\u0442)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this);\n      case 5:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u0421\\u0430\\u043C\\u044B\\u0435 \\u044F\\u0440\\u043A\\u0438\\u0435 \\u043C\\u044B\\u0441\\u043B\\u0438 \\u0441 \\u043C\\u0435\\u0440\\u043E\\u043F\\u0440\\u0438\\u044F\\u0442\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: brightThoughts,\n            onChange: handleBrightThoughts,\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442 (\\u043C\\u0438\\u043D\\u0438\\u043C\\u0443\\u043C 5 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this);\n      case 6:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u0427\\u0442\\u043E \\u0441\\u0442\\u043E\\u0438\\u043B\\u043E \\u0431\\u044B \\u0434\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432 \\u0442\\u0440\\u0435\\u043D\\u0438\\u043D\\u0433?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"additional-container\",\n            children: additionalOptions.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleAdditionalSelection(opt),\n              className: additionalSelections.includes(opt) ? 'selected' : '',\n              children: opt\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this);\n      case 7:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u041E\\u0431\\u0449\\u0435\\u0435 \\u0432\\u043F\\u0435\\u0447\\u0430\\u0442\\u043B\\u0435\\u043D\\u0438\\u0435 \\u043E\\u0442 \\u0442\\u0440\\u0435\\u043D\\u0438\\u043D\\u0433\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"impression-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleImpression('sad'),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/sad_smiley.png\",\n                alt: \"\\u0421 \\u0433\\u0440\\u0443\\u0441\\u0442\\u043D\\u044B\\u043C \\u0441\\u043C\\u0430\\u0439\\u043B\\u043E\\u043C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleImpression('neutral'),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/neutral_smiley.png\",\n                alt: \"\\u041D\\u0435\\u0439\\u0442\\u0440\\u0430\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0441\\u043C\\u0430\\u0439\\u043B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleImpression('happy'),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/happy_smiley.png\",\n                alt: \"\\u0421\\u0447\\u0430\\u0441\\u0442\\u043B\\u0438\\u0432\\u044B\\u0439 \\u0441\\u043C\\u0430\\u0439\\u043B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedback-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"\\u041B\\u043E\\u0433\\u043E\\u0442\\u0438\\u043F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-container\",\n      children: [renderStep(), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn next-btn\",\n        onClick: currentStep < 7 ? handleNext : handleFinish,\n        children: currentStep < 7 ? 'Далее' : 'Завершить опрос'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), isFinished && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thank-you-message\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0411\\u043B\\u0430\\u0433\\u043E\\u0434\\u0430\\u0440\\u0438\\u043C \\u0437\\u0430 \\u043F\\u0440\\u043E\\u0445\\u043E\\u0436\\u0434\\u0435\\u043D\\u0438\\u0435 \\u043E\\u043F\\u0440\\u043E\\u0441\\u0430!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 316,\n    columnNumber: 5\n  }, this);\n};\n_s(FeedbackPage, \"IK+mYw08PVNyi2I3xqJYqMenq58=\");\n_c = FeedbackPage;\nexport default FeedbackPage;\nvar _c;\n$RefreshReg$(_c, \"FeedbackPage\");","map":{"version":3,"names":["React","useState","useEffect","Autosuggest","logo","partners","speakers","jsxDEV","_jsxDEV","FeedbackPage","_s","isStarted","setIsStarted","isFinished","setIsFinished","isFinishClicked","setIsFinishClicked","currentStep","setCurrentStep","errorMessage","setErrorMessage","selectedAnswer","setSelectedAnswer","userAnswers","setUserAnswers","shuffledAnswers","setShuffledAnswers","partner","setPartner","partnerSuggestions","setPartnerSuggestions","getPartnerSuggestions","value","inputValue","trim","toLowerCase","length","filter","p","includes","onPartnerChange","event","newValue","partnerInputProps","placeholder","onChange","autoComplete","speakersList","setSpeakersList","fullName","id","handleAddSpeaker","handleSpeakerChange","e","index","updated","target","qualityRows","positive","negative","selectedQualities","setSelectedQualities","Array","fill","handleQualitySelect","rowIndex","type","newSelection","usefulness","setUsefulness","handleUsefulness","brightThoughts","setBrightThoughts","handleBrightThoughts","additionalOptions","additionalSelections","setAdditionalSelections","toggleAdditionalSelection","option","item","impression","setImpression","handleImpression","questions","shuffled","answers","sort","Math","random","handleNext","alert","handleFinish","data","map","s","speakerQualities","additionalSuggestions","dateTime","Date","toISOString","response","fetch","method","headers","body","JSON","stringify","credentials","ok","error","console","question","renderStep","children","fileName","_jsxFileName","lineNumber","columnNumber","suggestions","onSuggestionsFetchRequested","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","inputProps","speaker","onClick","row","idx","className","opt","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/shapeless/Desktop/miniapp/src/FeedbackPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport logo from './components/logo.png';\r\nimport partners from './components/autosuggest/partners.json';\r\nimport speakers from './components/autosuggest/speakers.json';\r\nimport './FeedbackPage.css';\r\n\r\nconst FeedbackPage = () => {\r\n  // Состояние для шага опроса – сразу начинаем с этапа 1\r\n  const [isStarted, setIsStarted] = useState(true);\r\n  const [isFinished, setIsFinished] = useState(false);\r\n  const [isFinishClicked, setIsFinishClicked] = useState(false);\r\n  const [currentStep, setCurrentStep] = useState(1);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [selectedAnswer, setSelectedAnswer] = useState('');\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n  const [shuffledAnswers, setShuffledAnswers] = useState([]);\r\n\r\n  // Шаг 1: Выбор партнёра (Autosuggest)\r\n  const [partner, setPartner] = useState('');\r\n  const [partnerSuggestions, setPartnerSuggestions] = useState([]);\r\n  const getPartnerSuggestions = (value) => {\r\n    const inputValue = value.trim().toLowerCase();\r\n    return inputValue.length < 2 ? [] : partners.filter(p => p.toLowerCase().includes(inputValue));\r\n  };\r\n  const onPartnerChange = (event, { newValue }) => {\r\n    setPartner(newValue);\r\n  };\r\n  const partnerInputProps = {\r\n    placeholder: 'Введите название партнёра',\r\n    value: partner,\r\n    onChange: onPartnerChange,\r\n    autoComplete: 'off'\r\n  };\r\n\r\n  // Шаг 2: Выбор ФИО спикера(ов) (автозаполнение из speakers.json)\r\n  const [speakersList, setSpeakersList] = useState([{ fullName: '', id: 1 }]);\r\n  const handleAddSpeaker = () => {\r\n    setSpeakersList([...speakersList, { fullName: '', id: speakersList.length + 1 }]);\r\n  };\r\n  const handleSpeakerChange = (e, index) => {\r\n    const updated = [...speakersList];\r\n    updated[index].fullName = e.target.value;\r\n    setSpeakersList(updated);\r\n  };\r\n\r\n  // Шаг 3: Оценка качеств спикера (5 строк, 2 кнопки в каждой)\r\n  const qualityRows = [\r\n    { positive: \"Экспертный\", negative: \"Компетентный\" },\r\n    { positive: \"Энергичный\", negative: \"Пассивный\" },\r\n    { positive: \"Мотивирующий\", negative: \"Невдохновляющий\" },\r\n    { positive: \"Харизматичный\", negative: \"Душный\" },\r\n    { positive: \"Доступно доносит информацию\", negative: \"Говорит сложными терминами\" },\r\n  ];\r\n  const [selectedQualities, setSelectedQualities] = useState(Array(5).fill(null));\r\n  const handleQualitySelect = (rowIndex, type) => {\r\n    const newSelection = [...selectedQualities];\r\n    newSelection[rowIndex] = type;\r\n    setSelectedQualities(newSelection);\r\n  };\r\n\r\n  // Шаг 4: Фактическая ценность информации – 2 кнопки\r\n  const [usefulness, setUsefulness] = useState('');\r\n  const handleUsefulness = (value) => {\r\n    setUsefulness(value);\r\n  };\r\n\r\n  // Шаг 5: Самые яркие мысли с мероприятия – текстовое поле\r\n  const [brightThoughts, setBrightThoughts] = useState('');\r\n  const handleBrightThoughts = (e) => {\r\n    setBrightThoughts(e.target.value);\r\n  };\r\n\r\n  // Шаг 6: Что добавить в тренинг – 8 кнопок, множественный выбор\r\n  const additionalOptions = [\r\n    \"Практики\",\r\n    \"Клиентских историй\",\r\n    \"Статистических данных\",\r\n    \"Фишек продаж\",\r\n    \"Перерывов / 'Кофе'-пауз\",\r\n    \"Разбор продуктовой линейки\",\r\n    \"Детальный разбор параметров продукта\",\r\n    \"Ящик Prosecco\",\r\n  ];\r\n  const [additionalSelections, setAdditionalSelections] = useState([]);\r\n  const toggleAdditionalSelection = (option) => {\r\n    if (additionalSelections.includes(option)) {\r\n      setAdditionalSelections(additionalSelections.filter(item => item !== option));\r\n    } else {\r\n      setAdditionalSelections([...additionalSelections, option]);\r\n    }\r\n  };\r\n\r\n  // Шаг 7: Общее впечатление от тренинга – выбор через 3 смайлика\r\n  const [impression, setImpression] = useState('');\r\n  const handleImpression = (value) => {\r\n    setImpression(value);\r\n  };\r\n\r\n  // Перемешиваем варианты ответа для вопросов (если нужны)\r\n  useEffect(() => {\r\n    if (isStarted && questions[currentStep - 1]) {\r\n      const shuffled = [...questions[currentStep - 1].answers].sort(() => Math.random() - 0.5);\r\n      setShuffledAnswers(shuffled);\r\n    }\r\n  }, [currentStep, isStarted]);\r\n\r\n  const handleNext = () => {\r\n    // Простейшая валидация обязательных шагов\r\n    if (currentStep === 1 && !partner) {\r\n      alert(\"Введите название партнёра\");\r\n      return;\r\n    }\r\n    if (currentStep === 2 && speakersList[0].fullName.trim() === \"\") {\r\n      alert(\"Введите хотя бы одного спикера\");\r\n      return;\r\n    }\r\n    if (currentStep === 3 && selectedQualities[0] === null) {\r\n      alert(\"Выберите оценку качеств спикера в первой строке\");\r\n      return;\r\n    }\r\n    if (currentStep === 4 && !usefulness) {\r\n      alert(\"Выберите ответ на вопрос 'Фактическая ценность информации'\");\r\n      return;\r\n    }\r\n    if (currentStep === 5 && brightThoughts.trim().length < 5) {\r\n      alert(\"Ответ на вопрос 'Самые яркие мысли с мероприятия' должен содержать минимум 5 символов\");\r\n      return;\r\n    }\r\n    if (currentStep === 7 && !impression) {\r\n      alert(\"Выберите общее впечатление от тренинга\");\r\n      return;\r\n    }\r\n    if (currentStep < 7) {\r\n      setCurrentStep(currentStep + 1);\r\n    } else {\r\n      handleFinish();\r\n    }\r\n  };\r\n\r\n  const handleFinish = async () => {\r\n    setIsFinishClicked(true);\r\n    setIsFinished(true); // сразу показываем страницу благодарности\r\n\r\n    const data = {\r\n      partner,\r\n      speakers: speakersList.map(s => s.fullName),\r\n      answers: {\r\n        speakerQualities: selectedQualities,\r\n        usefulness,\r\n        brightThoughts,\r\n        additionalSuggestions: additionalSelections,\r\n        impression,\r\n      },\r\n      dateTime: new Date().toISOString(),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('https://rgszh-miniapp.org/api/feedback/save', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data),\r\n        credentials: 'include',\r\n      });\r\n      if (!response.ok) {\r\n        alert(\"Ошибка при сохранении данных\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Ошибка при отправке данных:\", error);\r\n      alert(\"Ошибка соединения с сервером\");\r\n    }\r\n  };\r\n\r\n  // Пример вопросов – если они используются (можно расширить)\r\n  const questions = [\r\n    {\r\n      question: 'Какой формат работы вам ближе?',\r\n      answers: [\r\n        'Когда можно детально разобраться в процессах и построить устойчивую систему',\r\n        'Когда задачи достаточно разнообразны и требуют гибкого подхода',\r\n        'Когда есть чёткий алгоритм действий и понятный конечный результат'\r\n      ],\r\n    },\r\n    // Дополнительные вопросы можно добавить, если нужно\r\n  ];\r\n\r\n  const renderStep = () => {\r\n    switch (currentStep) {\r\n      case 1:\r\n        return (\r\n          <div>\r\n            <h2>Введите название партнёра</h2>\r\n            <Autosuggest\r\n              suggestions={partnerSuggestions}\r\n              onSuggestionsFetchRequested={({ value }) => setPartnerSuggestions(getPartnerSuggestions(value))}\r\n              onSuggestionsClearRequested={() => setPartnerSuggestions([])}\r\n              getSuggestionValue={suggestion => suggestion}\r\n              renderSuggestion={suggestion => <div>{suggestion}</div>}\r\n              inputProps={partnerInputProps}\r\n            />\r\n          </div>\r\n        );\r\n      case 2:\r\n        return (\r\n          <div>\r\n            <h2>Введите ФИО спикера(ов)</h2>\r\n            {speakersList.map((speaker, index) => (\r\n              <div key={index}>\r\n                <input\r\n                  type=\"text\"\r\n                  value={speaker.fullName}\r\n                  onChange={(e) => handleSpeakerChange(e, index)}\r\n                  placeholder=\"Введите ФИО спикера\"\r\n                />\r\n                {index === speakersList.length - 1 && (\r\n                  <button onClick={handleAddSpeaker}>Добавить спикера</button>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        );\r\n      case 3:\r\n        return (\r\n          <div>\r\n            <h2>Оцените качества спикера</h2>\r\n            {qualityRows.map((row, idx) => (\r\n              <div key={idx} className=\"quality-row\">\r\n                <button\r\n                  onClick={() => handleQualitySelect(idx, 'positive')}\r\n                  className={selectedQualities[idx] === 'positive' ? 'green' : ''}\r\n                >\r\n                  {row.positive}\r\n                </button>\r\n                <button\r\n                  onClick={() => handleQualitySelect(idx, 'negative')}\r\n                  className={selectedQualities[idx] === 'negative' ? 'red' : ''}\r\n                >\r\n                  {row.negative}\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        );\r\n      case 4:\r\n        return (\r\n          <div>\r\n            <h2>Фактическая ценность информации</h2>\r\n            <div className=\"usefulness-container\">\r\n              <button\r\n                onClick={() => handleUsefulness(\"Полезно в работе (буду применять на практике)\")}\r\n                className={usefulness === \"Полезно в работе (буду применять на практике)\" ? 'green' : ''}\r\n              >\r\n                Полезно в работе (буду применять на практике)\r\n              </button>\r\n              <button\r\n                onClick={() => handleUsefulness(\"Бесполезно в работе (с моими клиентами это не работает)\")}\r\n                className={usefulness === \"Бесполезно в работе (с моими клиентами это не работает)\" ? 'red' : ''}\r\n              >\r\n                Бесполезно в работе (с моими клиентами это не работает)\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      case 5:\r\n        return (\r\n          <div>\r\n            <h2>Самые яркие мысли с мероприятия</h2>\r\n            <input\r\n              type=\"text\"\r\n              value={brightThoughts}\r\n              onChange={handleBrightThoughts}\r\n              placeholder=\"Введите текст (минимум 5 символов)\"\r\n            />\r\n          </div>\r\n        );\r\n      case 6:\r\n        return (\r\n          <div>\r\n            <h2>Что стоило бы добавить в тренинг?</h2>\r\n            <div className=\"additional-container\">\r\n              {additionalOptions.map((opt, idx) => (\r\n                <button\r\n                  key={idx}\r\n                  onClick={() => toggleAdditionalSelection(opt)}\r\n                  className={additionalSelections.includes(opt) ? 'selected' : ''}\r\n                >\r\n                  {opt}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        );\r\n      case 7:\r\n        return (\r\n          <div>\r\n            <h2>Общее впечатление от тренинга</h2>\r\n            <div className=\"impression-container\">\r\n              <button onClick={() => handleImpression('sad')}>\r\n                <img src=\"/sad_smiley.png\" alt=\"С грустным смайлом\" />\r\n              </button>\r\n              <button onClick={() => handleImpression('neutral')}>\r\n                <img src=\"/neutral_smiley.png\" alt=\"Нейтральный смайл\" />\r\n              </button>\r\n              <button onClick={() => handleImpression('happy')}>\r\n                <img src=\"/happy_smiley.png\" alt=\"Счастливый смайл\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"feedback-container\">\r\n      <div className=\"logo\">\r\n        <img src={logo} alt=\"Логотип\" />\r\n      </div>\r\n      <div className=\"step-container\">\r\n        {renderStep()}\r\n        {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n        <button className=\"btn next-btn\" onClick={currentStep < 7 ? handleNext : handleFinish}>\r\n          {currentStep < 7 ? 'Далее' : 'Завершить опрос'}\r\n        </button>\r\n      </div>\r\n      {isFinished && (\r\n        <div className=\"thank-you-message\">\r\n          <h2>Благодарим за прохождение опроса!</h2>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}