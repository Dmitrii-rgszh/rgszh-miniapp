{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shapeless\\\\Desktop\\\\miniapp\\\\src\\\\AssesmentPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './AssessmentPage.css'; // Подключаем стили для страницы оценки\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssessmentPage = () => {\n  _s();\n  var _questions$currentQue2, _questions$currentQue3;\n  const navigate = useNavigate();\n\n  // Массив вопросов (в примере будет 3 вопроса, для полноты надо 25)\n  const questions = [{\n    question: 'Какой язык программирования является самым популярным?',\n    answers: ['JavaScript', 'Python', 'C++'],\n    correct: 'JavaScript'\n  }, {\n    question: 'Какая столица Франции?',\n    answers: ['Лондон', 'Париж', 'Берлин'],\n    correct: 'Париж'\n  }, {\n    question: 'Какое из этих чисел четное?',\n    answers: ['1', '2', '3'],\n    correct: '2'\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [score, setScore] = useState(0);\n  const shuffleAnswers = answers => {\n    return answers.sort(() => Math.random() - 0.5);\n  };\n  const handleAnswerSelect = answer => {\n    setSelectedAnswer(answer);\n  };\n  const handleNext = () => {\n    if (selectedAnswer === questions[currentQuestion].correct) {\n      setScore(score + 1);\n    }\n    setSelectedAnswer('');\n    setCurrentQuestion(currentQuestion + 1);\n  };\n  const handleFinish = () => {\n    if (selectedAnswer === questions[currentQuestion].correct) {\n      setScore(score + 1);\n    }\n    // Здесь можно отправить данные на сервер или сохранить их в файл\n    alert(`Опрос завершён! Ваш результат: ${score}/${questions.length}`);\n    navigate('/'); // Переход на главную или нужную страницу\n  };\n  useEffect(() => {\n    var _questions$currentQue;\n    // Шумим ответы каждый раз при переходе на новый вопрос\n    shuffleAnswers((_questions$currentQue = questions[currentQuestion]) === null || _questions$currentQue === void 0 ? void 0 : _questions$currentQue.answers);\n  }, [currentQuestion]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"assessment-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: (_questions$currentQue2 = questions[currentQuestion]) === null || _questions$currentQue2 === void 0 ? void 0 : _questions$currentQue2.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), (_questions$currentQue3 = questions[currentQuestion]) === null || _questions$currentQue3 === void 0 ? void 0 : _questions$currentQue3.answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `answer-btn ${selectedAnswer === answer ? 'selected' : ''}`,\n      onClick: () => handleAnswerSelect(answer),\n      children: answer\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: currentQuestion === questions.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn red-btn\",\n        onClick: handleFinish,\n        children: \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C \\u043E\\u043F\\u0440\\u043E\\u0441\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn red-btn\",\n        onClick: handleNext,\n        children: \"\\u0414\\u0430\\u043B\\u0435\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(AssessmentPage, \"4MJL5ihA7WM90oN7/rxXpr4iWOs=\", false, function () {\n  return [useNavigate];\n});\n_c = AssessmentPage;\nexport default AssessmentPage;\nvar _c;\n$RefreshReg$(_c, \"AssessmentPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","AssessmentPage","_s","_questions$currentQue2","_questions$currentQue3","navigate","questions","question","answers","correct","currentQuestion","setCurrentQuestion","selectedAnswer","setSelectedAnswer","score","setScore","shuffleAnswers","sort","Math","random","handleAnswerSelect","answer","handleNext","handleFinish","alert","length","_questions$currentQue","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/shapeless/Desktop/miniapp/src/AssesmentPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './AssessmentPage.css';  // Подключаем стили для страницы оценки\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AssessmentPage = () => {\r\n  const navigate = useNavigate();\r\n\r\n  // Массив вопросов (в примере будет 3 вопроса, для полноты надо 25)\r\n  const questions = [\r\n    {\r\n      question: 'Какой язык программирования является самым популярным?',\r\n      answers: ['JavaScript', 'Python', 'C++'],\r\n      correct: 'JavaScript',\r\n    },\r\n    {\r\n      question: 'Какая столица Франции?',\r\n      answers: ['Лондон', 'Париж', 'Берлин'],\r\n      correct: 'Париж',\r\n    },\r\n    {\r\n      question: 'Какое из этих чисел четное?',\r\n      answers: ['1', '2', '3'],\r\n      correct: '2',\r\n    },\r\n  ];\r\n\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState('');\r\n  const [score, setScore] = useState(0);\r\n\r\n  const shuffleAnswers = (answers) => {\r\n    return answers.sort(() => Math.random() - 0.5);\r\n  };\r\n\r\n  const handleAnswerSelect = (answer) => {\r\n    setSelectedAnswer(answer);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (selectedAnswer === questions[currentQuestion].correct) {\r\n      setScore(score + 1);\r\n    }\r\n    setSelectedAnswer('');\r\n    setCurrentQuestion(currentQuestion + 1);\r\n  };\r\n\r\n  const handleFinish = () => {\r\n    if (selectedAnswer === questions[currentQuestion].correct) {\r\n      setScore(score + 1);\r\n    }\r\n    // Здесь можно отправить данные на сервер или сохранить их в файл\r\n    alert(`Опрос завершён! Ваш результат: ${score}/${questions.length}`);\r\n    navigate('/');  // Переход на главную или нужную страницу\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Шумим ответы каждый раз при переходе на новый вопрос\r\n    shuffleAnswers(questions[currentQuestion]?.answers);\r\n  }, [currentQuestion]);\r\n\r\n  return (\r\n    <div className=\"assessment-container\">\r\n      <h2>{questions[currentQuestion]?.question}</h2>\r\n      {questions[currentQuestion]?.answers.map((answer, index) => (\r\n        <button\r\n          key={index}\r\n          className={`answer-btn ${selectedAnswer === answer ? 'selected' : ''}`}\r\n          onClick={() => handleAnswerSelect(answer)}\r\n        >\r\n          {answer}\r\n        </button>\r\n      ))}\r\n      <div>\r\n        {currentQuestion === questions.length - 1 ? (\r\n          <button className=\"btn red-btn\" onClick={handleFinish}>Завершить опрос</button>\r\n        ) : (\r\n          <button className=\"btn red-btn\" onClick={handleNext}>Далее</button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssessmentPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}