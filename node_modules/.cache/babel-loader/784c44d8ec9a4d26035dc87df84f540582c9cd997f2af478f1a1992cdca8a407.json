{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shapeless\\\\Desktop\\\\miniapp\\\\src\\\\AssessmentPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport surnames from './components/autosuggest/surname.json';\nimport firstnames from './components/autosuggest/firstname.json';\nimport patronymics from './components/autosuggest/lastname.json';\nimport backgroundImage from './components/background.png';\nimport logo from './components/logo.png';\nimport './AssessmentPage.css'; // Файл стилей с новыми классами\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AssessmentPage() {\n  _s();\n  // ------ 1) Состояния для ФИО ------\n  const [surnameValue, setSurnameValue] = useState('');\n  const [surnameSuggestions, setSurnameSuggestions] = useState([]);\n  // Преобразуем JSON для фамилий (примерно как было)\n  const surnameList = surnames.map(item => item.male || item.female);\n  const [firstNameValue, setFirstNameValue] = useState('');\n  const [firstNameSuggestions, setFirstNameSuggestions] = useState([]);\n  const firstNameList = firstnames.map(item => typeof item === 'string' ? item : item.firstName || item.name);\n  const [patronymicValue, setPatronymicValue] = useState('');\n  const [patronymicSuggestions, setPatronymicSuggestions] = useState([]);\n  const patronymicList = patronymics.map(item => typeof item === 'string' ? item : item.patronymic || item.name);\n\n  // Функции для Autosuggest\n  const getSurnameSuggestions = value => {\n    const trimmed = value.trim().toLowerCase();\n    if (trimmed.length < 2) return [];\n    return surnameList.filter(s => s.toLowerCase().startsWith(trimmed));\n  };\n  const getFirstNameSuggestions = value => {\n    const trimmed = value.trim().toLowerCase();\n    if (trimmed.length < 2) return [];\n    return firstNameList.filter(s => s.toLowerCase().startsWith(trimmed));\n  };\n  const getPatronymicSuggestions = value => {\n    const trimmed = value.trim().toLowerCase();\n    if (trimmed.length < 2) return [];\n    return patronymicList.filter(s => s.toLowerCase().startsWith(trimmed));\n  };\n\n  // inputProps для Autosuggest\n  const surnameInputProps = {\n    placeholder: 'Введите фамилию',\n    value: surnameValue,\n    onChange: (e, {\n      newValue\n    }) => setSurnameValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase()),\n    autoComplete: 'off'\n  };\n  const firstNameInputProps = {\n    placeholder: 'Введите имя',\n    value: firstNameValue,\n    onChange: (e, {\n      newValue\n    }) => setFirstNameValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase()),\n    autoComplete: 'off'\n  };\n  const patronymicInputProps = {\n    placeholder: 'Введите отчество',\n    value: patronymicValue,\n    onChange: (e, {\n      newValue\n    }) => setPatronymicValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase()),\n    autoComplete: 'off'\n  };\n\n  // ------ 2) Логика начала опроса ------\n  const [isStarted, setIsStarted] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleStart = () => {\n    if (!surnameValue.trim() || !firstNameValue.trim() || !patronymicValue.trim()) {\n      setErrorMessage('Пожалуйста, заполните все поля.');\n      return;\n    }\n    setErrorMessage('');\n    setIsStarted(true);\n  };\n\n  // ------ 3) Массив вопросов (пример на 2 вопроса) ------\n  const questions = [{\n    question: '1. Какой формат работы вам ближе?',\n    answers: ['Когда можно детально разобраться в процессах и построить устойчивую систему.', 'Когда задачи достаточно разнообразны и требуют гибкого подхода.', 'Когда есть чёткий алгоритм действий и понятный конечный результат.']\n  }, {\n    question: '2. Если коллега допустил серьёзную ошибку...',\n    answers: ['Понять, что пошло не так...', 'В первую очередь скорректировать...', 'Сделать выводы для себя...']\n  }\n  // ... добавьте оставшиеся 23 вопроса при необходимости\n  ];\n\n  // ------ 4) Процесс опроса ------\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [isFinished, setIsFinished] = useState(false);\n\n  // Для плавной анимации исчезновения\n  const [fadeTransition, setFadeTransition] = useState(false);\n\n  // Параллакс (если нужно)\n  const [offsetY, setOffsetY] = useState(0);\n  useEffect(() => {\n    const handleScroll = () => setOffsetY(window.pageYOffset);\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  // Перемешиваем варианты ответов при каждом новом вопросе\n  const [shuffledAnswers, setShuffledAnswers] = useState([]);\n  useEffect(() => {\n    if (isStarted && currentQuestion < questions.length) {\n      const shuffled = [...questions[currentQuestion].answers].sort(() => Math.random() - 0.5);\n      setShuffledAnswers(shuffled);\n      setSelectedAnswer('');\n    }\n  }, [currentQuestion, isStarted]);\n  const handleNextQuestion = () => {\n    if (!selectedAnswer) {\n      setErrorMessage('Выберите один из вариантов');\n      return;\n    }\n    setErrorMessage('');\n    setUserAnswers(prev => [...prev, selectedAnswer]);\n\n    // Анимация плавного исчезновения\n    setFadeTransition(true);\n    setTimeout(() => {\n      if (currentQuestion < questions.length - 1) {\n        setCurrentQuestion(prev => prev + 1);\n      } else {\n        setIsFinished(true);\n        console.log('Ответы пользователя:', [...userAnswers, selectedAnswer]);\n      }\n      setFadeTransition(false);\n    }, 400);\n  };\n\n  // Когда опрос завершён\n  if (isFinished) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ap-container\",\n      style: {\n        backgroundImage: `url(${backgroundImage})`,\n        backgroundPositionY: `${offsetY * 0.5}px`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\u0421\\u043F\\u0430\\u0441\\u0438\\u0431\\u043E \\u0437\\u0430 \\u043F\\u0440\\u043E\\u0445\\u043E\\u0436\\u0434\\u0435\\u043D\\u0438\\u0435 \\u043E\\u043F\\u0440\\u043E\\u0441\\u0430, \", firstNameValue, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u041C\\u044B \\u0441\\u0432\\u044F\\u0436\\u0435\\u043C\\u0441\\u044F, \\u0435\\u0441\\u043B\\u0438 \\u0432\\u0430\\u0448\\u0438 \\u0432\\u0437\\u0433\\u043B\\u044F\\u0434\\u044B \\u0441\\u043E\\u0432\\u043F\\u0430\\u0434\\u0430\\u044E\\u0442 \\u0441 \\u043D\\u0430\\u0448\\u0438\\u043C\\u0438.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Если опрос начат и есть вопросы\n  if (isStarted && currentQuestion < questions.length) {\n    const questionObj = questions[currentQuestion];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ap-container\",\n      style: {\n        backgroundImage: `url(${backgroundImage})`,\n        backgroundPositionY: `${offsetY * 0.5}px`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ap-top-btn-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ap-top-btn\",\n          onClick: handleNextQuestion,\n          disabled: !selectedAnswer,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            viewBox: \"0 0 24 24\",\n            width: \"24\",\n            height: \"24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M12 4l8 8-8 8\",\n              fill: \"none\",\n              stroke: \"#fff\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ap-question-block\",\n        style: {\n          opacity: fadeTransition ? 0 : 1,\n          transition: 'opacity 0.4s'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"ap-question-text\",\n          children: questionObj.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ap-answers-block\",\n          children: shuffledAnswers.map((answer, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `ap-answer-btn ${selectedAnswer === answer ? 'ap-answer-selected' : ''}`,\n            onClick: () => setSelectedAnswer(answer),\n            children: answer\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ap-error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Иначе — форма ввода ФИО\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ap-container\",\n    style: {\n      backgroundImage: `url(${backgroundImage})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ap-top-btn-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ap-top-btn\",\n        onClick: handleStart,\n        disabled: !surnameValue || !firstNameValue || !patronymicValue,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 24 24\",\n          width: \"24\",\n          height: \"24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M12 4l8 8-8 8\",\n            fill: \"none\",\n            stroke: \"#fff\",\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ap-logo\",\n      style: {\n        backgroundImage: `url(${logo})`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"ap-fio-title\",\n      children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448\\u0438 \\u0424\\u0418\\u041E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"ap-error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ap-name-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ap-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Autosuggest, {\n          suggestions: surnameSuggestions,\n          onSuggestionsFetchRequested: ({\n            value\n          }) => setSurnameSuggestions(getSurnameSuggestions(value)),\n          onSuggestionsClearRequested: () => setSurnameSuggestions([]),\n          getSuggestionValue: s => s,\n          renderSuggestion: s => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: s\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 36\n          }, this),\n          inputProps: surnameInputProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ap-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u0418\\u043C\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Autosuggest, {\n          suggestions: firstNameSuggestions,\n          onSuggestionsFetchRequested: ({\n            value\n          }) => setFirstNameSuggestions(getFirstNameSuggestions(value)),\n          onSuggestionsClearRequested: () => setFirstNameSuggestions([]),\n          getSuggestionValue: s => s,\n          renderSuggestion: s => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: s\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 36\n          }, this),\n          inputProps: firstNameInputProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ap-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u041E\\u0442\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Autosuggest, {\n          suggestions: patronymicSuggestions,\n          onSuggestionsFetchRequested: ({\n            value\n          }) => setPatronymicSuggestions(getPatronymicSuggestions(value)),\n          onSuggestionsClearRequested: () => setPatronymicSuggestions([]),\n          getSuggestionValue: s => s,\n          renderSuggestion: s => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: s\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 36\n          }, this),\n          inputProps: patronymicInputProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n}\n_s(AssessmentPage, \"viTzqHdBGtAd25xSOZ9KLdWPdRg=\");\n_c = AssessmentPage;\nexport default AssessmentPage;\nvar _c;\n$RefreshReg$(_c, \"AssessmentPage\");","map":{"version":3,"names":["React","useState","useEffect","Autosuggest","surnames","firstnames","patronymics","backgroundImage","logo","jsxDEV","_jsxDEV","AssessmentPage","_s","surnameValue","setSurnameValue","surnameSuggestions","setSurnameSuggestions","surnameList","map","item","male","female","firstNameValue","setFirstNameValue","firstNameSuggestions","setFirstNameSuggestions","firstNameList","firstName","name","patronymicValue","setPatronymicValue","patronymicSuggestions","setPatronymicSuggestions","patronymicList","patronymic","getSurnameSuggestions","value","trimmed","trim","toLowerCase","length","filter","s","startsWith","getFirstNameSuggestions","getPatronymicSuggestions","surnameInputProps","placeholder","onChange","e","newValue","charAt","toUpperCase","slice","autoComplete","firstNameInputProps","patronymicInputProps","isStarted","setIsStarted","errorMessage","setErrorMessage","handleStart","questions","question","answers","currentQuestion","setCurrentQuestion","selectedAnswer","setSelectedAnswer","userAnswers","setUserAnswers","isFinished","setIsFinished","fadeTransition","setFadeTransition","offsetY","setOffsetY","handleScroll","window","pageYOffset","addEventListener","removeEventListener","shuffledAnswers","setShuffledAnswers","shuffled","sort","Math","random","handleNextQuestion","prev","setTimeout","console","log","className","style","backgroundPositionY","children","fileName","_jsxFileName","lineNumber","columnNumber","questionObj","onClick","disabled","xmlns","viewBox","width","height","d","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","opacity","transition","answer","idx","suggestions","onSuggestionsFetchRequested","onSuggestionsClearRequested","getSuggestionValue","renderSuggestion","inputProps","_c","$RefreshReg$"],"sources":["C:/Users/shapeless/Desktop/miniapp/src/AssessmentPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport surnames from './components/autosuggest/surname.json';\r\nimport firstnames from './components/autosuggest/firstname.json';\r\nimport patronymics from './components/autosuggest/lastname.json';\r\n\r\nimport backgroundImage from './components/background.png';\r\nimport logo from './components/logo.png';\r\n\r\nimport './AssessmentPage.css'; // Файл стилей с новыми классами\r\n\r\nfunction AssessmentPage() {\r\n  // ------ 1) Состояния для ФИО ------\r\n  const [surnameValue, setSurnameValue] = useState('');\r\n  const [surnameSuggestions, setSurnameSuggestions] = useState([]);\r\n  // Преобразуем JSON для фамилий (примерно как было)\r\n  const surnameList = surnames.map(item => item.male || item.female);\r\n\r\n  const [firstNameValue, setFirstNameValue] = useState('');\r\n  const [firstNameSuggestions, setFirstNameSuggestions] = useState([]);\r\n  const firstNameList = firstnames.map(item =>\r\n    typeof item === 'string' ? item : (item.firstName || item.name)\r\n  );\r\n\r\n  const [patronymicValue, setPatronymicValue] = useState('');\r\n  const [patronymicSuggestions, setPatronymicSuggestions] = useState([]);\r\n  const patronymicList = patronymics.map(item =>\r\n    typeof item === 'string' ? item : (item.patronymic || item.name)\r\n  );\r\n\r\n  // Функции для Autosuggest\r\n  const getSurnameSuggestions = (value) => {\r\n    const trimmed = value.trim().toLowerCase();\r\n    if (trimmed.length < 2) return [];\r\n    return surnameList.filter(s => s.toLowerCase().startsWith(trimmed));\r\n  };\r\n  const getFirstNameSuggestions = (value) => {\r\n    const trimmed = value.trim().toLowerCase();\r\n    if (trimmed.length < 2) return [];\r\n    return firstNameList.filter(s => s.toLowerCase().startsWith(trimmed));\r\n  };\r\n  const getPatronymicSuggestions = (value) => {\r\n    const trimmed = value.trim().toLowerCase();\r\n    if (trimmed.length < 2) return [];\r\n    return patronymicList.filter(s => s.toLowerCase().startsWith(trimmed));\r\n  };\r\n\r\n  // inputProps для Autosuggest\r\n  const surnameInputProps = {\r\n    placeholder: 'Введите фамилию',\r\n    value: surnameValue,\r\n    onChange: (e, { newValue }) =>\r\n      setSurnameValue(\r\n        newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase()\r\n      ),\r\n    autoComplete: 'off'\r\n  };\r\n  const firstNameInputProps = {\r\n    placeholder: 'Введите имя',\r\n    value: firstNameValue,\r\n    onChange: (e, { newValue }) =>\r\n      setFirstNameValue(\r\n        newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase()\r\n      ),\r\n    autoComplete: 'off'\r\n  };\r\n  const patronymicInputProps = {\r\n    placeholder: 'Введите отчество',\r\n    value: patronymicValue,\r\n    onChange: (e, { newValue }) =>\r\n      setPatronymicValue(\r\n        newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase()\r\n      ),\r\n    autoComplete: 'off'\r\n  };\r\n\r\n  // ------ 2) Логика начала опроса ------\r\n  const [isStarted, setIsStarted] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleStart = () => {\r\n    if (!surnameValue.trim() || !firstNameValue.trim() || !patronymicValue.trim()) {\r\n      setErrorMessage('Пожалуйста, заполните все поля.');\r\n      return;\r\n    }\r\n    setErrorMessage('');\r\n    setIsStarted(true);\r\n  };\r\n\r\n  // ------ 3) Массив вопросов (пример на 2 вопроса) ------\r\n  const questions = [\r\n    {\r\n      question: '1. Какой формат работы вам ближе?',\r\n      answers: [\r\n        'Когда можно детально разобраться в процессах и построить устойчивую систему.',\r\n        'Когда задачи достаточно разнообразны и требуют гибкого подхода.',\r\n        'Когда есть чёткий алгоритм действий и понятный конечный результат.'\r\n      ],\r\n    },\r\n    {\r\n      question: '2. Если коллега допустил серьёзную ошибку...',\r\n      answers: [\r\n        'Понять, что пошло не так...',\r\n        'В первую очередь скорректировать...',\r\n        'Сделать выводы для себя...'\r\n      ],\r\n    },\r\n    // ... добавьте оставшиеся 23 вопроса при необходимости\r\n  ];\r\n\r\n  // ------ 4) Процесс опроса ------\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState('');\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n  const [isFinished, setIsFinished] = useState(false);\r\n\r\n  // Для плавной анимации исчезновения\r\n  const [fadeTransition, setFadeTransition] = useState(false);\r\n\r\n  // Параллакс (если нужно)\r\n  const [offsetY, setOffsetY] = useState(0);\r\n  useEffect(() => {\r\n    const handleScroll = () => setOffsetY(window.pageYOffset);\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, []);\r\n\r\n  // Перемешиваем варианты ответов при каждом новом вопросе\r\n  const [shuffledAnswers, setShuffledAnswers] = useState([]);\r\n  useEffect(() => {\r\n    if (isStarted && currentQuestion < questions.length) {\r\n      const shuffled = [...questions[currentQuestion].answers].sort(() => Math.random() - 0.5);\r\n      setShuffledAnswers(shuffled);\r\n      setSelectedAnswer('');\r\n    }\r\n  }, [currentQuestion, isStarted]);\r\n\r\n  const handleNextQuestion = () => {\r\n    if (!selectedAnswer) {\r\n      setErrorMessage('Выберите один из вариантов');\r\n      return;\r\n    }\r\n    setErrorMessage('');\r\n    setUserAnswers(prev => [...prev, selectedAnswer]);\r\n\r\n    // Анимация плавного исчезновения\r\n    setFadeTransition(true);\r\n    setTimeout(() => {\r\n      if (currentQuestion < questions.length - 1) {\r\n        setCurrentQuestion(prev => prev + 1);\r\n      } else {\r\n        setIsFinished(true);\r\n        console.log('Ответы пользователя:', [...userAnswers, selectedAnswer]);\r\n      }\r\n      setFadeTransition(false);\r\n    }, 400);\r\n  };\r\n\r\n  // Когда опрос завершён\r\n  if (isFinished) {\r\n    return (\r\n      <div\r\n        className=\"ap-container\"\r\n        style={{\r\n          backgroundImage: `url(${backgroundImage})`,\r\n          backgroundPositionY: `${offsetY * 0.5}px`\r\n        }}\r\n      >\r\n        <h2>Спасибо за прохождение опроса, {firstNameValue}!</h2>\r\n        <p>Мы свяжемся, если ваши взгляды совпадают с нашими.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Если опрос начат и есть вопросы\r\n  if (isStarted && currentQuestion < questions.length) {\r\n    const questionObj = questions[currentQuestion];\r\n    return (\r\n      <div\r\n        className=\"ap-container\"\r\n        style={{\r\n          backgroundImage: `url(${backgroundImage})`,\r\n          backgroundPositionY: `${offsetY * 0.5}px`\r\n        }}\r\n      >\r\n        {/* Кнопка-стрелка в правом верхнем углу */}\r\n        <div className=\"ap-top-btn-container\">\r\n          <button\r\n            className=\"ap-top-btn\"\r\n            onClick={handleNextQuestion}\r\n            disabled={!selectedAnswer}\r\n          >\r\n            {/* SVG-стрелка вправо */}\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n                 viewBox=\"0 0 24 24\"\r\n                 width=\"24\"\r\n                 height=\"24\">\r\n              <path\r\n                d=\"M12 4l8 8-8 8\"\r\n                fill=\"none\"\r\n                stroke=\"#fff\"\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        <div\r\n          className=\"ap-question-block\"\r\n          style={{ opacity: fadeTransition ? 0 : 1, transition: 'opacity 0.4s' }}\r\n        >\r\n          <h2 className=\"ap-question-text\">{questionObj.question}</h2>\r\n\r\n          <div className=\"ap-answers-block\">\r\n            {shuffledAnswers.map((answer, idx) => (\r\n              <button\r\n                key={idx}\r\n                className={`ap-answer-btn ${selectedAnswer === answer ? 'ap-answer-selected' : ''}`}\r\n                onClick={() => setSelectedAnswer(answer)}\r\n              >\r\n                {answer}\r\n              </button>\r\n            ))}\r\n          </div>\r\n\r\n          {errorMessage && <p className=\"ap-error-message\">{errorMessage}</p>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Иначе — форма ввода ФИО\r\n  return (\r\n    <div className=\"ap-container\" style={{ backgroundImage: `url(${backgroundImage})` }}>\r\n      {/* Кнопка-стрелка \"Начать опрос\" (вверху справа) */}\r\n      <div className=\"ap-top-btn-container\">\r\n        <button\r\n          className=\"ap-top-btn\"\r\n          onClick={handleStart}\r\n          disabled={!surnameValue || !firstNameValue || !patronymicValue}\r\n        >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          >\r\n            <path\r\n              d=\"M12 4l8 8-8 8\"\r\n              fill=\"none\"\r\n              stroke=\"#fff\"\r\n              strokeWidth=\"2\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n\r\n      {/* Логотип, смещаем чуть ниже, чтобы не перекрывался */}\r\n      <div className=\"ap-logo\" style={{ backgroundImage: `url(${logo})` }} />\r\n\r\n      <h2 className=\"ap-fio-title\">Введите ваши ФИО</h2>\r\n      {errorMessage && <p className=\"ap-error-message\">{errorMessage}</p>}\r\n\r\n      <form className=\"ap-name-form\">\r\n        <div className=\"ap-input-container\">\r\n          <label>Фамилия</label>\r\n          <Autosuggest\r\n            suggestions={surnameSuggestions}\r\n            onSuggestionsFetchRequested={({ value }) =>\r\n              setSurnameSuggestions(getSurnameSuggestions(value))\r\n            }\r\n            onSuggestionsClearRequested={() => setSurnameSuggestions([])}\r\n            getSuggestionValue={s => s}\r\n            renderSuggestion={s => <div>{s}</div>}\r\n            inputProps={surnameInputProps}\r\n          />\r\n        </div>\r\n        <div className=\"ap-input-container\">\r\n          <label>Имя</label>\r\n          <Autosuggest\r\n            suggestions={firstNameSuggestions}\r\n            onSuggestionsFetchRequested={({ value }) =>\r\n              setFirstNameSuggestions(getFirstNameSuggestions(value))\r\n            }\r\n            onSuggestionsClearRequested={() => setFirstNameSuggestions([])}\r\n            getSuggestionValue={s => s}\r\n            renderSuggestion={s => <div>{s}</div>}\r\n            inputProps={firstNameInputProps}\r\n          />\r\n        </div>\r\n        <div className=\"ap-input-container\">\r\n          <label>Отчество</label>\r\n          <Autosuggest\r\n            suggestions={patronymicSuggestions}\r\n            onSuggestionsFetchRequested={({ value }) =>\r\n              setPatronymicSuggestions(getPatronymicSuggestions(value))\r\n            }\r\n            onSuggestionsClearRequested={() => setPatronymicSuggestions([])}\r\n            getSuggestionValue={s => s}\r\n            renderSuggestion={s => <div>{s}</div>}\r\n            inputProps={patronymicInputProps}\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AssessmentPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}