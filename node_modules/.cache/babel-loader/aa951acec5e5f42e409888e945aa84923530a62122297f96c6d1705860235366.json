{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shapeless\\\\Desktop\\\\miniapp\\\\src\\\\FeedbackPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Autosuggest from 'react-autosuggest';\nimport partners from './components/autosuggest/partners.json';\nimport speakers from './components/autosuggest/speakers.json';\nimport './FeedbackPage.css';\nimport logo from './components/logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedbackPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [partner, setPartner] = useState('');\n  const [partnerSuggestions, setPartnerSuggestions] = useState([]);\n  const [speakersList, setSpeakersList] = useState([{\n    fullName: '',\n    id: 1\n  }]);\n  const [positiveQualities, setPositiveQualities] = useState([]);\n  const [negativeQualities, setNegativeQualities] = useState([]);\n  const [usefulness, setUsefulness] = useState('');\n  const [brightThoughts, setBrightThoughts] = useState('');\n  const [additionalItems, setAdditionalItems] = useState([]);\n  const [impression, setImpression] = useState('');\n  const [currentQuestion, setCurrentQuestion] = useState(0); // Для отслеживания текущего вопроса\n  const [isFinished, setIsFinished] = useState(false);\n\n  // Функция для фильтрации предложений по введенному значению\n  const getPartnerSuggestions = value => {\n    const trimmedValue = value && typeof value === 'string' ? value.trim().toLowerCase() : ''; // Проверка на строку\n    if (!trimmedValue || trimmedValue.length < 2) {\n      return [];\n    }\n    return partners.filter(partner => partner.toLowerCase().includes(trimmedValue));\n  };\n\n  // Обработчик для поиска предложений\n  const onSuggestionsFetchRequested = ({\n    value\n  }) => {\n    setPartnerSuggestions(getPartnerSuggestions(value));\n  };\n\n  // Очистка предложений\n  const onSuggestionsClearRequested = () => {\n    setPartnerSuggestions([]);\n  };\n\n  // Обработчик изменения значения ввода\n  const onPartnerChange = (event, {\n    newValue\n  }) => {\n    setPartner(newValue);\n    // Очистить состояние предложений для спикеров при изменении партнера\n    setSpeakersList([{\n      fullName: '',\n      id: 1\n    }]);\n  };\n\n  // Рендеринг предложений для автозаполнения\n  const renderSuggestion = suggestion => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: suggestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  };\n  const partnerInputProps = {\n    placeholder: 'Введите название партнера',\n    value: partner,\n    onChange: onPartnerChange,\n    style: {}\n  };\n\n  // Функция для добавления новых спикеров\n  const handleAddSpeaker = () => {\n    setSpeakersList([...speakersList, {\n      fullName: '',\n      id: speakersList.length + 1\n    }]);\n  };\n\n  // Функция для изменения фамилии спикера\n  const handleSpeakerChange = (e, index) => {\n    const updatedSpeakers = [...speakersList];\n    updatedSpeakers[index].fullName = e.target.value || ''; // Гарантируем, что значение всегда строка\n    setSpeakersList(updatedSpeakers);\n  };\n\n  // Функция для фильтрации спикеров\n  const getSpeakerSuggestions = value => {\n    const trimmedValue = value && typeof value === 'string' ? value.trim().toLowerCase() : ''; // Проверка на строку\n    if (!trimmedValue || trimmedValue.length < 2) {\n      return [];\n    }\n    return speakers.filter(speaker => speaker.toLowerCase().includes(trimmedValue));\n  };\n  const handleSpeakerSuggestionsFetchRequested = (index, {\n    value\n  }) => {\n    const updatedSpeakers = [...speakersList];\n    updatedSpeakers[index].suggestions = getSpeakerSuggestions(value);\n    setSpeakersList(updatedSpeakers);\n  };\n  const handleSpeakerSuggestionsClearRequested = index => {\n    const updatedSpeakers = [...speakersList];\n    updatedSpeakers[index].suggestions = [];\n    setSpeakersList(updatedSpeakers);\n  };\n\n  // Оценка качеств спикера\n  const handleQualityChange = (quality, isPositive) => {\n    if (isPositive) {\n      setPositiveQualities(prev => [...prev, quality]);\n      setNegativeQualities(prev => prev.filter(item => item !== quality)); // Убираем из отрицательных\n    } else {\n      setNegativeQualities(prev => [...prev, quality]);\n      setPositiveQualities(prev => prev.filter(item => item !== quality)); // Убираем из положительных\n    }\n  };\n  const questions = [{\n    type: 'input',\n    label: 'Название партнера',\n    renderInput: () => /*#__PURE__*/_jsxDEV(Autosuggest, {\n      suggestions: partnerSuggestions,\n      onSuggestionsFetchRequested: onSuggestionsFetchRequested,\n      onSuggestionsClearRequested: onSuggestionsClearRequested,\n      getSuggestionValue: suggestion => suggestion,\n      renderSuggestion: renderSuggestion,\n      inputProps: partnerInputProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)\n  }, {\n    type: 'speakers',\n    label: 'Фамилия и имя спикера',\n    renderSpeakers: () => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: speakersList.map((speaker, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"subquestion-name\",\n          children: [\"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F \\u0438 \\u0438\\u043C\\u044F \\u0441\\u043F\\u0438\\u043A\\u0435\\u0440\\u0430 \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Autosuggest, {\n          suggestions: speaker.suggestions || [],\n          onSuggestionsFetchRequested: params => handleSpeakerSuggestionsFetchRequested(index, params),\n          onSuggestionsClearRequested: () => handleSpeakerSuggestionsClearRequested(index),\n          getSuggestionValue: suggestion => suggestion,\n          renderSuggestion: suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: suggestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 51\n          }, this),\n          inputProps: {\n            value: speaker.fullName,\n            // Обновляем поле с выбранным значением\n            onChange: e => handleSpeakerChange(e, index),\n            // При изменении обновляется значение\n            placeholder: 'Введите фамилию и имя'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this), index === speakersList.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddSpeaker,\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0435\\u0449\\u0435 \\u0441\\u043F\\u0438\\u043A\\u0435\\u0440\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)\n  }, {\n    type: 'qualities',\n    label: 'Оценка качеств спикера',\n    renderQualities: () => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quality-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleQualityChange('Экспертный', true),\n          className: positiveQualities.includes('Экспертный') ? 'green' : '',\n          children: \"\\u042D\\u043A\\u0441\\u043F\\u0435\\u0440\\u0442\\u043D\\u044B\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleQualityChange('Некомпетентный', false),\n          className: negativeQualities.includes('Некомпетентный') ? 'red' : '',\n          children: \"\\u041D\\u0435\\u043A\\u043E\\u043C\\u043F\\u0435\\u0442\\u0435\\u043D\\u0442\\u043D\\u044B\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quality-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleQualityChange('Энергичный', true),\n          className: positiveQualities.includes('Энергичный') ? 'green' : '',\n          children: \"\\u042D\\u043D\\u0435\\u0440\\u0433\\u0438\\u0447\\u043D\\u044B\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleQualityChange('Пассивный', false),\n          className: negativeQualities.includes('Пассивный') ? 'red' : '',\n          children: \"\\u041F\\u0430\\u0441\\u0441\\u0438\\u0432\\u043D\\u044B\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quality-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleQualityChange('Мотивирующий', true),\n          className: positiveQualities.includes('Мотивирующий') ? 'green' : '',\n          children: \"\\u041C\\u043E\\u0442\\u0438\\u0432\\u0438\\u0440\\u0443\\u044E\\u0449\\u0438\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleQualityChange('Невдохновляющий', false),\n          className: negativeQualities.includes('Невдохновляющий') ? 'red' : '',\n          children: \"\\u041D\\u0435\\u0432\\u0434\\u043E\\u0445\\u043D\\u043E\\u0432\\u043B\\u044F\\u044E\\u0449\\u0438\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quality-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleQualityChange('Харизматичный', true),\n          className: positiveQualities.includes('Харизматичный') ? 'green' : '',\n          children: \"\\u0425\\u0430\\u0440\\u0438\\u0437\\u043C\\u0430\\u0442\\u0438\\u0447\\u043D\\u044B\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleQualityChange('Душный', false),\n          className: negativeQualities.includes('Душный') ? 'red' : '',\n          children: \"\\u0414\\u0443\\u0448\\u043D\\u044B\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quality-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleQualityChange('Доступно доносит информацию', true),\n          className: positiveQualities.includes('Доступно доносит информацию') ? 'green' : '',\n          children: \"\\u0414\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u043E \\u0434\\u043E\\u043D\\u043E\\u0441\\u0438\\u0442 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleQualityChange('Говорит сложными терминами', false),\n          className: negativeQualities.includes('Говорит сложными терминами') ? 'red' : '',\n          children: \"\\u0413\\u043E\\u0432\\u043E\\u0440\\u0438\\u0442 \\u0441\\u043B\\u043E\\u0436\\u043D\\u044B\\u043C\\u0438 \\u0442\\u0435\\u0440\\u043C\\u0438\\u043D\\u0430\\u043C\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this)\n  }];\n\n  // Функция для перехода к следующему вопросу\n  const handleNext = () => {\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      handleFinish();\n    }\n  };\n\n  // Функция для завершения опроса и отправки данных\n  const handleFinish = async () => {\n    const data = {\n      partner,\n      dateTime: new Date().toISOString(),\n      speakers: speakersList.map(speaker => speaker.fullName).join(', '),\n      positiveQualities,\n      negativeQualities,\n      usefulness,\n      brightThoughts,\n      additionalItems,\n      impression\n    };\n    try {\n      const response = await fetch(\"https://yourserver/api/save\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      if (response.ok) {\n        setIsFinished(true);\n        alert('Спасибо за участие в опросе!');\n      } else {\n        alert('Ошибка при сохранении данных');\n      }\n    } catch (error) {\n      console.error('Ошибка:', error);\n      alert('Ошибка соединения с сервером');\n    }\n  };\n  const currentQuestionData = questions[currentQuestion];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedback-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"name-vote\",\n      children: \"\\u041E\\u0446\\u0435\\u043D\\u043A\\u0430 \\u043C\\u0435\\u0440\\u043E\\u043F\\u0440\\u0438\\u044F\\u0442\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), currentQuestionData.type === 'input' && currentQuestionData.renderInput(), currentQuestionData.type === 'speakers' && currentQuestionData.renderSpeakers(), currentQuestionData.type === 'qualities' && currentQuestionData.renderQualities(), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"next-button\",\n      onClick: handleNext,\n      disabled: isFinished,\n      children: currentQuestion === questions.length - 1 ? 'Завершить опрос' : 'Далее'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 5\n  }, this);\n};\n_s(FeedbackPage, \"P1L7EIxzK9CCis2D1ose1Fh98+M=\", false, function () {\n  return [useNavigate];\n});\n_c = FeedbackPage;\nexport default FeedbackPage;\nvar _c;\n$RefreshReg$(_c, \"FeedbackPage\");","map":{"version":3,"names":["React","useState","useNavigate","Autosuggest","partners","speakers","logo","jsxDEV","_jsxDEV","FeedbackPage","_s","navigate","partner","setPartner","partnerSuggestions","setPartnerSuggestions","speakersList","setSpeakersList","fullName","id","positiveQualities","setPositiveQualities","negativeQualities","setNegativeQualities","usefulness","setUsefulness","brightThoughts","setBrightThoughts","additionalItems","setAdditionalItems","impression","setImpression","currentQuestion","setCurrentQuestion","isFinished","setIsFinished","getPartnerSuggestions","value","trimmedValue","trim","toLowerCase","length","filter","includes","onSuggestionsFetchRequested","onSuggestionsClearRequested","onPartnerChange","event","newValue","renderSuggestion","suggestion","children","fileName","_jsxFileName","lineNumber","columnNumber","partnerInputProps","placeholder","onChange","style","handleAddSpeaker","handleSpeakerChange","e","index","updatedSpeakers","target","getSpeakerSuggestions","speaker","handleSpeakerSuggestionsFetchRequested","suggestions","handleSpeakerSuggestionsClearRequested","handleQualityChange","quality","isPositive","prev","item","questions","type","label","renderInput","getSuggestionValue","inputProps","renderSpeakers","map","className","params","onClick","renderQualities","handleNext","handleFinish","data","dateTime","Date","toISOString","join","response","fetch","method","headers","body","JSON","stringify","ok","alert","error","console","currentQuestionData","disabled","_c","$RefreshReg$"],"sources":["C:/Users/shapeless/Desktop/miniapp/src/FeedbackPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport partners from './components/autosuggest/partners.json';\r\nimport speakers from './components/autosuggest/speakers.json';\r\nimport './FeedbackPage.css';\r\nimport logo from './components/logo.png';\r\n\r\nconst FeedbackPage = () => {\r\n  const navigate = useNavigate();\r\n  const [partner, setPartner] = useState('');\r\n  const [partnerSuggestions, setPartnerSuggestions] = useState([]);\r\n  const [speakersList, setSpeakersList] = useState([{ fullName: '', id: 1 }]);\r\n  const [positiveQualities, setPositiveQualities] = useState([]);\r\n  const [negativeQualities, setNegativeQualities] = useState([]);\r\n  const [usefulness, setUsefulness] = useState('');\r\n  const [brightThoughts, setBrightThoughts] = useState('');\r\n  const [additionalItems, setAdditionalItems] = useState([]);\r\n  const [impression, setImpression] = useState('');\r\n  const [currentQuestion, setCurrentQuestion] = useState(0); // Для отслеживания текущего вопроса\r\n  const [isFinished, setIsFinished] = useState(false);\r\n\r\n  // Функция для фильтрации предложений по введенному значению\r\n  const getPartnerSuggestions = (value) => {\r\n    const trimmedValue = value && typeof value === 'string' ? value.trim().toLowerCase() : ''; // Проверка на строку\r\n    if (!trimmedValue || trimmedValue.length < 2) {\r\n      return [];\r\n    }\r\n    return partners.filter((partner) =>\r\n      partner.toLowerCase().includes(trimmedValue)\r\n    );\r\n  };\r\n\r\n  // Обработчик для поиска предложений\r\n  const onSuggestionsFetchRequested = ({ value }) => {\r\n    setPartnerSuggestions(getPartnerSuggestions(value));\r\n  };\r\n\r\n  // Очистка предложений\r\n  const onSuggestionsClearRequested = () => {\r\n    setPartnerSuggestions([]);\r\n  };\r\n\r\n  // Обработчик изменения значения ввода\r\n  const onPartnerChange = (event, { newValue }) => {\r\n    setPartner(newValue);\r\n    // Очистить состояние предложений для спикеров при изменении партнера\r\n    setSpeakersList([{ fullName: '', id: 1 }]);\r\n  };\r\n\r\n  // Рендеринг предложений для автозаполнения\r\n  const renderSuggestion = (suggestion) => {\r\n    return <div>{suggestion}</div>;\r\n  };\r\n\r\n  const partnerInputProps = {\r\n    placeholder: 'Введите название партнера',\r\n    value: partner,\r\n    onChange: onPartnerChange,\r\n    style: {\r\n     \r\n    }\r\n  };\r\n\r\n  // Функция для добавления новых спикеров\r\n  const handleAddSpeaker = () => {\r\n    setSpeakersList([...speakersList, { fullName: '', id: speakersList.length + 1 }]);\r\n  };\r\n\r\n  // Функция для изменения фамилии спикера\r\n  const handleSpeakerChange = (e, index) => {\r\n    const updatedSpeakers = [...speakersList];\r\n    updatedSpeakers[index].fullName = e.target.value || '';  // Гарантируем, что значение всегда строка\r\n    setSpeakersList(updatedSpeakers);\r\n  };\r\n\r\n  // Функция для фильтрации спикеров\r\n  const getSpeakerSuggestions = (value) => {\r\n    const trimmedValue = value && typeof value === 'string' ? value.trim().toLowerCase() : ''; // Проверка на строку\r\n    if (!trimmedValue || trimmedValue.length < 2) {\r\n      return [];\r\n    }\r\n    return speakers.filter((speaker) =>\r\n      speaker.toLowerCase().includes(trimmedValue)\r\n    );\r\n  };\r\n\r\n  const handleSpeakerSuggestionsFetchRequested = (index, { value }) => {\r\n    const updatedSpeakers = [...speakersList];\r\n    updatedSpeakers[index].suggestions = getSpeakerSuggestions(value);\r\n    setSpeakersList(updatedSpeakers);\r\n  };\r\n\r\n  const handleSpeakerSuggestionsClearRequested = (index) => {\r\n    const updatedSpeakers = [...speakersList];\r\n    updatedSpeakers[index].suggestions = [];\r\n    setSpeakersList(updatedSpeakers);\r\n  };\r\n\r\n  // Оценка качеств спикера\r\n  const handleQualityChange = (quality, isPositive) => {\r\n    if (isPositive) {\r\n      setPositiveQualities((prev) => [...prev, quality]);\r\n      setNegativeQualities((prev) => prev.filter((item) => item !== quality));  // Убираем из отрицательных\r\n    } else {\r\n      setNegativeQualities((prev) => [...prev, quality]);\r\n      setPositiveQualities((prev) => prev.filter((item) => item !== quality));  // Убираем из положительных\r\n    }\r\n  };\r\n\r\n  const questions = [\r\n    {\r\n      type: 'input',\r\n      label: 'Название партнера',\r\n      renderInput: () => (\r\n        <Autosuggest\r\n          suggestions={partnerSuggestions}\r\n          onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n          onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n          getSuggestionValue={(suggestion) => suggestion}\r\n          renderSuggestion={renderSuggestion}\r\n          inputProps={partnerInputProps}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      type: 'speakers',\r\n      label: 'Фамилия и имя спикера',\r\n      renderSpeakers: () => (\r\n        <div>\r\n          {speakersList.map((speaker, index) => (\r\n            <div key={index}>\r\n              <label className=\"subquestion-name\">Фамилия и имя спикера {index + 1}</label>\r\n              <Autosuggest\r\n                suggestions={speaker.suggestions || []}\r\n                onSuggestionsFetchRequested={(params) => handleSpeakerSuggestionsFetchRequested(index, params)}\r\n                onSuggestionsClearRequested={() => handleSpeakerSuggestionsClearRequested(index)}\r\n                getSuggestionValue={(suggestion) => suggestion}\r\n                renderSuggestion={(suggestion) => <div>{suggestion}</div>}\r\n                inputProps={{\r\n                  value: speaker.fullName, // Обновляем поле с выбранным значением\r\n                  onChange: (e) => handleSpeakerChange(e, index), // При изменении обновляется значение\r\n                  placeholder: 'Введите фамилию и имя',\r\n                }}\r\n              />\r\n              {index === speakersList.length - 1 && (\r\n                <button onClick={handleAddSpeaker}>Добавить еще спикера</button>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      type: 'qualities',\r\n      label: 'Оценка качеств спикера',\r\n      renderQualities: () => (\r\n        <div>\r\n          <div className=\"quality-row\">\r\n            <button\r\n              onClick={() => handleQualityChange('Экспертный', true)}\r\n              className={positiveQualities.includes('Экспертный') ? 'green' : ''}\r\n            >\r\n              Экспертный\r\n            </button>\r\n            <button\r\n              onClick={() => handleQualityChange('Некомпетентный', false)}\r\n              className={negativeQualities.includes('Некомпетентный') ? 'red' : ''}\r\n            >\r\n              Некомпетентный\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"quality-row\">\r\n            <button\r\n              onClick={() => handleQualityChange('Энергичный', true)}\r\n              className={positiveQualities.includes('Энергичный') ? 'green' : ''}\r\n            >\r\n              Энергичный\r\n            </button>\r\n            <button\r\n              onClick={() => handleQualityChange('Пассивный', false)}\r\n              className={negativeQualities.includes('Пассивный') ? 'red' : ''}\r\n            >\r\n              Пассивный\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"quality-row\">\r\n            <button\r\n              onClick={() => handleQualityChange('Мотивирующий', true)}\r\n              className={positiveQualities.includes('Мотивирующий') ? 'green' : ''}\r\n            >\r\n              Мотивирующий\r\n            </button>\r\n            <button\r\n              onClick={() => handleQualityChange('Невдохновляющий', false)}\r\n              className={negativeQualities.includes('Невдохновляющий') ? 'red' : ''}\r\n            >\r\n              Невдохновляющий\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"quality-row\">\r\n            <button\r\n              onClick={() => handleQualityChange('Харизматичный', true)}\r\n              className={positiveQualities.includes('Харизматичный') ? 'green' : ''}\r\n            >\r\n              Харизматичный\r\n            </button>\r\n            <button\r\n              onClick={() => handleQualityChange('Душный', false)}\r\n              className={negativeQualities.includes('Душный') ? 'red' : ''}\r\n            >\r\n              Душный\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"quality-row\">\r\n            <button\r\n              onClick={() => handleQualityChange('Доступно доносит информацию', true)}\r\n              className={positiveQualities.includes('Доступно доносит информацию') ? 'green' : ''}\r\n            >\r\n              Доступно доносит информацию\r\n            </button>\r\n            <button\r\n              onClick={() => handleQualityChange('Говорит сложными терминами', false)}\r\n              className={negativeQualities.includes('Говорит сложными терминами') ? 'red' : ''}\r\n            >\r\n              Говорит сложными терминами\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // Функция для перехода к следующему вопросу\r\n  const handleNext = () => {\r\n    if (currentQuestion < questions.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n    } else {\r\n      handleFinish();\r\n    }\r\n  };\r\n\r\n  // Функция для завершения опроса и отправки данных\r\n  const handleFinish = async () => {\r\n    const data = {\r\n      partner,\r\n      dateTime: new Date().toISOString(),\r\n      speakers: speakersList.map((speaker) => speaker.fullName).join(', '),\r\n      positiveQualities,\r\n      negativeQualities,\r\n      usefulness,\r\n      brightThoughts,\r\n      additionalItems,\r\n      impression,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\"https://yourserver/api/save\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setIsFinished(true);\r\n        alert('Спасибо за участие в опросе!');\r\n      } else {\r\n        alert('Ошибка при сохранении данных');\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка:', error);\r\n      alert('Ошибка соединения с сервером');\r\n    }\r\n  };\r\n\r\n  const currentQuestionData = questions[currentQuestion];\r\n\r\n  return (\r\n    <div className=\"feedback-container\">\r\n      <div className=\"logo\"></div> {/* Логотип */}\r\n      <h1 className=\"name-vote\">Оценка мероприятия</h1>\r\n\r\n      {/* Вопросы */}\r\n      {currentQuestionData.type === 'input' && currentQuestionData.renderInput()}\r\n      {currentQuestionData.type === 'speakers' && currentQuestionData.renderSpeakers()}\r\n      {currentQuestionData.type === 'qualities' && currentQuestionData.renderQualities()}\r\n\r\n      {/* Кнопка \"Далее\" или \"Завершить опрос\" */}\r\n      <button className=\"next-button\" onClick={handleNext} disabled={isFinished}>\r\n        {currentQuestion === questions.length - 1 ? 'Завершить опрос' : 'Далее'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}