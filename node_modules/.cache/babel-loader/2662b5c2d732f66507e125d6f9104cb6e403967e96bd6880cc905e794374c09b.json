{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shapeless\\\\Desktop\\\\miniapp\\\\src\\\\FeedbackPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport logo from './components/logo.png';\nimport partners from './components/autosuggest/partners.json';\nimport speakers from './components/autosuggest/speakers.json';\nimport './FeedbackPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedbackPage = () => {\n  _s();\n  // Состояния для ввода ФИО (если форма ФИО нужна в этом компоненте)\n  const [surnameValue, setSurnameValue] = useState('');\n  const [surnameSuggestions, setSurnameSuggestions] = useState([]);\n  const [firstNameValue, setFirstNameValue] = useState('');\n  const [firstNameSuggestions, setFirstNameSuggestions] = useState([]);\n  const [patronymicValue, setPatronymicValue] = useState('');\n  const [patronymicSuggestions, setPatronymicSuggestions] = useState([]);\n  const surnameList = partners.map(item => item.male || item.female);\n  const getSurnameSuggestions = value => {\n    const trimmed = value.trim().toLowerCase();\n    return trimmed.length < 2 ? [] : surnameList.filter(s => s.toLowerCase().includes(trimmed));\n  };\n  const onSurnameChange = (event, {\n    newValue\n  }) => {\n    setSurnameValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase());\n  };\n  const firstNameList = speakers; // или другой источник, если используется отдельный файл для имени\n  const getFirstNameSuggestions = value => {\n    const trimmed = value.trim().toLowerCase();\n    return trimmed.length < 2 ? [] : firstNameList.filter(s => s.toLowerCase().includes(trimmed));\n  };\n  const onFirstNameChange = (event, {\n    newValue\n  }) => {\n    setFirstNameValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase());\n  };\n\n  // Для отчества можно использовать тот же подход:\n  const getPatronymicSuggestions = value => {\n    const trimmed = value.trim().toLowerCase();\n    return trimmed.length < 2 ? [] : surnameList.filter(s => s.toLowerCase().includes(trimmed)); // пример, если нет отдельного файла\n  };\n  const onPatronymicChange = (event, {\n    newValue\n  }) => {\n    setPatronymicValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase());\n  };\n  const surnameInputProps = {\n    placeholder: 'Введите фамилию',\n    value: surnameValue,\n    onChange: onSurnameChange,\n    autoComplete: 'off'\n  };\n  const firstNameInputProps = {\n    placeholder: 'Введите имя',\n    value: firstNameValue,\n    onChange: onFirstNameChange,\n    autoComplete: 'off'\n  };\n  const patronymicInputProps = {\n    placeholder: 'Введите отчество',\n    value: patronymicValue,\n    onChange: onPatronymicChange,\n    autoComplete: 'off'\n  };\n\n  // Остальные состояния для опроса мероприятия\n  const [isStarted, setIsStarted] = useState(false);\n  const [isFinishClicked, setIsFinishClicked] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [currentStep, setCurrentStep] = useState(1);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [isFinished, setIsFinished] = useState(false);\n  const [shuffledAnswers, setShuffledAnswers] = useState([]);\n\n  // Пример вопросов (для демонстрации)\n  const questions = [{\n    question: 'Какой формат работы вам ближе?',\n    answers: ['Когда можно детально разобраться в процессах и построить устойчивую систему', 'Когда задачи достаточно разнообразны и требуют гибкого подхода', 'Когда есть чёткий алгоритм действий и понятный конечный результат']\n  }\n  // Добавьте остальные вопросы по необходимости\n  ];\n  useEffect(() => {\n    if (isStarted) {\n      const shuffled = [...questions[currentStep - 1].answers].sort(() => Math.random() - 0.5);\n      setShuffledAnswers(shuffled);\n    }\n  }, [currentStep, isStarted]);\n  const handleStart = () => {\n    setIsStarted(true);\n  };\n  const handleNext = () => {\n    if (!selectedAnswer) {\n      setErrorMessage('Выберите вариант ответа');\n      return;\n    }\n    setUserAnswers(prev => [...prev, selectedAnswer]);\n    setSelectedAnswer('');\n    if (currentStep < questions.length) {\n      setCurrentStep(currentStep + 1);\n    } else {\n      handleFinish();\n    }\n  };\n  const handleFinish = async () => {\n    if (isFinishClicked) return;\n    setIsFinishClicked(true);\n    setIsFinished(true);\n    const data = {\n      fullName: `${surnameValue} ${firstNameValue} ${patronymicValue}`,\n      dateTime: new Date().toISOString(),\n      answers: userAnswers\n    };\n    try {\n      const response = await fetch('https://rgszh-miniapp.org/api/feedback/save', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data),\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        alert(\"Ошибка при сохранении данных\");\n      }\n    } catch (error) {\n      console.error(\"Ошибка при отправке данных:\", error);\n      alert(\"Ошибка соединения с сервером\");\n    }\n  };\n  const renderStep = () => {\n    switch (currentStep) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u0430\\u0440\\u0442\\u043D\\u0451\\u0440\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Autosuggest, {\n            suggestions: partnerSuggestions,\n            onSuggestionsFetchRequested: ({\n              value\n            }) => setPartnerSuggestions(getPartnerSuggestions(value)),\n            onSuggestionsClearRequested: () => setPartnerSuggestions([]),\n            getSuggestionValue: suggestion => suggestion,\n            renderSuggestion: suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: suggestion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 49\n            }, this),\n            inputProps: partnerInputProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this);\n      // Добавьте остальные шаги опроса согласно вашему ТЗ\n      default:\n        return null;\n    }\n  };\n  if (isFinished) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thank-you-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"\\u041B\\u043E\\u0433\\u043E\\u0442\\u0438\\u043F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0411\\u043B\\u0430\\u0433\\u043E\\u0434\\u0430\\u0440\\u0438\\u043C \\u0437\\u0430 \\u043F\\u0440\\u043E\\u0445\\u043E\\u0436\\u0434\\u0435\\u043D\\u0438\\u0435 \\u043E\\u043F\\u0440\\u043E\\u0441\\u0430!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedback-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"\\u041B\\u043E\\u0433\\u043E\\u0442\\u0438\\u043F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), !isStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448\\u0438 \\u0424\\u0418\\u041E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"name-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Autosuggest, {\n            suggestions: surnameSuggestions,\n            onSuggestionsFetchRequested: ({\n              value\n            }) => setSurnameSuggestions(getSurnameSuggestions(value)),\n            onSuggestionsClearRequested: () => setSurnameSuggestions([]),\n            getSuggestionValue: suggestion => suggestion,\n            renderSuggestion: suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: suggestion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 51\n            }, this),\n            inputProps: surnameInputProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u0418\\u043C\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Autosuggest, {\n            suggestions: firstNameSuggestions,\n            onSuggestionsFetchRequested: ({\n              value\n            }) => setFirstNameSuggestions(getFirstNameSuggestions(value)),\n            onSuggestionsClearRequested: () => setFirstNameSuggestions([]),\n            getSuggestionValue: suggestion => suggestion,\n            renderSuggestion: suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: suggestion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 51\n            }, this),\n            inputProps: firstNameInputProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u041E\\u0442\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Autosuggest, {\n            suggestions: patronymicSuggestions,\n            onSuggestionsFetchRequested: ({\n              value\n            }) => setPatronymicSuggestions(getPatronymicSuggestions(value)),\n            onSuggestionsClearRequested: () => setPatronymicSuggestions([]),\n            getSuggestionValue: suggestion => suggestion,\n            renderSuggestion: suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: suggestion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 51\n            }, this),\n            inputProps: patronymicInputProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn red-btn\",\n          onClick: handleStart,\n          children: \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u043E\\u043F\\u0440\\u043E\\u0441\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-container\",\n      children: [renderStep(), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn next-btn\",\n        onClick: currentStep < 1 ? handleNext : handleFinish,\n        children: currentStep < 1 ? 'Далее' : 'Завершить опрос'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n_s(FeedbackPage, \"AVVquMA35MhSkJt/7OPGNVnP9RY=\");\n_c = FeedbackPage;\nexport default FeedbackPage;\nvar _c;\n$RefreshReg$(_c, \"FeedbackPage\");","map":{"version":3,"names":["React","useState","useEffect","Autosuggest","logo","partners","speakers","jsxDEV","_jsxDEV","FeedbackPage","_s","surnameValue","setSurnameValue","surnameSuggestions","setSurnameSuggestions","firstNameValue","setFirstNameValue","firstNameSuggestions","setFirstNameSuggestions","patronymicValue","setPatronymicValue","patronymicSuggestions","setPatronymicSuggestions","surnameList","map","item","male","female","getSurnameSuggestions","value","trimmed","trim","toLowerCase","length","filter","s","includes","onSurnameChange","event","newValue","charAt","toUpperCase","slice","firstNameList","getFirstNameSuggestions","onFirstNameChange","getPatronymicSuggestions","onPatronymicChange","surnameInputProps","placeholder","onChange","autoComplete","firstNameInputProps","patronymicInputProps","isStarted","setIsStarted","isFinishClicked","setIsFinishClicked","errorMessage","setErrorMessage","currentStep","setCurrentStep","selectedAnswer","setSelectedAnswer","userAnswers","setUserAnswers","isFinished","setIsFinished","shuffledAnswers","setShuffledAnswers","questions","question","answers","shuffled","sort","Math","random","handleStart","handleNext","prev","handleFinish","data","fullName","dateTime","Date","toISOString","response","fetch","method","headers","body","JSON","stringify","credentials","ok","alert","error","console","renderStep","children","fileName","_jsxFileName","lineNumber","columnNumber","suggestions","partnerSuggestions","onSuggestionsFetchRequested","setPartnerSuggestions","getPartnerSuggestions","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","inputProps","partnerInputProps","className","src","alt","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/shapeless/Desktop/miniapp/src/FeedbackPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport logo from './components/logo.png';\r\nimport partners from './components/autosuggest/partners.json';\r\nimport speakers from './components/autosuggest/speakers.json';\r\nimport './FeedbackPage.css';\r\n\r\nconst FeedbackPage = () => {\r\n  // Состояния для ввода ФИО (если форма ФИО нужна в этом компоненте)\r\n  const [surnameValue, setSurnameValue] = useState('');\r\n  const [surnameSuggestions, setSurnameSuggestions] = useState([]);\r\n  const [firstNameValue, setFirstNameValue] = useState('');\r\n  const [firstNameSuggestions, setFirstNameSuggestions] = useState([]);\r\n  const [patronymicValue, setPatronymicValue] = useState('');\r\n  const [patronymicSuggestions, setPatronymicSuggestions] = useState([]);\r\n\r\n  const surnameList = partners.map(item => item.male || item.female);\r\n  const getSurnameSuggestions = (value) => {\r\n    const trimmed = value.trim().toLowerCase();\r\n    return trimmed.length < 2 ? [] : surnameList.filter(s => s.toLowerCase().includes(trimmed));\r\n  };\r\n  const onSurnameChange = (event, { newValue }) => {\r\n    setSurnameValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase());\r\n  };\r\n\r\n  const firstNameList = speakers; // или другой источник, если используется отдельный файл для имени\r\n  const getFirstNameSuggestions = (value) => {\r\n    const trimmed = value.trim().toLowerCase();\r\n    return trimmed.length < 2 ? [] : firstNameList.filter(s => s.toLowerCase().includes(trimmed));\r\n  };\r\n  const onFirstNameChange = (event, { newValue }) => {\r\n    setFirstNameValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase());\r\n  };\r\n\r\n  // Для отчества можно использовать тот же подход:\r\n  const getPatronymicSuggestions = (value) => {\r\n    const trimmed = value.trim().toLowerCase();\r\n    return trimmed.length < 2 ? [] : surnameList.filter(s => s.toLowerCase().includes(trimmed)); // пример, если нет отдельного файла\r\n  };\r\n  const onPatronymicChange = (event, { newValue }) => {\r\n    setPatronymicValue(newValue.charAt(0).toUpperCase() + newValue.slice(1).toLowerCase());\r\n  };\r\n\r\n  const surnameInputProps = {\r\n    placeholder: 'Введите фамилию',\r\n    value: surnameValue,\r\n    onChange: onSurnameChange,\r\n    autoComplete: 'off'\r\n  };\r\n\r\n  const firstNameInputProps = {\r\n    placeholder: 'Введите имя',\r\n    value: firstNameValue,\r\n    onChange: onFirstNameChange,\r\n    autoComplete: 'off'\r\n  };\r\n\r\n  const patronymicInputProps = {\r\n    placeholder: 'Введите отчество',\r\n    value: patronymicValue,\r\n    onChange: onPatronymicChange,\r\n    autoComplete: 'off'\r\n  };\r\n\r\n  // Остальные состояния для опроса мероприятия\r\n  const [isStarted, setIsStarted] = useState(false);\r\n  const [isFinishClicked, setIsFinishClicked] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [currentStep, setCurrentStep] = useState(1);\r\n  const [selectedAnswer, setSelectedAnswer] = useState('');\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n  const [isFinished, setIsFinished] = useState(false);\r\n  const [shuffledAnswers, setShuffledAnswers] = useState([]);\r\n\r\n  // Пример вопросов (для демонстрации)\r\n  const questions = [\r\n    {\r\n      question: 'Какой формат работы вам ближе?',\r\n      answers: [\r\n        'Когда можно детально разобраться в процессах и построить устойчивую систему',\r\n        'Когда задачи достаточно разнообразны и требуют гибкого подхода',\r\n        'Когда есть чёткий алгоритм действий и понятный конечный результат'\r\n      ],\r\n    },\r\n    // Добавьте остальные вопросы по необходимости\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (isStarted) {\r\n      const shuffled = [...questions[currentStep - 1].answers].sort(() => Math.random() - 0.5);\r\n      setShuffledAnswers(shuffled);\r\n    }\r\n  }, [currentStep, isStarted]);\r\n\r\n  const handleStart = () => {\r\n    setIsStarted(true);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (!selectedAnswer) {\r\n      setErrorMessage('Выберите вариант ответа');\r\n      return;\r\n    }\r\n    setUserAnswers(prev => [...prev, selectedAnswer]);\r\n    setSelectedAnswer('');\r\n    if (currentStep < questions.length) {\r\n      setCurrentStep(currentStep + 1);\r\n    } else {\r\n      handleFinish();\r\n    }\r\n  };\r\n\r\n  const handleFinish = async () => {\r\n    if (isFinishClicked) return;\r\n    setIsFinishClicked(true);\r\n    setIsFinished(true);\r\n    const data = {\r\n      fullName: `${surnameValue} ${firstNameValue} ${patronymicValue}`,\r\n      dateTime: new Date().toISOString(),\r\n      answers: userAnswers,\r\n    };\r\n    try {\r\n      const response = await fetch('https://rgszh-miniapp.org/api/feedback/save', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data),\r\n        credentials: 'include',\r\n      });\r\n      if (!response.ok) {\r\n        alert(\"Ошибка при сохранении данных\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Ошибка при отправке данных:\", error);\r\n      alert(\"Ошибка соединения с сервером\");\r\n    }\r\n  };\r\n\r\n  const renderStep = () => {\r\n    switch (currentStep) {\r\n      case 1:\r\n        return (\r\n          <div>\r\n            <h2>Введите название партнёра</h2>\r\n            <Autosuggest\r\n              suggestions={partnerSuggestions}\r\n              onSuggestionsFetchRequested={({ value }) => setPartnerSuggestions(getPartnerSuggestions(value))}\r\n              onSuggestionsClearRequested={() => setPartnerSuggestions([])}\r\n              getSuggestionValue={(suggestion) => suggestion}\r\n              renderSuggestion={(suggestion) => <div>{suggestion}</div>}\r\n              inputProps={partnerInputProps}\r\n            />\r\n          </div>\r\n        );\r\n      // Добавьте остальные шаги опроса согласно вашему ТЗ\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  if (isFinished) {\r\n    return (\r\n      <div className=\"thank-you-message\">\r\n        <div className=\"logo\">\r\n          <img src={logo} alt=\"Логотип\" />\r\n        </div>\r\n        <h2>Благодарим за прохождение опроса!</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"feedback-container\">\r\n      <div className=\"logo\">\r\n        <img src={logo} alt=\"Логотип\" />\r\n      </div>\r\n      {!isStarted ? (\r\n        <div>\r\n          <h2>Введите ваши ФИО</h2>\r\n          <form className=\"name-form\">\r\n            <div className=\"input-container\">\r\n              <label>Фамилия</label>\r\n              <Autosuggest\r\n                suggestions={surnameSuggestions}\r\n                onSuggestionsFetchRequested={({ value }) => setSurnameSuggestions(getSurnameSuggestions(value))}\r\n                onSuggestionsClearRequested={() => setSurnameSuggestions([])}\r\n                getSuggestionValue={(suggestion) => suggestion}\r\n                renderSuggestion={(suggestion) => <div>{suggestion}</div>}\r\n                inputProps={surnameInputProps}\r\n              />\r\n            </div>\r\n            <div className=\"input-container\">\r\n              <label>Имя</label>\r\n              <Autosuggest\r\n                suggestions={firstNameSuggestions}\r\n                onSuggestionsFetchRequested={({ value }) => setFirstNameSuggestions(getFirstNameSuggestions(value))}\r\n                onSuggestionsClearRequested={() => setFirstNameSuggestions([])}\r\n                getSuggestionValue={(suggestion) => suggestion}\r\n                renderSuggestion={(suggestion) => <div>{suggestion}</div>}\r\n                inputProps={firstNameInputProps}\r\n              />\r\n            </div>\r\n            <div className=\"input-container\">\r\n              <label>Отчество</label>\r\n              <Autosuggest\r\n                suggestions={patronymicSuggestions}\r\n                onSuggestionsFetchRequested={({ value }) => setPatronymicSuggestions(getPatronymicSuggestions(value))}\r\n                onSuggestionsClearRequested={() => setPatronymicSuggestions([])}\r\n                getSuggestionValue={(suggestion) => suggestion}\r\n                renderSuggestion={(suggestion) => <div>{suggestion}</div>}\r\n                inputProps={patronymicInputProps}\r\n              />\r\n            </div>\r\n            <button type=\"button\" className=\"btn red-btn\" onClick={handleStart}>\r\n              Начать опрос\r\n            </button>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <div className=\"step-container\">\r\n          {renderStep()}\r\n          {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n          <button className=\"btn next-btn\" onClick={currentStep < 1 ? handleNext : handleFinish}>\r\n            {currentStep < 1 ? 'Далее' : 'Завершить опрос'}\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}