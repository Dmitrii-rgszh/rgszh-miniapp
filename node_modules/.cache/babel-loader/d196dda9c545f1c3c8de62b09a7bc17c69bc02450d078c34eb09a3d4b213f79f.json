{"ast":null,"code":"import React,{useEffect,useState,useLayoutEffect}from'react';import{useSwipeable}from'react-swipeable';import{useNavigate}from'react-router-dom';import logo from'./components/logo.png';import backgroundImage from'./components/background.png';import pollIcon from'./components/icons/опросы.png';import assessmentQR from'./components/QR/assessment.png';// Импорт иконки для QR-кнопки\nimport'./PollsPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PollsPage=()=>{const navigate=useNavigate();const[qrModal,setQrModal]=useState(null);useLayoutEffect(()=>{window.scrollTo(0,0);},[]);useEffect(()=>{setTimeout(()=>{window.scrollTo(0,0);},100);},[]);const swipeHandlers=useSwipeable({onSwipedLeft:()=>navigate('/register')});// Dummy данные пользователя – замените на реальные данные из вашего auth-контекста\nconst user={isRegistered:true,accessLevel:1};// Функция генерации URL для QR-кода через QuickChart API\nconst getQRCodeUrl=targetUrl=>{return`https://quickchart.io/qr?text=${encodeURIComponent(targetUrl)}&size=150`;};const polls=[{label:'Оценка кандидата',path:'/assessment'},{label:'Обратная связь',path:'/feedback'}];const handleQRClick=pollPath=>{const fullUrl=window.location.origin+pollPath;const qrUrl=getQRCodeUrl(fullUrl);console.log(\"QR-код сгенерирован:\",qrUrl);// Логируем URL, чтобы проверить\nsetTimeout(()=>{setQrModal(qrUrl);// Даем время на генерацию\n},100);};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",style:{backgroundImage:`url(${backgroundImage})`},...swipeHandlers,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043E\\u043F\\u0440\\u043E\\u0441\\u043E\\u0432\"}),polls.map((poll,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"poll-item\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"mainmenu-btn poll-btn\",onClick:()=>navigate(poll.path),children:/*#__PURE__*/_jsx(\"span\",{className:\"button-text\",children:poll.label})}),user.isRegistered&&user.accessLevel===1&&/*#__PURE__*/_jsx(\"button\",{className:\"mainmenu-btn qr-btn\",onClick:()=>handleQRClick(poll.path),children:/*#__PURE__*/_jsx(\"img\",{src:assessmentQR,alt:\"QR Code\",className:\"button-icon\"})})]},index)),qrModal&&/*#__PURE__*/_jsx(\"div\",{className:\"qr-modal-overlay\",onClick:()=>setQrModal(null),children:/*#__PURE__*/_jsx(\"div\",{className:\"qr-modal-content\",children:/*#__PURE__*/_jsx(\"img\",{src:qrModal,alt:\"QR Code\"})})})]});};export default PollsPage;","map":{"version":3,"names":["React","useEffect","useState","useLayoutEffect","useSwipeable","useNavigate","logo","backgroundImage","pollIcon","assessmentQR","jsx","_jsx","jsxs","_jsxs","PollsPage","navigate","qrModal","setQrModal","window","scrollTo","setTimeout","swipeHandlers","onSwipedLeft","user","isRegistered","accessLevel","getQRCodeUrl","targetUrl","encodeURIComponent","polls","label","path","handleQRClick","pollPath","fullUrl","location","origin","qrUrl","console","log","className","style","children","map","poll","index","onClick","src","alt"],"sources":["C:/Users/shapeless/Desktop/miniapp/src/PollsPage.js"],"sourcesContent":["import React, { useEffect, useState, useLayoutEffect } from 'react';\r\nimport { useSwipeable } from 'react-swipeable';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport logo from './components/logo.png';\r\nimport backgroundImage from './components/background.png';\r\nimport pollIcon from './components/icons/опросы.png';\r\nimport assessmentQR from './components/QR/assessment.png'; // Импорт иконки для QR-кнопки\r\nimport './PollsPage.css';\r\n\r\nconst PollsPage = () => {\r\n  const navigate = useNavigate();\r\n  const [qrModal, setQrModal] = useState(null);\r\n\r\n  useLayoutEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      window.scrollTo(0, 0);\r\n    }, 100);\r\n  }, []);\r\n\r\n  const swipeHandlers = useSwipeable({\r\n    onSwipedLeft: () => navigate('/register'),\r\n  });\r\n\r\n  // Dummy данные пользователя – замените на реальные данные из вашего auth-контекста\r\n  const user = {\r\n    isRegistered: true,\r\n    accessLevel: 1,\r\n  };\r\n\r\n  // Функция генерации URL для QR-кода через QuickChart API\r\n  const getQRCodeUrl = (targetUrl) => {\r\n    return `https://quickchart.io/qr?text=${encodeURIComponent(targetUrl)}&size=150`;\r\n  };\r\n\r\n  const polls = [\r\n    { label: 'Оценка кандидата', path: '/assessment' },\r\n    { label: 'Обратная связь', path: '/feedback' }\r\n  ];\r\n\r\n  const handleQRClick = (pollPath) => {\r\n    const fullUrl = window.location.origin + pollPath;\r\n    const qrUrl = getQRCodeUrl(fullUrl);\r\n    console.log(\"QR-код сгенерирован:\", qrUrl); // Логируем URL, чтобы проверить\r\n    setTimeout(() => {\r\n      setQrModal(qrUrl); // Даем время на генерацию\r\n    }, 100);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"container\"\r\n      style={{ backgroundImage: `url(${backgroundImage})` }}\r\n      {...swipeHandlers}\r\n    >\r\n      <h2>Список опросов</h2>\r\n\r\n      {polls.map((poll, index) => (\r\n        <div key={index} className=\"poll-item\">\r\n          <button className=\"mainmenu-btn poll-btn\" onClick={() => navigate(poll.path)}>\r\n            <span className=\"button-text\">{poll.label}</span>\r\n          </button>\r\n          {user.isRegistered && user.accessLevel === 1 && (\r\n            <button className=\"mainmenu-btn qr-btn\" onClick={() => handleQRClick(poll.path)}>\r\n              <img src={assessmentQR} alt=\"QR Code\" className=\"button-icon\" />\r\n            </button>\r\n          )}\r\n        </div>\r\n      ))}\r\n\r\n      {qrModal && (\r\n        <div className=\"qr-modal-overlay\" onClick={() => setQrModal(null)}>\r\n          <div className=\"qr-modal-content\">\r\n            <img src={qrModal} alt=\"QR Code\" />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PollsPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}