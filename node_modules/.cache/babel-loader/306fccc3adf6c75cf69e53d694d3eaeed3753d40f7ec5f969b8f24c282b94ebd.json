{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shapeless\\\\Desktop\\\\miniapp\\\\src\\\\QuestionsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './QuestionsPage.css';\n\n// Пример массива вопросов (без явной нумерации в строках)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [\"Как вы оцениваете качество обучения?\", \"Насколько понятны инструкции?\", \"Довольны ли вы материалами?\"\n// … добавьте вопросы до 25\n];\nconst QuestionsPage = () => {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const navigate = useNavigate();\n  const totalQuestions = 25; // Общее число вопросов\n\n  const handleNextQuestion = () => {\n    if (currentQuestion < totalQuestions - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      // Если все вопросы пройдены, переходим на страницу благодарности\n      navigate('/thankyou');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questions-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-indicator\",\n      children: `${currentQuestion + 1} / ${totalQuestions}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: questions[currentQuestion] || \"Вопрос отсутствует\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNextQuestion,\n      className: \"next-btn\",\n      children: \"\\u0414\\u0430\\u043B\\u0435\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionsPage, \"sbpGOeX6U4W7NoPY8PwfvLmCtfM=\", false, function () {\n  return [useNavigate];\n});\n_c = QuestionsPage;\nexport default QuestionsPage;\nvar _c;\n$RefreshReg$(_c, \"QuestionsPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","questions","QuestionsPage","_s","currentQuestion","setCurrentQuestion","navigate","totalQuestions","handleNextQuestion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/shapeless/Desktop/miniapp/src/QuestionsPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './QuestionsPage.css';\r\n\r\n// Пример массива вопросов (без явной нумерации в строках)\r\nconst questions = [\r\n  \"Как вы оцениваете качество обучения?\",\r\n  \"Насколько понятны инструкции?\",\r\n  \"Довольны ли вы материалами?\",\r\n  // … добавьте вопросы до 25\r\n];\r\n\r\nconst QuestionsPage = () => {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const navigate = useNavigate();\r\n  const totalQuestions = 25; // Общее число вопросов\r\n\r\n  const handleNextQuestion = () => {\r\n    if (currentQuestion < totalQuestions - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n    } else {\r\n      // Если все вопросы пройдены, переходим на страницу благодарности\r\n      navigate('/thankyou');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"questions-container\">\r\n      <div className=\"progress-indicator\">\r\n        {`${currentQuestion + 1} / ${totalQuestions}`}\r\n      </div>\r\n      <div className=\"question\">\r\n        <p>{questions[currentQuestion] || \"Вопрос отсутствует\"}</p>\r\n      </div>\r\n      <button onClick={handleNextQuestion} className=\"next-btn\">\r\n        Далее\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionsPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,qBAAqB;;AAE5B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAG,CAChB,sCAAsC,EACtC,+BAA+B,EAC/B;AACA;AAAA,CACD;AAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,cAAc,GAAG,EAAE,CAAC,CAAC;;EAE3B,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAIJ,eAAe,GAAGG,cAAc,GAAG,CAAC,EAAE;MACxCF,kBAAkB,CAACD,eAAe,GAAG,CAAC,CAAC;IACzC,CAAC,MAAM;MACL;MACAE,QAAQ,CAAC,WAAW,CAAC;IACvB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKS,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCV,OAAA;MAAKS,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAChC,GAAGN,eAAe,GAAG,CAAC,MAAMG,cAAc;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACNd,OAAA;MAAKS,SAAS,EAAC,UAAU;MAAAC,QAAA,eACvBV,OAAA;QAAAU,QAAA,EAAIT,SAAS,CAACG,eAAe,CAAC,IAAI;MAAoB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC,eACNd,OAAA;MAAQe,OAAO,EAAEP,kBAAmB;MAACC,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAC;IAE1D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACX,EAAA,CA3BID,aAAa;EAAA,QAEAJ,WAAW;AAAA;AAAAkB,EAAA,GAFxBd,aAAa;AA6BnB,eAAeA,aAAa;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}