{"ast":null,"code":"// src/DateWheelPicker.js\nimport React from'react';import'./DateWheelPicker.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DateWheelPicker=_ref=>{let{// value — объект { day, month, year }, по умолчанию текущий год и 01/01\nvalue={day:'01',month:'01',year:`${new Date().getFullYear()}`},onChange}=_ref;// Массивы дней, месяцев, лет\nconst days=Array.from({length:31},(_,i)=>(i+1).toString().padStart(2,'0'));const months=Array.from({length:12},(_,i)=>(i+1).toString().padStart(2,'0'));const currentYear=new Date().getFullYear();const years=Array.from({length:100},(_,i)=>(currentYear-i).toString());const handleChange=()=>{const day=document.getElementById('wheel-day').value;const month=document.getElementById('wheel-month').value;const year=document.getElementById('wheel-year').value;// Передаём объект с отдельными полями\nonChange({day,month,year});};return/*#__PURE__*/_jsxs(\"div\",{className:\"date-wheel-picker\",children:[/*#__PURE__*/_jsx(\"select\",{id:\"wheel-day\",value:value.day,onChange:handleChange,children:days.map(d=>/*#__PURE__*/_jsx(\"option\",{value:d,children:d},d))}),/*#__PURE__*/_jsx(\"select\",{id:\"wheel-month\",value:value.month,onChange:handleChange,children:months.map(m=>/*#__PURE__*/_jsx(\"option\",{value:m,children:m},m))}),/*#__PURE__*/_jsx(\"select\",{id:\"wheel-year\",value:value.year,onChange:handleChange,children:years.map(y=>/*#__PURE__*/_jsx(\"option\",{value:y,children:y},y))})]});};export default DateWheelPicker;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","DateWheelPicker","_ref","value","day","month","year","Date","getFullYear","onChange","days","Array","from","length","_","i","toString","padStart","months","currentYear","years","handleChange","document","getElementById","className","children","id","map","d","m","y"],"sources":["C:/Users/shapeless/Desktop/miniapp/src/DateWheelPicker.js"],"sourcesContent":["// src/DateWheelPicker.js\r\nimport React from 'react';\r\nimport './DateWheelPicker.css';\r\n\r\nconst DateWheelPicker = ({\r\n  // value — объект { day, month, year }, по умолчанию текущий год и 01/01\r\n  value = {\r\n    day:   '01',\r\n    month: '01',\r\n    year:  `${new Date().getFullYear()}`\r\n  },\r\n  onChange\r\n}) => {\r\n  // Массивы дней, месяцев, лет\r\n  const days = Array.from({ length: 31 }, (_, i) =>\r\n    (i + 1).toString().padStart(2, '0')\r\n  );\r\n  const months = Array.from({ length: 12 }, (_, i) =>\r\n    (i + 1).toString().padStart(2, '0')\r\n  );\r\n  const currentYear = new Date().getFullYear();\r\n  const years = Array.from({ length: 100 }, (_, i) =>\r\n    (currentYear - i).toString()\r\n  );\r\n\r\n  const handleChange = () => {\r\n    const day   = document.getElementById('wheel-day').value;\r\n    const month = document.getElementById('wheel-month').value;\r\n    const year  = document.getElementById('wheel-year').value;\r\n    // Передаём объект с отдельными полями\r\n    onChange({ day, month, year });\r\n  };\r\n\r\n  return (\r\n    <div className=\"date-wheel-picker\">\r\n      <select\r\n        id=\"wheel-day\"\r\n        value={value.day}\r\n        onChange={handleChange}\r\n      >\r\n        {days.map(d => (\r\n          <option key={d} value={d}>\r\n            {d}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <select\r\n        id=\"wheel-month\"\r\n        value={value.month}\r\n        onChange={handleChange}\r\n      >\r\n        {months.map(m => (\r\n          <option key={m} value={m}>\r\n            {m}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <select\r\n        id=\"wheel-year\"\r\n        value={value.year}\r\n        onChange={handleChange}\r\n      >\r\n        {years.map(y => (\r\n          <option key={y} value={y}>\r\n            {y}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateWheelPicker;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}