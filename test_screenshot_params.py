#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∏–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ª–æ–≥–∏–∫–∏ —Ä–∞—Å—á–µ—Ç–∞
"""

import requests
import json

def test_screenshot_parameters():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ—á–Ω–æ —Ç–∞–∫–∏–µ –∂–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–∞–∫ –Ω–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–µ
    """
    vm_ip = "176.108.243.189"
    endpoint = f"https://{vm_ip}/api/justincase/recommend-sum"
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
    test_data = {
        "birthDate": "1989-01-01",  # –í–æ–∑—Ä–∞—Å—Ç 35 –ª–µ—Ç (2024 - 1989 = 35)
        "hasJob": "yes",
        "income2022": 1000000,  # 1 –º–ª–Ω –≤ 2022
        "income2023": 1000000,  # 1 –º–ª–Ω –≤ 2023  
        "income2024": 1000000,  # 1 –º–ª–Ω –≤ 2024
        "scholarship": 0,
        "unsecuredLoans": 0,  # –ù–µ—Ç –Ω–µ–∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ–≤
        "breadwinnerStatus": "yes",  # –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ—Ä–º–∏–ª–µ—Ü
        "incomeShare": 62,  # 50-74% -> —Å—Ä–µ–¥–Ω–µ–µ 62%
        "childrenCount": 0,  # –ù–µ—Ç –¥–µ—Ç–µ–π
        "specialCareRelatives": 0  # –ù–µ—Ç —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ –Ω–∞ –∏–∂–¥–∏–≤–µ–Ω–∏–∏
    }
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞:")
    print(f"   –í–æ–∑—Ä–∞—Å—Ç: 35 –ª–µ—Ç")
    print(f"   –î–æ—Ö–æ–¥: 1,000,000 —Ä—É–±/–≥–æ–¥")
    print(f"   –°–µ–º–µ–π–Ω—ã–π —Å—Ç–∞—Ç—É—Å: –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ—Ä–º–∏–ª–µ—Ü")
    print(f"   –î–æ–ª—è –≤ –±—é–¥–∂–µ—Ç–µ: 50-74%")
    print(f"   –î–µ—Ç–∏: –Ω–µ—Ç")
    print(f"   –ò–∂–¥–∏–≤–µ–Ω—Ü—ã: –Ω–µ—Ç")
    print(f"   –î–æ–ª–≥–∏: –Ω–µ—Ç")
    print()
    
    try:
        response = requests.post(endpoint, json=test_data, timeout=10, verify=False)
        print(f"HTTP Status: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            if result.get('success'):
                data = result.get('data', {})
                recommended_sum = data.get('recommended_sum', 0)
                recommended_term = data.get('recommended_term', 0)
                details = data.get('calculation_details', {})
                
                print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–æ:")
                print(f"   –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–∞—è —Å—É–º–º–∞: {recommended_sum:,} —Ä—É–±")
                print(f"   –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–π —Å—Ä–æ–∫: {recommended_term} –ª–µ—Ç")
                print()
                print(f"üìä –î–µ—Ç–∞–ª–∏ —Ä–∞—Å—á–µ—Ç–∞:")
                print(f"   –í–æ–∑—Ä–∞—Å—Ç: {details.get('age')} –ª–µ—Ç")
                print(f"   –°—Ä–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥: {details.get('average_income', 0):,} —Ä—É–±")
                print(f"   –°–µ–º–µ–π–Ω—ã–π –º–Ω–æ–∂–∏—Ç–µ–ª—å: {details.get('family_multiplier', 1)}")
                print(f"   –î–æ–ª–≥–æ–≤–æ–π —Ñ–∞–∫—Ç–æ—Ä: {details.get('debt_factor', 0):,} —Ä—É–±")
                
                # –†—É—á–Ω–æ–π —Ä–∞—Å—á–µ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
                print()
                print("üîç –ü—Ä–æ–≤–µ—Ä–∏–º —Ä–∞—Å—á–µ—Ç:")
                age = 35
                income = 1000000
                
                # –ë–∞–∑–æ–≤—ã–π –º–Ω–æ–∂–∏—Ç–µ–ª—å –¥–ª—è –≤–æ–∑—Ä–∞—Å—Ç–∞ 35
                if age <= 35:
                    base_multiplier = 6
                print(f"   –ë–∞–∑–æ–≤—ã–π –º–Ω–æ–∂–∏—Ç–µ–ª—å (–≤–æ–∑—Ä–∞—Å—Ç {age}): {base_multiplier}")
                
                # –°–µ–º–µ–π–Ω—ã–π –º–Ω–æ–∂–∏—Ç–µ–ª—å
                # main_breadwinner (+0.5) + 0 –¥–µ—Ç–µ–π + 0 –∏–∂–¥–∏–≤–µ–Ω—Ü–µ–≤ = 1.5
                family_mult = 1.0 + 0.5  # main_breadwinner
                print(f"   –°–µ–º–µ–π–Ω—ã–π –º–Ω–æ–∂–∏—Ç–µ–ª—å: {family_mult}")
                
                # –ú–Ω–æ–∂–∏—Ç–µ–ª—å –¥–æ–ª–∏ –¥–æ—Ö–æ–¥–∞ (50-74% -> –±–µ—Ä–µ–º —Å—Ä–µ–¥–Ω–µ–µ ~62%)
                share_mult = min(62 / 50, 2.0)  # = 1.24
                print(f"   –ú–Ω–æ–∂–∏—Ç–µ–ª—å –¥–æ–ª–∏ –¥–æ—Ö–æ–¥–∞: {share_mult}")
                
                # –ë–∞–∑–æ–≤–∞—è —Å—É–º–º–∞
                base_sum = income * base_multiplier * family_mult * share_mult
                print(f"   –ë–∞–∑–æ–≤–∞—è —Å—É–º–º–∞: {income} * {base_multiplier} * {family_mult} * {share_mult} = {base_sum:,.0f}")
                
                # –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ (–±–µ–∑ –¥–æ–ª–≥–æ–≤)
                final_sum = base_sum + 0  # –Ω–µ—Ç –¥–æ–ª–≥–æ–≤
                print(f"   –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞: {final_sum:,.0f}")
                
                # –û–∫—Ä—É–≥–ª–µ–Ω–∏–µ –¥–æ 100 —Ç—ã—Å—è—á
                rounded = round(final_sum / 100000) * 100000
                print(f"   –û–∫—Ä—É–≥–ª–µ–Ω–Ω–∞—è —Å—É–º–º–∞: {rounded:,.0f}")
                
                # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è (–º–∏–Ω 500–∫, –º–∞–∫—Å 10–º–ª–Ω)
                limited = max(500000, min(10000000, rounded))
                print(f"   –° –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏: {limited:,.0f}")
                
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ: {result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

if __name__ == "__main__":
    test_screenshot_parameters()
