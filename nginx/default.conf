# Правильный прокси WebSocket
map $http_upgrade $connection_upgrade {
    default   upgrade;
    ''        close;
}

server {
    listen 80;
    server_name _;

    # Редирект всего HTTP → HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name rgszh-miniapp.org;

    # SSL
    ssl_certificate     /etc/ssl/fullchain.pem;
    ssl_certificate_key /etc/ssl/privkey.pem;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Проксирование к frontend контейнеру для статики
    location / {
        proxy_pass         http://frontend:80/;
        proxy_http_version 1.1;
        proxy_set_header   Host            $host;
        proxy_set_header   X-Real-IP       $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect     off;
    }

    # 2) Проксирование REST API
    location /api/ {
        proxy_pass         http://server:4000/api/;  # ← ИСПРАВЛЕНО: изменено с 5000 на 4000
        proxy_http_version 1.1;
        proxy_set_header   Host            $host;
        proxy_set_header   X-Real-IP       $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect     off;
    }

    # 3) Проксирование Socket.IO (WebSocket + polling)
    location /socket.io/ {
        proxy_pass         http://server:4000/socket.io/;  # ← ИСПРАВЛЕНО: изменено с 5000 на 4000
        proxy_http_version 1.1;
        proxy_set_header   Upgrade         $http_upgrade;
        proxy_set_header   Connection      $connection_upgrade;
        proxy_set_header   Host            $host;
        proxy_set_header   X-Real-IP       $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_read_timeout 86400s;
        proxy_redirect     off;
    }
}
