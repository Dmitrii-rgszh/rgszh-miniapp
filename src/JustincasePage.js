import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import logoImage from './components/logo.png';
import DateWheelPicker from './DateWheelPicker';

const JustincasePage = () => {
  const navigate = useNavigate();
  const [userName, setUserName] = useState('');
  const [viewportHeight, setViewportHeight] = useState(getViewportHeight());

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–π
  const [logoAnimated, setLogoAnimated] = useState(false);
  const [buttonsAnimated, setButtonsAnimated] = useState(false);
  const [moveDuration] = useState('70s');
  const [rotateDuration] = useState('6s');
  const [isExiting, setIsExiting] = useState(false);

  // –°–æ—Å—Ç–æ—è–Ω–∏—è —Ñ–æ—Ä–º—ã
  const [birthDate, setBirthDate] = useState(null);
  const [gender, setGender] = useState(null);
  const [insuranceInfo, setInsuranceInfo] = useState(null);
  const [insuranceTerm, setInsuranceTerm] = useState('1');
  const [insuranceSum, setInsuranceSum] = useState('');
  const [insuranceFrequency, setInsuranceFrequency] = useState('');

  const [accidentPackage, setAccidentPackage] = useState(null);
  const [criticalPackage, setCriticalPackage] = useState(null);
  const [treatmentRegion, setTreatmentRegion] = useState(null);
  const [sportPackage, setSportPackage] = useState(null);

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è –≤–µ—Ç–∫–∏ "–Ω–µ –∑–Ω–∞–µ—Ç —Å—É–º–º—É"
  const [hasJob, setHasJob] = useState(null);
  const [income2021, setIncome2021] = useState('');
  const [income2022, setIncome2022] = useState('');
  const [income2023, setIncome2023] = useState('');
  const [scholarship, setScholarship] = useState('');
  const [unsecuredLoans, setUnsecuredLoans] = useState('');

  const [breadwinnerStatus, setBreadwinnerStatus] = useState(null);
  const [incomeShare, setIncomeShare] = useState('');
  const [childrenCount, setChildrenCount] = useState('0');
  const [specialCareRelatives, setSpecialCareRelatives] = useState(null);

  // –®–∞–≥–∏
  const [currentStep, setCurrentStep] = useState(1);
  const [isProcessing, setIsProcessing] = useState(false);
  const [resultData, setResultData] = useState(null);

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
  useEffect(() => {
    const storedName = localStorage.getItem('userName');
    setUserName(storedName || '–ì–æ—Å—Ç—å');

    // –ê–Ω–∏–º–∞—Ü–∏–∏
    setTimeout(() => setLogoAnimated(true), 100);
    setTimeout(() => setButtonsAnimated(true), 600);

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    const handleResize = () => {
      setViewportHeight(getViewportHeight());
    };

    const handleOrientationChange = () => {
      setTimeout(() => {
        setViewportHeight(getViewportHeight());
      }, 100);
    };

    window.addEventListener('resize', handleResize);
    window.addEventListener('orientationchange', handleOrientationChange);

    return () => {
      window.removeEventListener('resize', handleResize);
      window.removeEventListener('orientationchange', handleOrientationChange);
    };
  }, []);

  // –§–æ—Ä–º–∞—Ç—Ç–µ—Ä –¥–ª—è –ø–æ–ª–µ–π-—Å—É–º–º
  const formatSum = raw => {
    let digits = raw.replace(/\D/g, '');
    if (!digits) return '';
    let out = '';
    while (digits.length > 3) {
      out = '.' + digits.slice(-3) + out;
      digits = digits.slice(0, -3);
    }
    return digits + out;
  };

  const handleSumChange = e => setInsuranceSum(formatSum(e.target.value));
  const handleIncome2021Change = e => setIncome2021(formatSum(e.target.value));
  const handleIncome2022Change = e => setIncome2022(formatSum(e.target.value));
  const handleIncome2023Change = e => setIncome2023(formatSum(e.target.value));
  const handleScholarshipChange = e => setScholarship(formatSum(e.target.value));
  const handleUnsecuredLoansChange = e => setUnsecuredLoans(formatSum(e.target.value));

  // –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —á–∏—Å–µ–ª –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const formatNumber = (value) => {
    if (!value) return '0';
    
    // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –Ω–µ—Ü–∏—Ñ—Ä–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã
    const cleanValue = value.toString().replace(/[^\d]/g, '');
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å –ø—Ä–æ–±–µ–ª–∞–º–∏
    return cleanValue.replace(/(\d)(?=(\d{3})+$)/g, '$1 ');
  };

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞
  const canGoNext = () => {
    if (currentStep === 1) {
      return birthDate && gender && insuranceInfo;
    }
    if (currentStep === 2) {
      return insuranceInfo === 'yes'
        ? (insuranceTerm && insuranceSum && insuranceFrequency)
        : (hasJob && income2021 && income2022 && income2023);
    }
    if (currentStep === 3) {
      if (insuranceInfo === 'yes') {
        return accidentPackage && criticalPackage && (criticalPackage === 'no' || treatmentRegion) && sportPackage;
      } else {
        return breadwinnerStatus &&
               (breadwinnerStatus === 'yes' || incomeShare) &&
               childrenCount !== '' &&
               specialCareRelatives;
      }
    }
    return true;
  };

  // –ü–µ—Ä–µ—Ö–æ–¥ –≤–ø–µ—Ä—ë–¥
  const handleNext = () => {
    if (!canGoNext()) {
      alert('–ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ª–æ–≤–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞');
      return;
    }
    if (currentStep < 3) {
      setCurrentStep(s => s + 1);
    } else if (currentStep === 3) {
      doCalculation();
    }
  };

  // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞–∑–∞–¥
  const handlePrev = () => {
    if (currentStep > 1) setCurrentStep(s => s - 1);
  };

  // –°–±—Ä–æ—Å –∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã–π —Ä–∞—Å—á—ë—Ç
  const repeatCalculation = () => {
    setBirthDate(null); setGender(null); setInsuranceInfo(null);
    setInsuranceTerm('1'); setInsuranceSum(''); setInsuranceFrequency('');
    setAccidentPackage(null); setCriticalPackage(null); setTreatmentRegion(null); setSportPackage(null);
    setHasJob(null); setIncome2021(''); setIncome2022(''); setIncome2023('');
    setScholarship(''); setUnsecuredLoans('');
    setBreadwinnerStatus(null); setIncomeShare(''); setChildrenCount('0'); setSpecialCareRelatives(null);
    setResultData(null); setIsProcessing(false); setCurrentStep(1);
  };

  // –ü–µ—Ä–µ—Ö–æ–¥ –≤ –º–µ–Ω—é
  const goToMenu = () => {
    setIsExiting(true);
    setTimeout(() => {
      navigate('/Main-Menu');
    }, 700);
  };

  // –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –±—ç–∫–µ–Ω–¥ –∏ –ø—Ä–∏—ë–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
  const doCalculation = async () => {
    setIsProcessing(true);
  
    try {
      // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ, –∫–æ—Ç–æ—Ä—ã–π –æ–∂–∏–¥–∞–µ—Ç —Å–µ—Ä–≤–µ—Ä
      const payload = {
        birthDate: birthDate ? birthDate.toISOString().split('T')[0] : null,
        gender: gender === '–ú—É–∂—Å–∫–æ–π' ? 'male' : 'female',
        insuranceInfo,
        insuranceTerm: parseInt(insuranceTerm),
        insuranceSum: insuranceSum ? insuranceSum.replace(/\./g, '') : '',
        insuranceFrequency,
        accidentPackage,
        criticalPackage,
        treatmentRegion,
        sportPackage,
        hasJob,
        income2021,
        income2022,
        income2023,
        scholarship,
        unsecuredLoans,
        breadwinnerStatus,
        incomeShare,
        childrenCount,
        specialCareRelatives
      };

      console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Ä–∞—Å—á–µ—Ç:', payload);

      const apiUrl = process.env.NODE_ENV === 'development' 
        ? 'http://localhost:4000/api/proxy/calculator/save'  // –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
        : `${window.location.origin}/api/proxy/calculator/save`;  // –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞

      const response = await fetch(apiUrl, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        credentials: 'include',
        body: JSON.stringify(payload)
      });

      const data = await response.json();
      console.log('üì• –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç:', data);

      if (!response.ok) {
        throw new Error(data.error || '–û—à–∏–±–∫–∞ —Ä–∞—Å—á—ë—Ç–∞');
      }

      // –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞
      let processedData;
      
      if (data.success && data.calculation_result) {
        // –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ø–æ–ª–Ω–æ–≥–æ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
        const calc = data.calculation_result;
        
        processedData = {
          success: true,
          calculationDate: new Date().toLocaleDateString('ru-RU'),
          clientAge: calc.clientAge || 35,
          clientGender: calc.clientGender || (gender === '–ú—É–∂—Å–∫–æ–π' ? '–ú—É–∂—Å–∫–æ–π' : '–ñ–µ–Ω—Å–∫–∏–π'),
          insuranceTerm: calc.insuranceTerm || insuranceTerm,
          
          // –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞
          baseInsuranceSum: formatNumber(calc.baseInsuranceSum || calc.insuranceSum || insuranceSum),
          basePremium: formatNumber(calc.basePremium || calc.basePremiumAmount || calc.annualPremium || '0'),
          
          // –ü–∞–∫–µ—Ç –ù–°
          accidentPackageIncluded: calc.accidentPackageIncluded || false,
          accidentInsuranceSum: formatNumber(calc.accidentInsuranceSum || calc.accidentDetails?.insuranceSum || insuranceSum),
          accidentPremium: formatNumber(calc.accidentPremium || calc.accidentDetails?.premium || '0'),
          
          // –ü–∞–∫–µ—Ç –ö–ó
          criticalPackageIncluded: calc.criticalPackageIncluded || false,
          criticalInsuranceSum: formatNumber(calc.criticalInsuranceSum || calc.criticalDetails?.insuranceSum || '60 000 000'),
          criticalPremium: formatNumber(calc.criticalPremium || calc.criticalDetails?.premium || '0'),
          
          // –ò—Ç–æ–≥–æ
          totalPremium: formatNumber(calc.totalPremium || calc.annualPremium || '0'),
          
          // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
          treatmentRegion: calc.treatmentRegion || treatmentRegion,
          sportPackage: calc.sportPackage || (sportPackage === 'yes'),
          
          // –°–ª—É–∂–µ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
          calculationId: calc.calculationId || data.calculation_id || 'unknown',
          calculator: data.calculator || 'JustincaseCalculatorComplete',
          version: data.version || '2.0.0'
        };
      } else if (data.success) {
        // –°—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ (–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä)
        processedData = {
          ...data,
          clientAge: data.clientAge || 35,
          clientGender: data.clientGender || (gender === '–ú—É–∂—Å–∫–æ–π' ? '–ú—É–∂—Å–∫–æ–π' : '–ñ–µ–Ω—Å–∫–∏–π'),
          insuranceTerm: data.insuranceTerm || insuranceTerm,
          baseInsuranceSum: formatNumber(data.baseInsuranceSum || insuranceSum),
          basePremium: formatNumber(data.basePremium || '0'),
          totalPremium: formatNumber(data.totalPremium || '0'),
          accidentPackageIncluded: data.accidentPackageIncluded || false,
          accidentInsuranceSum: formatNumber(data.accidentInsuranceSum || '0'),
          accidentPremium: formatNumber(data.accidentPremium || '0'),
          criticalPackageIncluded: data.criticalPackageIncluded || false,
          criticalPremium: formatNumber(data.criticalPremium || '0')
        };
      } else {
        throw new Error(data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞');
      }
      
      console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', processedData);
      
      setResultData(processedData);
      setCurrentStep(4);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞:', error);
      alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ: ${error.message}`);
    } finally {
      setIsProcessing(false);
    }
  };

  // –°—Ç–∏–ª–∏ (—Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –∏–∑ CareFuturePage.js)
  const mainContainerStyle = {
    position: 'relative',
    width: '100%',
    minHeight: typeof viewportHeight === 'number' ? `${viewportHeight}px` : viewportHeight,
    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
    backgroundSize: 'cover',
    backgroundPosition: 'center',
    backgroundRepeat: 'no-repeat',
    overflowX: 'hidden',      // ‚Üê –¢–æ–ª—å–∫–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª –∑–∞–ø—Ä–µ—â–µ–Ω
    overflowY: 'auto',        // ‚Üê –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª —Ä–∞–∑—Ä–µ—à–µ–Ω
    fontFamily: '"Montserrat", sans-serif',
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    justifyContent: 'flex-start',
    paddingBottom: '50px'     // ‚Üê –î–æ–±–∞–≤–∏–º –æ—Ç—Å—Ç—É–ø —Å–Ω–∏–∑—É
  };

  const logoContainerStyle = {
    position: 'absolute',
    top: '30px',
    left: '50%',
    transform: logoAnimated ? 'translateX(-50%) scale(1)' : 'translateX(-50%) scale(0.8)',
    opacity: logoAnimated ? 1 : 0,
    transition: 'all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94)',
    zIndex: 3
  };

  const logoImageStyle = {
    width: isMobile() ? '80px' : '110px',
    height: 'auto',
    filter: 'drop-shadow(0 4px 20px rgba(0, 0, 0, 0.15))'
  };

  const titleStyle = {
    fontSize: isMobile() ? '20px' : '28px',
    fontWeight: '700',
    color: 'white',
    textAlign: 'center',
    marginTop: '140px',
    marginBottom: '30px',
    textShadow: '0 2px 10px rgba(0, 0, 0, 0.3)',
    opacity: buttonsAnimated ? 1 : 0,
    transform: buttonsAnimated ? 'translateY(0)' : 'translateY(20px)',
    transition: 'all 0.8s ease-out 0.2s'
  };

  const formContainerStyle = {
    position: 'absolute',
    top: currentStep !== 4 ? '200px' : '140px',
    left: '50%',
    transform: 'translateX(-50%)',
    background: 'rgba(255, 255, 255, 0.95)',
    borderRadius: '20px',
    padding: '30px',
    maxHeight: currentStep === 4 ? '80vh' : 'auto',  // ‚Üê –û–≥—Ä–∞–Ω–∏—á–∏–º –≤—ã—Å–æ—Ç—É –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    overflowY: currentStep === 4 ? 'auto' : 'visible', // ‚Üê –°–∫—Ä–æ–ª–ª –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    width: '85%',
    maxWidth: '500px',
    boxShadow: '0 20px 60px rgba(0, 0, 0, 0.3)',
    backdropFilter: 'blur(10px)',
    border: '1px solid rgba(255, 255, 255, 0.2)',
    zIndex: 3,
    animation: buttonsAnimated ? 'fadeInUp 0.8s ease-out' : 'none'
  };

  const formTitleStyle = {
    fontSize: '24px',
    fontWeight: '700',
    color: '#333',
    marginBottom: '20px',
    textAlign: 'center'
  };

  const formGroupStyle = {
    marginBottom: '20px'
  };

  const inputStyle = {
    width: '100%',
    padding: '15px',
    border: '2px solid #e1e8ed',
    borderRadius: '12px',
    fontSize: '16px',
    transition: 'all 0.3s ease',
    backgroundColor: '#f8f9fa',
    outline: 'none',
    fontFamily: 'inherit',
    textAlign: 'center'
  };

  const primaryButtonStyle = {
    width: '100%',
    padding: '15px',
    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
    color: 'white',
    border: 'none',
    borderRadius: '12px',
    fontSize: '16px',
    fontWeight: '600',
    cursor: 'pointer',
    transition: 'all 0.3s ease',
    boxShadow: '0 4px 15px rgba(102, 126, 234, 0.4)',
    fontFamily: 'inherit',
    marginBottom: '10px'
  };

  const secondaryButtonStyle = {
    width: '100%',
    padding: '15px',
    background: 'transparent',
    color: '#667eea',
    border: '2px solid #667eea',
    borderRadius: '12px',
    fontSize: '16px',
    fontWeight: '600',
    cursor: 'pointer',
    transition: 'all 0.3s ease',
    fontFamily: 'inherit',
    marginBottom: '10px'
  };

  const buttonGroupStyle = {
    display: 'flex',
    gap: '15px',
    marginTop: '20px'
  };

  const optionButtonStyle = (selected) => ({
    flex: 1,
    padding: '12px 15px',
    border: selected ? '2px solid #667eea' : '2px solid #e1e8ed',
    borderRadius: '8px',
    fontSize: '14px',
    fontWeight: '500',
    cursor: 'pointer',
    transition: 'all 0.3s ease',
    backgroundColor: selected ? '#667eea' : '#f8f9fa',
    color: selected ? 'white' : '#333',
    fontFamily: 'inherit'
  });

  const navigationButtonStyle = {
    position: 'absolute',
    bottom: '30px',
    width: '50px',
    height: '50px',
    borderRadius: '50%',
    border: 'none',
    cursor: 'pointer',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    fontSize: '24px',
    color: 'white',
    transition: 'all 0.3s ease',
    boxShadow: '0 4px 15px rgba(0, 0, 0, 0.2)',
    zIndex: 4
  };

  const backButtonStyle = {
    ...navigationButtonStyle,
    left: '30px',
    background: 'linear-gradient(135deg, #95a5a6 0%, #7f8c8d 100%)'
  };

  const nextButtonStyle = {
    ...navigationButtonStyle,
    right: '30px',
    background: canGoNext() ? 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)' : 'rgba(189, 195, 199, 0.8)',
    cursor: canGoNext() ? 'pointer' : 'not-allowed'
  };

  // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
  const resultContainerStyle = {
    background: 'rgba(255, 255, 255, 0.95)',
    borderRadius: '16px',
    padding: '30px',
    marginBottom: '20px',
    boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1)',
    backdropFilter: 'blur(10px)',
    border: '1px solid rgba(255, 255, 255, 0.2)'
  };

  const resultItemStyle = {
    display: 'flex',
    justifyContent: 'space-between',
    alignItems: 'center',
    padding: '12px 0',
    borderBottom: '1px solid #f0f0f0'
  };

  const resultLabelStyle = {
    fontWeight: '500',
    color: '#666',
    fontSize: '14px'
  };

  const resultValueStyle = {
    fontWeight: '600',
    color: '#333',
    fontSize: '14px'
  };

  // –†–µ–Ω–¥–µ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —à–∞–≥–∞
  const renderStep = () => {
    if (isProcessing) {
      return (
        <div style={formContainerStyle}>
          <div style={formTitleStyle}>
            {userName}, –∏–¥—ë—Ç —Ä–∞—Å—á—ë—Ç...
          </div>
          <div style={{ textAlign: 'center', padding: '40px 0' }}>
            <div style={{
              width: '40px',
              height: '40px',
              border: '4px solid #f3f3f3',
              borderTop: '4px solid #667eea',
              borderRadius: '50%',
              animation: 'spin 2s linear infinite',
              margin: '0 auto'
            }} />
          </div>
        </div>
      );
    }

    // –®–∞–≥ 4 - —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (–ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –ë–õ–û–ö)
  if (currentStep === 4 && resultData) {
    return (
      <div style={formContainerStyle}>
        <div style={formTitleStyle}>
          –í–∞—à–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ ¬´–ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π¬ª
        </div>
        <div style={{...formTitleStyle, fontSize: '14px', color: '#666', marginBottom: '20px'}}>
          (—Ä–∞—Å—á–µ—Ç –æ—Ç {resultData.calculationDate || new Date().toLocaleDateString('ru-RU')})
        </div>
        
        <div style={resultContainerStyle}>
          {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div style={resultItemStyle}>
            <span style={resultLabelStyle}>–í–æ–∑—Ä–∞—Å—Ç –∫–ª–∏–µ–Ω—Ç–∞:</span>
            <span style={resultValueStyle}>{resultData.clientAge} –ª–µ—Ç</span>
          </div>
          <div style={resultItemStyle}>
            <span style={resultLabelStyle}>–ü–æ–ª –∫–ª–∏–µ–Ω—Ç–∞:</span>
            <span style={resultValueStyle}>{resultData.clientGender}</span>
          </div>
          <div style={resultItemStyle}>
            <span style={resultLabelStyle}>–°—Ä–æ–∫ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è:</span>
            <span style={resultValueStyle}>{resultData.insuranceTerm} –ª–µ—Ç</span>
          </div>
          
          {/* –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å */}
          <div style={{borderTop: '2px solid #e0e0e0', margin: '15px 0'}}></div>
          
          {/* –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ */}
          <div style={{...resultLabelStyle, fontWeight: '700', fontSize: '16px', marginBottom: '10px', color: '#333'}}>
            –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ (—Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –Ω–∞ —Å–ª—É—á–∞–π —É—Ö–æ–¥–∞ –∏–∑ –∂–∏–∑–Ω–∏ –∏ –∏–Ω–≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ I –∏ II –≥—Ä—É–ø–ø—ã –ø–æ –ª—é–±–æ–π –ø—Ä–∏—á–∏–Ω–µ):
          </div>
          <div style={resultItemStyle}>
            <span style={resultLabelStyle}>‚Ä¢ –°—Ç—Ä–∞—Ö–æ–≤–∞—è —Å—É–º–º–∞:</span>
            <span style={resultValueStyle}>{formatNumber(resultData.baseInsuranceSum || resultData.insuranceSum)} —Ä—É–±.</span>
          </div>
          <div style={resultItemStyle}>
            <span style={resultLabelStyle}>‚Ä¢ –°—Ç—Ä–∞—Ö–æ–≤–∞—è –ø—Ä–µ–º–∏—è:</span>
            <span style={resultValueStyle}>{formatNumber(resultData.basePremium)} —Ä—É–±.</span>
          </div>
          
          {/* –ü–∞–∫–µ—Ç –ù–° (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω) */}
          {resultData.accidentPackageIncluded && (
            <>
              <div style={{borderTop: '1px solid #e0e0e0', margin: '15px 0'}}></div>
              <div style={{...resultLabelStyle, fontWeight: '700', fontSize: '16px', marginBottom: '10px', color: '#333'}}>
                –ü–∞–∫–µ—Ç ¬´–ù–µ—Å—á–∞—Å—Ç–Ω—ã–π —Å–ª—É—á–∞–π¬ª:
              </div>
              <div style={resultItemStyle}>
                <span style={resultLabelStyle}>‚Ä¢ –°—Ç—Ä–∞—Ö–æ–≤–∞—è —Å—É–º–º–∞:</span>
                <span style={resultValueStyle}>{formatNumber(resultData.accidentInsuranceSum)} —Ä—É–±.</span>
              </div>
              <div style={resultItemStyle}>
                <span style={resultLabelStyle}>‚Ä¢ –°—Ç—Ä–∞—Ö–æ–≤–∞—è –ø—Ä–µ–º–∏—è:</span>
                <span style={resultValueStyle}>{formatNumber(resultData.accidentPremium)} —Ä—É–±.</span>
              </div>
            </>
          )}
          
          {/* –ü–∞–∫–µ—Ç –ö–ó (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω) */}
          {resultData.criticalPackageIncluded && (
            <>
              <div style={{borderTop: '1px solid #e0e0e0', margin: '15px 0'}}></div>
              <div style={{...resultLabelStyle, fontWeight: '700', fontSize: '16px', marginBottom: '10px', color: '#333'}}>
                {resultData.treatmentRegion === 'russia' ? 
                  '–ü–∞–∫–µ—Ç ¬´–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è (–ª–µ—á–µ–Ω–∏–µ –≤ –†–§)¬ª:' : 
                  '–ü–∞–∫–µ—Ç ¬´–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è (–ª–µ—á–µ–Ω–∏–µ –∑–∞ —Ä—É–±–µ–∂–æ–º)¬ª:'
                }
              </div>
              <div style={{...resultItemStyle, alignItems: 'flex-start'}}>
                <span style={resultLabelStyle}>‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞—Ö–æ–≤–∞—è —Å—É–º–º–∞:</span>
                <span style={resultValueStyle}>
                  60 000 000 —Ä—É–±–ª–µ–π,<br/>
                  –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø–æ —Ä–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏–∏ ‚Äì 100 000 —Ä—É–±–ª–µ–π
                </span>
              </div>
              <div style={resultItemStyle}>
                <span style={resultLabelStyle}>‚Ä¢ –°—Ç—Ä–∞—Ö–æ–≤–∞—è –ø—Ä–µ–º–∏—è:</span>
                <span style={resultValueStyle}>{formatNumber(resultData.criticalPremium)} —Ä—É–±.</span>
              </div>
            </>
          )}
          
          {/* –û–ø—Ü–∏—è —Å–ø–æ—Ä—Ç (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞) */}
          {resultData.sportPackage && (
            <>
              <div style={{borderTop: '1px solid #e0e0e0', margin: '15px 0'}}></div>
              <div style={{...resultLabelStyle, fontWeight: '700', fontSize: '16px', marginBottom: '10px', color: '#333'}}>
                –û–ø—Ü–∏—è ¬´–õ—é–±–∏—Ç–µ–ª—å—Å–∫–∏–π —Å–ø–æ—Ä—Ç¬ª
              </div>
              <div style={{...resultItemStyle, paddingLeft: '15px'}}>
                <span style={{...resultLabelStyle, fontStyle: 'italic'}}>
                  (—É—á—Ç–µ–Ω–∞ –≤ —Ä–∞—Å—á–µ—Ç–µ –ø—Ä–µ–º–∏–π –ù–°)
                </span>
              </div>
            </>
          )}
          
          {/* –ò—Ç–æ–≥–æ */}
          <div style={{borderTop: '2px solid #667eea', margin: '20px 0 10px 0', paddingTop: '15px'}}>
            <div style={resultItemStyle}>
              <span style={{...resultLabelStyle, fontWeight: '700', color: '#333', fontSize: '16px'}}>
                –ò—Ç–æ–≥–æ —Å—Ç—Ä–∞—Ö–æ–≤–∞—è –ø—Ä–µ–º–∏—è:
              </span>
              <span style={{...resultValueStyle, fontWeight: '700', color: '#667eea', fontSize: '18px'}}>
                {formatNumber(resultData.totalPremium || resultData.annualPremium)} —Ä—É–±.
              </span>
            </div>
            <div style={resultItemStyle}>
              <span style={{...resultLabelStyle, fontWeight: '600', color: '#333'}}>
                –ü–æ—Ä—è–¥–æ–∫ –æ–ø–ª–∞—Ç—ã –ø—Ä–µ–º–∏–∏:
              </span>
              <span style={{...resultValueStyle, fontWeight: '600'}}>
                {insuranceFrequency || '–ï–∂–µ–≥–æ–¥–Ω–æ'}
              </span>
            </div>
          </div>
        </div>
        
        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        {resultData.calculator && (
          <div style={{marginTop: '20px', padding: '15px', background: '#f8f9fa', borderRadius: '8px', fontSize: '12px', color: '#666'}}>
            <div>–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä: {resultData.calculator}</div>
            <div>–í–µ—Ä—Å–∏—è: {resultData.version}</div>
            <div>ID —Ä–∞—Å—á–µ—Ç–∞: {resultData.calculationId}</div>
          </div>
        )}
        
        <div style={buttonGroupStyle}>
          <button style={secondaryButtonStyle} onClick={goToMenu}>
            –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
          </button>
          <button style={primaryButtonStyle} onClick={repeatCalculation}>
            –ü–æ–≤—Ç–æ—Ä–∏—Ç—å —Ä–∞—Å—á—ë—Ç
          </button>
        </div>
      </div>
    );
  }

    // –®–∞–≥ 1 - –æ—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    if (currentStep === 1) {
      return (
        <div style={formContainerStyle}>
          <div style={formTitleStyle}>–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</div>
          
          <div style={formGroupStyle}>
            <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500', color: '#333' }}>
              –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è
            </label>
            <DateWheelPicker
              value={{
              day: birthDate ? birthDate.getDate().toString().padStart(2, '0') : '01',
              month: birthDate ? (birthDate.getMonth() + 1).toString().padStart(2, '0') : '01',
              year: birthDate ? birthDate.getFullYear().toString() : new Date().getFullYear().toString()
            }}
            onChange={(val) => {
              if (val?.day && val?.month && val?.year) {
                const date = new Date(parseInt(val.year), parseInt(val.month) - 1, parseInt(val.day));
                setBirthDate(date);
              }
            }}
          />
          </div>

          <div style={formGroupStyle}>
            <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500', color: '#333' }}>
              –ü–æ–ª
            </label>
            <div style={buttonGroupStyle}>
              <button
                style={optionButtonStyle(gender === '–ú—É–∂—Å–∫–æ–π')}
                onClick={() => setGender('–ú—É–∂—Å–∫–æ–π')}
              >
                –ú—É–∂—Å–∫–æ–π
              </button>
              <button
                style={optionButtonStyle(gender === '–ñ–µ–Ω—Å–∫–∏–π')}
                onClick={() => setGender('–ñ–µ–Ω—Å–∫–∏–π')}
              >
                –ñ–µ–Ω—Å–∫–∏–π
              </button>
            </div>
          </div>

          <div style={formGroupStyle}>
            <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500', color: '#333' }}>
              –ó–Ω–∞–µ—Ç–µ –ª–∏ –≤—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Å—É–º–º—É —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è?
            </label>
            <div style={buttonGroupStyle}>
              <button
                style={optionButtonStyle(insuranceInfo === 'yes')}
                onClick={() => setInsuranceInfo('yes')}
              >
                –î–∞
              </button>
              <button
                style={optionButtonStyle(insuranceInfo === 'no')}
                onClick={() => setInsuranceInfo('no')}
              >
                –ù–µ—Ç
              </button>
            </div>
          </div>
        </div>
      );
    }

    // –®–∞–≥ 2 - –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è
    if (currentStep === 2) {
      return (
        <div style={formContainerStyle}>
          <div style={formTitleStyle}>
            {insuranceInfo === 'yes' ? '–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è' : '–†–∞—Å—á—ë—Ç —Å—É–º–º—ã —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è'}
          </div>
          
          {insuranceInfo === 'yes' ? (
            <>
              <div style={formGroupStyle}>
                <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500', color: '#333' }}>
                  –°—Ä–æ–∫ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è: <span style={{fontWeight: '700', color: '#667eea'}}>{insuranceTerm} –ª–µ—Ç</span>
                </label>
                <div style={{position: 'relative', margin: '20px 0'}}>
                  <input
                    type="range"
                    min="1"
                    max="30"
                    value={insuranceTerm}
                    onChange={(e) => setInsuranceTerm(e.target.value)}
                    style={{
                      width: '100%',
                      height: '8px',
                      borderRadius: '5px',
                      background: `linear-gradient(to right, #667eea 0%, #667eea ${((insuranceTerm - 1) / 29) * 100}%, #e1e8ed ${((insuranceTerm - 1) / 29) * 100}%, #e1e8ed 100%)`,
                      outline: 'none',
                      WebkitAppearance: 'none',
                      cursor: 'pointer'
                    }}
                  />
                  <style jsx>{`
                    input[type="range"]::-webkit-slider-thumb {
                      -webkit-appearance: none;
                      appearance: none;
                      width: 24px;
                      height: 24px;
                      border-radius: 50%;
                      background: #667eea;
                      cursor: pointer;
                      box-shadow: 0 2px 6px rgba(102, 126, 234, 0.3);
                      border: 3px solid white;
                    }
      
                    input[type="range"]::-moz-range-thumb {
                      width: 24px;
                      height: 24px;
                      border-radius: 50%;
                      background: #667eea;
                      cursor: pointer;
                      box-shadow: 0 2px 6px rgba(102, 126, 234, 0.3);
                      border: 3px solid white;
                    }
                  `}</style>
    
                  {/* –ü–æ–¥–ø–∏—Å–∏ –ø–æ–¥ –ø–æ–ª–∑—É–Ω–∫–æ–º */}
                  <div style={{
                    display: 'flex', 
                    justifyContent: 'space-between', 
                    marginTop: '10px',
                    fontSize: '12px',
                    color: '#666'
                  }}>
                    <span>1 –≥–æ–¥</span>
                    <span>15 –ª–µ—Ç</span>
                    <span>30 –ª–µ—Ç</span>
                  </div>
                </div>
              </div>

              <div style={formGroupStyle}>
                <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500', color: '#333' }}>
                  –°—Ç—Ä–∞—Ö–æ–≤–∞—è —Å—É–º–º–∞ (—Ä—É–±.)
                </label>
                <input
                  type="text"
                  style={inputStyle}
                  value={insuranceSum}
                  onChange={handleSumChange}
                  placeholder="–ú–∏–Ω–∏–º—É–º 1.000.000"
                />
              </div>

              <div style={formGroupStyle}>
                <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500', color: '#333' }}>
                  –ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –æ–ø–ª–∞—Ç—ã
                </label>
                <div style={{display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '10px', marginBottom: '10px'}}>
                  <button
                    style={optionButtonStyle(insuranceFrequency === '–ï–∂–µ–≥–æ–¥–Ω–æ')}
                    onClick={() => setInsuranceFrequency('–ï–∂–µ–≥–æ–¥–Ω–æ')}
                  >
                    –ï–∂–µ–≥–æ–¥–Ω–æ
                  </button>
                  <button
                    style={optionButtonStyle(insuranceFrequency === '–ï–∂–µ–º–µ—Å—è—á–Ω–æ')}
                    onClick={() => setInsuranceFrequency('–ï–∂–µ–º–µ—Å—è—á–Ω–æ')}
                  >
                    –ï–∂–µ–º–µ—Å—è—á–Ω–æ
                  </button>
                </div>
                <div style={{display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '10px'}}>
                  <button
                    style={optionButtonStyle(insuranceFrequency === '–ü–æ–∫–≤–∞—Ä—Ç–∞–ª—å–Ω–æ')}
                    onClick={() => setInsuranceFrequency('–ü–æ–∫–≤–∞—Ä—Ç–∞–ª—å–Ω–æ')}
                  >
                    –ï–∂–µ–∫–≤–∞—Ä—Ç–∞–ª—å–Ω–æ
                  </button>
                  <button
                    style={optionButtonStyle(insuranceFrequency === '–ü–æ–ª—É–≥–æ–¥–∏–µ')}
                    onClick={() => setInsuranceFrequency('–ü–æ–ª—É–≥–æ–¥–∏–µ')}
                  >
                    –†–∞–∑ –≤ –ø–æ–ª –≥–æ–¥–∞
                  </button>
                </div>
              </div>
            </>
          ) : (
            <>
              <div style={formGroupStyle}>
                <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500', color: '#333' }}>
                  –ï—Å—Ç—å –ª–∏ —É –≤–∞—Å —Ä–∞–±–æ—Ç–∞?
                </label>
                <div style={buttonGroupStyle}>
                  <button
                    style={optionButtonStyle(hasJob === 'yes')}
                    onClick={() => setHasJob('yes')}
                  >
                    –î–∞
                  </button>
                  <button
                    style={optionButtonStyle(hasJob === 'no')}
                    onClick={() => setHasJob('no')}
                  >
                    –ù–µ—Ç
                  </button>
                </div>
              </div>

              <div style={formGroupStyle}>
                <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500', color: '#333' }}>
                  –î–æ—Ö–æ–¥—ã 2021 –≥. (—Ä—É–±.)
                </label>
                <input
                  type="text"
                  style={inputStyle}
                  value={income2021}
                  onChange={handleIncome2021Change}
                  placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É"
                />
              </div>

              <div style={formGroupStyle}>
                <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500', color: '#333' }}>
                  –î–æ—Ö–æ–¥—ã 2022 –≥. (—Ä—É–±.)
                </label>
                <input
                  type="text"
                  style={inputStyle}
                  value={income2022}
                  onChange={handleIncome2022Change}
                  placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É"
                />
              </div>

              <div style={formGroupStyle}>
                <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500', color: '#333' }}>
                  –î–æ—Ö–æ–¥—ã 2023 –≥. (—Ä—É–±.)
                </label>
                <input
                  type="text"
                  style={inputStyle}
                  value={income2023}
                  onChange={handleIncome2023Change}
                  placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É"
                />
              </div>
            </>
          )}
        </div>
      );
    }

    // –®–∞–≥ 3 - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
    if (currentStep === 3) {
      return (
        <div style={formContainerStyle}>
          <div style={formTitleStyle}>
            {insuranceInfo === 'yes' ? '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞–∫–µ—Ç—ã' : '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'}
          </div>
          
          {insuranceInfo === 'yes' ? (
            <>
              <div style={formGroupStyle}>
                <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500', color: '#333' }}>
                  –ü–∞–∫–µ—Ç ¬´–ù–µ—Å—á–∞—Å—Ç–Ω—ã–π —Å–ª—É—á–∞–π¬ª
                </label>
                <div style={buttonGroupStyle}>
                  <button
                    style={optionButtonStyle(accidentPackage === 'yes')}
                    onClick={() => setAccidentPackage('yes')}
                  >
                    –í–∫–ª—é—á–∏—Ç—å
                  </button>
                  <button
                    style={optionButtonStyle(accidentPackage === 'no')}
                    onClick={() => setAccidentPackage('no')}
                  >
                    –ù–µ –≤–∫–ª—é—á–∞—Ç—å
                  </button>
                </div>
              </div>

              <div style={formGroupStyle}>
                <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500', color: '#333' }}>
                  –ü–∞–∫–µ—Ç ¬´–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è¬ª
                </label>
                <div style={buttonGroupStyle}>
                  <button
                    style={optionButtonStyle(criticalPackage === 'yes')}
                    onClick={() => setCriticalPackage('yes')}
                  >
                    –í–∫–ª—é—á–∏—Ç—å
                  </button>
                  <button
                    style={optionButtonStyle(criticalPackage === 'no')}
                    onClick={() => setCriticalPackage('no')}
                  >
                    –ù–µ –≤–∫–ª—é—á–∞—Ç—å
                  </button>
                </div>
              </div>

              {criticalPackage === 'yes' && (
                <div style={formGroupStyle}>
                  <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500', color: '#333' }}>
                    –†–µ–≥–∏–æ–Ω –ª–µ—á–µ–Ω–∏—è
                  </label>
                  <div style={buttonGroupStyle}>
                    <button
                      style={optionButtonStyle(treatmentRegion === 'russia')}
                      onClick={() => setTreatmentRegion('russia')}
                    >
                      –†–æ—Å—Å–∏—è
                    </button>
                    <button
                      style={optionButtonStyle(treatmentRegion === 'abroad')}
                      onClick={() => setTreatmentRegion('abroad')}
                    >
                      –ó–∞ —Ä—É–±–µ–∂–æ–º
                    </button>
                  </div>
                </div>
              )}

              <div style={formGroupStyle}>
                <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500', color: '#333' }}>
                  –õ—é–±–∏—Ç–µ–ª—å—Å–∫–∏–π —Å–ø–æ—Ä—Ç
                </label>
                <div style={buttonGroupStyle}>
                  <button
                    style={optionButtonStyle(sportPackage === 'yes')}
                    onClick={() => setSportPackage('yes')}
                  >
                    –í–∫–ª—é—á–∏—Ç—å
                  </button>
                  <button
                    style={optionButtonStyle(sportPackage === 'no')}
                    onClick={() => setSportPackage('no')}
                  >
                    –ù–µ –≤–∫–ª—é—á–∞—Ç—å
                  </button>
                </div>
              </div>
            </>
          ) : (
            <>
              <div style={formGroupStyle}>
                <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500', color: '#333' }}>
                  –Ø–≤–ª—è–µ—Ç–µ—Å—å –ª–∏ –≤—ã –æ—Å–Ω–æ–≤–Ω—ã–º –∫–æ—Ä–º–∏–ª—å—Ü–µ–º?
                </label>
                <div style={buttonGroupStyle}>
                  <button
                    style={optionButtonStyle(breadwinnerStatus === 'yes')}
                    onClick={() => setBreadwinnerStatus('yes')}
                  >
                    –î–∞
                  </button>
                  <button
                    style={optionButtonStyle(breadwinnerStatus === 'no')}
                    onClick={() => setBreadwinnerStatus('no')}
                  >
                    –ù–µ—Ç
                  </button>
                </div>
              </div>

              {breadwinnerStatus === 'no' && (
                <div style={formGroupStyle}>
                  <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500', color: '#333' }}>
                    –î–æ–ª—è –≤–∞—à–µ–≥–æ –¥–æ—Ö–æ–¥–∞ –≤ —Å–µ–º–µ–π–Ω–æ–º –±—é–¥–∂–µ—Ç–µ (%)
                  </label>
                  <input
                    type="number"
                    style={inputStyle}
                    value={incomeShare}
                    onChange={(e) => setIncomeShare(e.target.value)}
                    min="0"
                    max="100"
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç"
                  />
                </div>
              )}

              <div style={formGroupStyle}>
                <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500', color: '#333' }}>
                  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π
                </label>
                <input
                  type="number"
                  style={inputStyle}
                  value={childrenCount}
                  onChange={(e) => setChildrenCount(e.target.value)}
                  min="0"
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ"
                />
              </div>

              <div style={formGroupStyle}>
                <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500', color: '#333' }}>
                  –ï—Å—Ç—å –ª–∏ —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–∏, –Ω—É–∂–¥–∞—é—â–∏–µ—Å—è –≤ –æ—Å–æ–±–æ–º —É—Ö–æ–¥–µ?
                </label>
                <div style={buttonGroupStyle}>
                  <button
                    style={optionButtonStyle(specialCareRelatives === 'yes')}
                    onClick={() => setSpecialCareRelatives('yes')}
                  >
                    –î–∞
                  </button>
                  <button
                    style={optionButtonStyle(specialCareRelatives === 'no')}
                    onClick={() => setSpecialCareRelatives('no')}
                  >
                    –ù–µ—Ç
                  </button>
                </div>
              </div>
            </>
          )}
        </div>
      );
    }

    return null;
  };

  return (
    <div style={mainContainerStyle} className={isExiting ? 'exiting' : ''}>
      {/* –õ–æ–≥–æ—Ç–∏–ø */}
      <div style={logoContainerStyle}>
        <img src={logoImage} alt="Logo" style={logoImageStyle} />
      </div>

      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      {currentStep !== 4 && (
        <div style={titleStyle}>
          –†–∞—Å—á—ë—Ç –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–µ "–ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π"
        </div>
      )}

      {/* –ö–æ–Ω—Ç–µ–Ω—Ç */}
      {renderStep()}

      {/* –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
      {currentStep > 1 && currentStep < 4 && (
        <button style={backButtonStyle} onClick={handlePrev}>
          ‚Üê
        </button>
      )}

      {currentStep === 1 && (
        <button style={backButtonStyle} onClick={goToMenu}>
          üè†
        </button>
      )}

      {currentStep < 4 && !isProcessing && (
        <button style={nextButtonStyle} onClick={handleNext} disabled={!canGoNext()}>
          ‚Üí
        </button>
      )}

      {/* –°—Ç–∏–ª–∏ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π */}
      <style jsx>{`
        @keyframes fadeInUp {
          from {
            opacity: 0;
            transform: translateY(30px);
          }
          to {
            opacity: 1;
            transform: translateY(0);
          }
        }

        @keyframes spin {
          0% { transform: rotate(0deg); }
          100% { transform: rotate(360deg); }
        }

        @keyframes piFloatAround {
          0% { transform: translate(0, 0) rotate(0deg); }
          25% { transform: translate(80vw, 20vh) rotate(90deg); }
          50% { transform: translate(60vw, 80vh) rotate(180deg); }
          75% { transform: translate(10vw, 70vh) rotate(270deg); }
          100% { transform: translate(0, 0) rotate(360deg); }
        }

        @keyframes piRotate {
          0% { transform: rotate(0deg); }
          100% { transform: rotate(360deg); }
        }

        .exiting {
          animation: fadeOut 0.7s ease-out forwards;
        }

        @keyframes fadeOut {
          to {
            opacity: 0;
            transform: scale(0.95);
          }
        }
      `}</style>
    </div>
  );
};

export default JustincasePage;








































