// src/TestButton.js - –° –ü–û–î–î–ï–†–ñ–ö–û–ô TOUCH –°–û–ë–´–¢–ò–ô
import React, { useEffect } from 'react';

const TestButton = () => {
  const handleClick = () => {
    alert('‚úÖ –ö–Ω–æ–ø–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç! –ö–ª–∏–∫ —Å—Ä–∞–±–æ—Ç–∞–ª!');
    console.log('‚úÖ –¢–ï–°–¢: Click —Å–æ–±—ã—Ç–∏–µ —Å—Ä–∞–±–æ—Ç–∞–ª!');
  };

  const handleTouchStart = (e) => {
    console.log('üëÜ –¢–ï–°–¢: TouchStart —Å—Ä–∞–±–æ—Ç–∞–ª!');
    // –£–±–∏—Ä–∞–µ–º preventDefault - –æ–Ω –≤—ã–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É –≤ passive listeners
  };

  const handleTouchEnd = (e) => {
    console.log('üëÜ –¢–ï–°–¢: TouchEnd —Å—Ä–∞–±–æ—Ç–∞–ª!');
    // –£–±–∏—Ä–∞–µ–º preventDefault - –æ–Ω –≤—ã–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É –≤ passive listeners
    // –ö–ª–∏–∫ –∏ —Ç–∞–∫ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ touch
  };

  const handleMouseDown = (e) => {
    console.log('üñ±Ô∏è –¢–ï–°–¢: MouseDown —Å—Ä–∞–±–æ—Ç–∞–ª!');
  };

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    const checkEvents = () => {
      console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É —Å–æ–±—ã—Ç–∏–π:');
      console.log('  - Touch –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è:', 'ontouchstart' in window);
      console.log('  - Pointer –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è:', 'onpointerdown' in window);
      console.log('  - Mouse –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è:', 'onmousedown' in window);
      console.log('  - User agent:', navigator.userAgent);
    };
    
    setTimeout(checkEvents, 1000);
  }, []);

  // –ê–ì–†–ï–°–°–ò–í–ù–´–ï –°–¢–ò–õ–ò —Å !important –∏ –±–µ–∑ user-select: none
  const aggressiveButtonStyle = {
    position: 'fixed',
    top: '50%',
    left: '50%',
    transform: 'translate(-50%, -50%)',
    zIndex: '2147483647',
    padding: '30px 50px',
    backgroundColor: '#ff0000',
    color: '#ffffff',
    border: '5px solid #ffff00',
    borderRadius: '10px',
    fontSize: '20px',
    fontWeight: 'bold',
    cursor: 'pointer',
    minWidth: '250px',
    minHeight: '80px',
    textAlign: 'center',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    boxShadow: '0 10px 30px rgba(0,0,0,0.8)',
    userSelect: 'auto' // ‚Üê –í–ê–ñ–ù–û: —Ä–∞–∑—Ä–µ—à–∞–µ–º selection
  };

  return (
    <>
      {/* –¢–µ—Å—Ç–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞ —Å –ü–û–õ–ù–û–ô –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Å–æ–±—ã—Ç–∏–π */}
      <button 
        className="aggressive-test-button"
        style={aggressiveButtonStyle}
        onClick={handleClick}
        onTouchStart={handleTouchStart}
        onTouchEnd={handleTouchEnd}
        onMouseDown={handleMouseDown}
        onMouseEnter={() => console.log('üñ±Ô∏è –¢–ï–°–¢: MouseEnter —Å—Ä–∞–±–æ—Ç–∞–ª')}
        onPointerDown={() => console.log('üëâ –¢–ï–°–¢: PointerDown —Å—Ä–∞–±–æ—Ç–∞–ª')}
      >
        üö® –¢–ï–°–¢ –ö–õ–ò–ö–ê üö®
      </button>
      
      {/* –°—Ç–∏–ª–∏ —Å !important –ù–û –ë–ï–ó user-select: none */}
      <style dangerouslySetInnerHTML={{
        __html: `
          .aggressive-test-button {
            position: fixed !important;
            top: 50% !important;
            left: 50% !important;
            transform: translate(-50%, -50%) !important;
            z-index: 2147483647 !important;
            padding: 30px 50px !important;
            background-color: #ff0000 !important;
            color: #ffffff !important;
            border: 5px solid #ffff00 !important;
            border-radius: 10px !important;
            font-size: 20px !important;
            font-weight: bold !important;
            cursor: pointer !important;
            min-width: 250px !important;
            min-height: 80px !important;
            text-align: center !important;
            display: flex !important;
            align-items: center !important;
            justify-content: center !important;
            box-shadow: 0 10px 30px rgba(0,0,0,0.8) !important;
            pointer-events: auto !important;
            visibility: visible !important;
            opacity: 1 !important;
            user-select: auto !important;
            -webkit-user-select: auto !important;
            -webkit-touch-callout: auto !important;
            -webkit-tap-highlight-color: rgba(255,255,255,0.3) !important;
            touch-action: manipulation !important;
          }
          
          .aggressive-test-button:hover {
            background-color: #ff6666 !important;
            transform: translate(-50%, -50%) scale(1.05) !important;
          }

          .aggressive-test-button:active {
            background-color: #cc0000 !important;
            transform: translate(-50%, -50%) scale(0.98) !important;
          }
        `
      }} />
      
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –±–ª–æ–∫ */}
      <div style={{
        position: 'fixed',
        top: '20px',
        left: '20px',
        background: 'black',
        color: 'yellow',
        padding: '15px',
        fontSize: '14px',
        zIndex: '2147483647',
        pointerEvents: 'none',
        border: '2px solid yellow',
        borderRadius: '4px',
        maxWidth: '350px',
        lineHeight: '1.4'
      }}>
        <strong>üîç –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:</strong>
        <br />
        üìç –£–±—Ä–∞–Ω user-select: none
        <br />
        üìç –î–æ–±–∞–≤–ª–µ–Ω—ã touch —Å–æ–±—ã—Ç–∏—è  
        <br />
        üìç –†–∞–∑—Ä–µ—à–µ–Ω—ã tap —Å–æ–±—ã—Ç–∏—è
        <br />
        üìç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Console ‚Üí –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–æ–±—ã—Ç–∏–π
      </div>
    </>
  );
};

export default TestButton;