// MainMenu.js - –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø –ë–ï–ó –õ–û–ì–ò–ö–ò –§–û–ù–û–í
// ‚úÖ –í—Å—è –ª–æ–≥–∏–∫–∞ —Ñ–æ–Ω–æ–≤ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –≤ MainApp.js
// ‚úÖ –ü—Ä–∏–º–µ–Ω–µ–Ω—ã –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ü–≤–µ—Ç–∞: R:180 G:0 B:55, R:152 G:164 B:174, R:0 G:40 B:130
// ‚úÖ –°–µ–º–µ–π—Å—Ç–≤–æ —à—Ä–∏—Ñ—Ç–æ–≤: Segoe UI Bold –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤, Segoe UI Regular –¥–ª—è —Ç–µ–∫—Å—Ç–∞
// ‚úÖ –ò–Ω–ª–∞–π–Ω —Å—Ç–∏–ª–∏ –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π –ø–æ–¥—Ö–æ–¥
// ‚úÖ –£–±—Ä–∞–Ω—ã –∏–º–ø–æ—Ä—Ç—ã —Ñ–æ–Ω–æ–≤ - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ MainApp.js

import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';

// –£–ü–†–û–©–ï–ù–ù–´–ï –ò–ú–ü–û–†–¢–´ - —É–±—Ä–∞–Ω backgroundImage
import logoImage from './components/logo.png';
import piImage from './components/pi.png';

export default function MainMenu() {
  const navigate = useNavigate();
  
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–π
  const [logoAnimated, setLogoAnimated] = useState(false);
  const [buttonsAnimated, setButtonsAnimated] = useState(false);
  const [isExiting, setIsExiting] = useState(false);
  
  // –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∞–Ω–∏–º–∞—Ü–∏–π Pi
  const [moveDuration] = useState('70s');
  const [rotateDuration] = useState('6s');

  // ===== –°–¢–ò–õ–ò =====

  // –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä - –ë–ï–ó –§–û–ù–ê (—Ñ–æ–Ω —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ MainApp.js)
  const mainContainerStyle = {
    position: 'relative',
    width: '100%',
    height: '100vh',
    minHeight: '100vh',
    overflow: 'hidden',
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'center',
    alignItems: 'center',
    fontFamily: '"Segoe UI", sans-serif',
    zIndex: 2, // –ü–æ–≤–µ—Ä—Ö —Ñ–æ–Ω–∞ –∏–∑ MainApp.js
    
    // –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
    '@supports (-webkit-touch-callout: none)': {
      height: '-webkit-fill-available',
      minHeight: '-webkit-fill-available'
    }
  };

  // –û–≤–µ—Ä–ª–µ–π —Å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º –ø–æ–≤–µ—Ä—Ö —Ñ–æ–Ω–∞ –∏–∑ MainApp.js
  const overlayStyle = {
    position: 'absolute',
    top: 0,
    left: 0,
    width: '100%',
    height: '100%',
    background: `linear-gradient(135deg, 
      rgba(180, 0, 55, 0.1) 0%,     /* –õ–µ–≥–∫–∏–π –∫—Ä–∞—Å–Ω—ã–π –æ–≤–µ—Ä–ª–µ–π */
      rgba(152, 164, 174, 0.05) 50%, /* –õ–µ–≥–∫–∏–π —Å–µ—Ä—ã–π –æ–≤–µ—Ä–ª–µ–π */
      rgba(0, 40, 130, 0.1) 100%     /* –õ–µ–≥–∫–∏–π —Å–∏–Ω–∏–π –æ–≤–µ—Ä–ª–µ–π */
    )`,
    zIndex: 1
  };

  // –õ–æ–≥–æ—Ç–∏–ø —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
  const logoStyle = {
    position: 'absolute',
    top: logoAnimated && !isExiting ? '110px' : isExiting ? '-200px' : '-200px',
    left: '50%',
    transform: 'translateX(-50%)',
    width: '160px',
    height: '160px',
    backgroundColor: 'rgba(255, 255, 255, 0.10)',
    backdropFilter: 'blur(8px)',
    borderRadius: '20px',
    boxShadow: `
      0 10px 25px rgba(0, 0, 0, 0.25),
      0 5px 15px rgba(180, 0, 55, 0.2)
    `,
    opacity: logoAnimated && !isExiting ? 1 : 0,
    zIndex: 3,
    transition: 'all 0.8s ease-out',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    border: '1px solid rgba(255, 255, 255, 0.2)'
  };

  const logoImageStyle = {
    width: '120px',
    height: '120px',
    objectFit: 'contain'
  };

  // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–Ω–æ–ø–æ–∫ - –ü–û–ó–ò–¶–ò–û–ù–ò–†–£–ï–ú –ü–û–î –õ–û–ì–û–¢–ò–ü–û–ú
  const buttonContainerStyle = {
    position: 'absolute',
    top: buttonsAnimated ? '300px' : '400px', // –ü–æ–¥ –ª–æ–≥–æ—Ç–∏–ø–æ–º
    left: '50%',
    transform: 'translateX(-50%)',
    display: 'flex',
    flexDirection: 'column',
    gap: '20px',
    justifyContent: 'center',
    alignItems: 'center',
    width: '100%',
    maxWidth: '400px',
    zIndex: 3,
    paddingLeft: '20px',
    paddingRight: '20px',
    boxSizing: 'border-box',
    opacity: buttonsAnimated ? 1 : 0,
    transition: 'all 0.8s ease-out'
  };

  // –ë–∞–∑–æ–≤—ã–π —Å—Ç–∏–ª—å –∫–Ω–æ–ø–∫–∏ —Å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º–∏ —Ü–≤–µ—Ç–∞–º–∏
  const baseButtonStyle = {
    width: '100%',
    padding: '15px 25px',
    fontSize: '16px',
    fontFamily: '"Segoe UI", sans-serif',
    fontWeight: 'bold',
    color: 'white',
    background: `linear-gradient(135deg, 
      rgba(180, 0, 55, 0.9) 0%, 
      rgba(153, 0, 55, 1) 100%
    )`,
    border: 'none',
    borderRadius: '12px',
    cursor: 'pointer',
    textAlign: 'center',
    textDecoration: 'none',
    display: 'block',
    transition: 'all 0.3s ease',
    backdropFilter: 'blur(10px)',
    boxShadow: `
      0 4px 15px rgba(180, 0, 55, 0.3),
      0 2px 8px rgba(0, 0, 0, 0.2)
    `,
    border: '1px solid rgba(255, 255, 255, 0.1)'
  };

  // Hover —ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∫–Ω–æ–ø–æ–∫
  const buttonHoverStyle = {
    ...baseButtonStyle,
    background: `linear-gradient(135deg, 
      rgba(152, 164, 174, 0.9) 0%, 
      rgba(118, 143, 146, 1) 100%
    )`,
    transform: 'translateY(-2px)',
    boxShadow: `
      0 6px 20px rgba(152, 164, 174, 0.4),
      0 3px 10px rgba(0, 0, 0, 0.3)
    `
  };

  // Pi —ç–ª–µ–º–µ–Ω—Ç
  const piStyle = {
    position: 'absolute',
    width: '40px',
    height: '40px',
    opacity: 0.4,
    zIndex: 2,
    animation: `piMove ${moveDuration} linear infinite, piRotate ${rotateDuration} linear infinite`
  };

  // ===== –ê–ù–ò–ú–ê–¶–ò–ò =====

  // CSS-–≤-JS –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ Pi
  const keyframesStyle = `
    @keyframes piMove {
      0% { top: 100%; left: -50px; }
      25% { top: -50px; left: 25%; }
      50% { top: 100%; left: 50%; }
      75% { top: -50px; left: 75%; }
      100% { top: 100%; left: calc(100% + 50px); }
    }
    
    @keyframes piRotate {
      from { transform: rotate(0deg); }
      to { transform: rotate(360deg); }
    }
  `;

  // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏ –≤ head
  useEffect(() => {
    const styleId = 'mainmenu-animations';
    if (!document.getElementById(styleId)) {
      const style = document.createElement('style');
      style.id = styleId;
      style.textContent = keyframesStyle;
      document.head.appendChild(style);
    }
  }, []);

  // –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏
  useEffect(() => {
    const logoTimer = setTimeout(() => {
      setLogoAnimated(true);
    }, 300);

    const buttonsTimer = setTimeout(() => {
      setButtonsAnimated(true);
    }, 800);

    return () => {
      clearTimeout(logoTimer);
      clearTimeout(buttonsTimer);
    };
  }, []);

  // –ù–∞–≤–∏–≥–∞—Ü–∏—è —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π –≤—ã—Ö–æ–¥–∞
  const handleNavigation = (path) => {
    setIsExiting(true);
    setTimeout(() => {
      navigate(path);
    }, 500);
  };

  return (
    <div style={mainContainerStyle}>
      {/* –û–≤–µ—Ä–ª–µ–π –ø–æ–≤–µ—Ä—Ö —Ñ–æ–Ω–∞ –∏–∑ MainApp.js */}
      <div style={overlayStyle} />

      {/* –õ–æ–≥–æ—Ç–∏–ø */}
      <div style={logoStyle}>
        <img src={logoImage} alt="–õ–æ–≥–æ—Ç–∏–ø" style={logoImageStyle} />
      </div>

      {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–Ω–æ–ø–æ–∫ */}
      <div style={buttonContainerStyle}>
        <button
          style={baseButtonStyle}
          onClick={() => handleNavigation('/polls')}
          onMouseEnter={(e) => Object.assign(e.target.style, buttonHoverStyle)}
          onMouseLeave={(e) => Object.assign(e.target.style, baseButtonStyle)}
        >
          üìä –û–ø—Ä–æ—Å—ã
        </button>

        <button
          style={baseButtonStyle}
          onClick={() => handleNavigation('/snp')}
          onMouseEnter={(e) => Object.assign(e.target.style, buttonHoverStyle)}
          onMouseLeave={(e) => Object.assign(e.target.style, baseButtonStyle)}
        >
          üéØ SNP –ê–Ω–∞–ª–∏–∑
        </button>

        <button
          style={baseButtonStyle}
          onClick={() => handleNavigation('/employee')}
          onMouseEnter={(e) => Object.assign(e.target.style, buttonHoverStyle)}
          onMouseLeave={(e) => Object.assign(e.target.style, baseButtonStyle)}
        >
          üë• –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏
        </button>

        <button
          style={baseButtonStyle}
          onClick={() => handleNavigation('/assessment')}
          onMouseEnter={(e) => Object.assign(e.target.style, buttonHoverStyle)}
          onMouseLeave={(e) => Object.assign(e.target.style, baseButtonStyle)}
        >
          üìù –û—Ü–µ–Ω–∫–∞
        </button>

        <button
          style={baseButtonStyle}
          onClick={() => handleNavigation('/carefuture')}
          onMouseEnter={(e) => Object.assign(e.target.style, buttonHoverStyle)}
          onMouseLeave={(e) => Object.assign(e.target.style, baseButtonStyle)}
        >
          üíº –ù–°–ñ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
        </button>

        <button
          style={baseButtonStyle}
          onClick={() => handleNavigation('/marzapoll')}
          onMouseEnter={(e) => Object.assign(e.target.style, buttonHoverStyle)}
          onMouseLeave={(e) => Object.assign(e.target.style, baseButtonStyle)}
        >
          üí∞ –ú–∞—Ä–∂–∞ –û–ø—Ä–æ—Å
        </button>
      </div>

      {/* Pi —ç–ª–µ–º–µ–Ω—Ç */}
      <img src={piImage} alt="Pi" style={piStyle} />
    </div>
  );
}















































