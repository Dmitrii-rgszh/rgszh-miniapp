// MainApp.js - –£–ü–†–û–©–ï–ù–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –§–û–ù–û–í
// ‚úÖ –ü—Ä–æ—Å—Ç–æ–π —Ü–∏–∫–ª: background1 ‚Üí background2 ‚Üí background3 ‚Üí background1...
// ‚úÖ –¢–æ–ª—å–∫–æ –ø–ª–∞–≤–Ω–æ–µ —Ä–∞—Å—Ç–≤–æ—Ä–µ–Ω–∏–µ (crossfade) –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö –∞–Ω–∏–º–∞—Ü–∏–π
// ‚úÖ –ü—Ä–∏–º–µ–Ω–µ–Ω—ã –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ü–≤–µ—Ç–∞: R:180 G:0 B:55, R:152 G:164 B:174, R:0 G:40 B:130
// ‚úÖ –°–µ–º–µ–π—Å—Ç–≤–æ —à—Ä–∏—Ñ—Ç–æ–≤: Segoe UI Bold –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤, Segoe UI Regular –¥–ª—è —Ç–µ–∫—Å—Ç–∞
// ‚úÖ –ò–Ω–ª–∞–π–Ω —Å—Ç–∏–ª–∏ –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π –ø–æ–¥—Ö–æ–¥
// ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–º–µ–Ω–∞ —Ñ–æ–Ω–æ–≤ –∫–∞–∂–¥—ã–µ 15 —Å–µ–∫—É–Ω–¥
// ‚úÖ –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ Safe Area –¥–ª—è –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü

import React, { useState, useEffect } from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';

// –ò–º–ø–æ—Ä—Ç—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
import WelcomePage     from './WelcomePage';
import MainMenu        from './MainMenu';
import PollsPage       from './PollsPage';
import SNPPage         from './SNPPage';
import EmployeePage    from './EmployeePage';
import AssessmentPage  from './AssessmentPage';
import FeedbackPage    from './FeedbackPage';
import JustincasePage  from './JustincasePage';
import CareFuturePage  from './CareFuturePage';
import MarzaPollPage   from './MarzaPollPage';

// ===== –¶–ï–ù–¢–†–ê–õ–ò–ó–û–í–ê–ù–ù–´–ï –ò–ú–ü–û–†–¢–´ –§–û–ù–û–í =====

// –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã —Ñ–æ–Ω–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ –ø–∞–ø–∫–∏ background/
let backgroundImage1, backgroundImage2, backgroundImage3, defaultBackground;

// –ò–º–ø–æ—Ä—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–æ–Ω–∞ (fallback)
try {
  defaultBackground = require('./components/background.png');
} catch (error) {
  console.warn('Default background not found');
  defaultBackground = null;
}

// –ò–º–ø–æ—Ä—Ç —Ñ–æ–Ω–æ–≤ –∏–∑ –ø–∞–ø–∫–∏ background/ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Ä–∞–∑–Ω—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π
try {
  backgroundImage1 = require('./components/background/background1.png');
} catch (error) {
  try {
    backgroundImage1 = require('./components/background/background (1).png');
  } catch (error2) {
    console.warn('Background 1 not found with either name');
    backgroundImage1 = null;
  }
}

try {
  backgroundImage2 = require('./components/background/background2.png');
} catch (error) {
  try {
    backgroundImage2 = require('./components/background/background (2).png');
  } catch (error2) {
    console.warn('Background 2 not found with either name');
    backgroundImage2 = null;
  }
}

try {
  backgroundImage3 = require('./components/background/background3.png');
} catch (error) {
  try {
    backgroundImage3 = require('./components/background/background (3).png');
  } catch (error2) {
    console.warn('Background 3 not found with either name');
    backgroundImage3 = null;
  }
}

// –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ–æ–Ω–æ–≤
const availableBackgrounds = [
  backgroundImage1, 
  backgroundImage2, 
  backgroundImage3, 
  defaultBackground
].filter(Boolean);

console.log(`–ù–∞–π–¥–µ–Ω–æ —Ñ–æ–Ω–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${availableBackgrounds.length}`);

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
class ErrorBoundary extends React.Component {
  constructor(props) {
    super(props);
    this.state = { error: null };
  }
  
  static getDerivedStateFromError(error) {
    return { error };
  }
  
  componentDidCatch(error, info) {
    console.error("ErrorBoundary caught:", error, info);
  }
  
  render() {
    if (this.state.error) {
      return (
        <div style={{
          padding: '20px',
          fontFamily: '"Segoe UI", sans-serif',
          color: 'rgb(180, 0, 55)',
          backgroundColor: 'white',
          border: '2px solid rgb(180, 0, 55)',
          borderRadius: '8px',
          margin: '20px',
          textAlign: 'center'
        }}>
          <h2 style={{ 
            fontFamily: '"Segoe UI", sans-serif',
            fontWeight: 'bold',
            color: 'rgb(180, 0, 55)' 
          }}>
            –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
          </h2>
          <pre style={{ 
            fontSize: '14px',
            color: 'rgb(0, 40, 130)',
            fontFamily: '"Segoe UI", sans-serif'
          }}>
            {this.state.error.toString()}
          </pre>
        </div>
      );
    }
    return this.props.children;
  }
}

function MainApp() {
  // ===== –°–û–°–¢–û–Ø–ù–ò–ï –î–õ–Ø –£–ü–†–ê–í–õ–ï–ù–ò–Ø –§–û–ù–ê–ú–ò =====
  const [currentBackgroundIndex, setCurrentBackgroundIndex] = useState(0);
  const [nextBackgroundIndex, setNextBackgroundIndex] = useState(1);
  const [viewportHeight, setViewportHeight] = useState(window.innerHeight);
  const [isTransitioning, setIsTransitioning] = useState(false);
  
  // ===== –°–û–°–¢–û–Ø–ù–ò–ï –î–õ–Ø –ü–õ–ê–í–ù–´–• –ü–ï–†–ï–•–û–î–û–í =====
  const [currentOpacity, setCurrentOpacity] = useState(1);
  const [nextOpacity, setNextOpacity] = useState(0);
  
  // ===== –°–û–°–¢–û–Ø–ù–ò–ï –ü–†–ï–î–ó–ê–ì–†–£–ó–ö–ò =====
  const [imagesLoaded, setImagesLoaded] = useState(false);
  const [loadingProgress, setLoadingProgress] = useState(0);

  // ===== –ü–†–ï–î–ó–ê–ì–†–£–ó–ö–ê –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô (–°–ö–†–´–¢–ê–Ø –û–¢ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø) =====
  const preloadImages = () => {
    if (availableBackgrounds.length === 0) {
      setImagesLoaded(true);
      return;
    }

    console.log('–ù–∞—á–∏–Ω–∞–µ–º —Å–∫—Ä—ã—Ç—É—é –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫—É —Ñ–æ–Ω–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...');
    let loadedCount = 0;
    const totalImages = availableBackgrounds.length;

    availableBackgrounds.forEach((imageSrc, index) => {
      const img = new Image();
      
      img.onload = () => {
        loadedCount++;
        const progress = Math.round((loadedCount / totalImages) * 100);
        setLoadingProgress(progress);
        
        console.log(`–°–∫—Ä—ã—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${loadedCount}/${totalImages} (${progress}%)`);
        
        if (loadedCount === totalImages) {
          console.log('–í—Å–µ —Ñ–æ–Ω–æ–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–∫—Ä—ã—Ç–æ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω—ã! –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º—É —Å–º–µ–Ω—ã —Ñ–æ–Ω–æ–≤.');
          setTimeout(() => {
            setImagesLoaded(true);
          }, 100); // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
        }
      };
      
      img.onerror = () => {
        console.warn(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ${index}`);
        loadedCount++;
        const progress = Math.round((loadedCount / totalImages) * 100);
        setLoadingProgress(progress);
        
        if (loadedCount === totalImages) {
          setImagesLoaded(true);
        }
      };
      
      img.src = imageSrc;
    });
  };

  // ===== –ü–†–û–°–¢–ê–Ø –§–£–ù–ö–¶–ò–Ø –ü–û–õ–£–ß–ï–ù–ò–Ø –°–õ–ï–î–£–Æ–©–ï–ì–û –ò–ù–î–ï–ö–°–ê =====
  const getNextBackgroundIndex = (currentIndex) => {
    if (availableBackgrounds.length === 0) return 0;
    return (currentIndex + 1) % availableBackgrounds.length;
  };

  // ===== –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ü–†–û–°–¢–û–ì–û –ü–ï–†–ï–•–û–î–ê =====
  const startSimpleTransition = () => {
    // –ü—Ä–æ–≤–µ—Ä–∫–∏
    if (!imagesLoaded) {
      console.log('‚è∏Ô∏è –§–æ–Ω—ã –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥');
      return;
    }
    
    if (isTransitioning) {
      console.log('‚è∏Ô∏è –ü–µ—Ä–µ—Ö–æ–¥ —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
      return;
    }
    
    if (availableBackgrounds.length < 2) {
      console.log('‚è∏Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ñ–æ–Ω–æ–≤ –¥–ª—è —Å–º–µ–Ω—ã (' + availableBackgrounds.length + '), –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
      return;
    }
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
    setCurrentBackgroundIndex(currentIndex => {
      const nextIndex = getNextBackgroundIndex(currentIndex);
      
      console.log(`üîÑ –ü—Ä–æ—Å—Ç–æ–π –ø–µ—Ä–µ—Ö–æ–¥: —Ñ–æ–Ω ${currentIndex + 1} ‚Üí ${nextIndex + 1}`);
      
      setIsTransitioning(true);
      setNextBackgroundIndex(nextIndex);
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ —Ä–∞—Å—Ç–≤–æ—Ä–µ–Ω–∏–µ
      executeCrossfadeTransition();
      
      return currentIndex; // –ù–µ –º–µ–Ω—è–µ–º –∑–¥–µ—Å—å, –∏–∑–º–µ–Ω–∏–º –≤ finalizeTransition
    });
  };

  // ===== –†–ï–ê–õ–ò–ó–ê–¶–ò–Ø –ü–†–û–°–¢–û–ì–û CROSSFADE –ü–ï–†–ï–•–û–î–ê =====
  const executeCrossfadeTransition = () => {
    const duration = 3000; // 3 —Å–µ–∫—É–Ω–¥—ã –Ω–∞ –ø–µ—Ä–µ—Ö–æ–¥
    const steps = 120; // 120 —à–∞–≥–æ–≤ = 25ms –Ω–∞ —à–∞–≥ (–±–æ–ª–µ–µ –ø–ª–∞–≤–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è)
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ñ–æ–Ω–∞
    setNextOpacity(0);
    
    setTimeout(() => {
      let step = 0;
      const fadeInterval = setInterval(() => {
        step++;
        const progress = step / steps;
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º ease-in-out —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –±–æ–ª–µ–µ –ø–ª–∞–≤–Ω–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞
        const easeProgress = 0.5 * (1 + Math.sin(Math.PI * (progress - 0.5)));
        
        // –ü–ª–∞–≤–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏ —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π –≥—Ä–∞–Ω–∏—Ü [0, 1]
        const currentOpacityValue = Math.max(0, Math.min(1, 1 - easeProgress));
        const nextOpacityValue = Math.max(0, Math.min(1, easeProgress));
        
        setCurrentOpacity(currentOpacityValue);
        setNextOpacity(nextOpacityValue);
        
        if (step >= steps) {
          clearInterval(fadeInterval);
          // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
          setCurrentOpacity(0);
          setNextOpacity(1);
          finalizeTransition();
        }
      }, 25); // 25ms –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
    }, 100);
  };

  // ===== –§–ò–ù–ê–õ–ò–ó–ê–¶–ò–Ø –ü–ï–†–ï–•–û–î–ê =====
  const finalizeTransition = () => {
    setTimeout(() => {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ nextBackgroundIndex
      setNextBackgroundIndex(nextIndex => {
        console.log(`‚úÖ –ü–µ—Ä–µ—Ö–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω: —Ç–µ–ø–µ—Ä—å –∞–∫—Ç–∏–≤–µ–Ω —Ñ–æ–Ω ${nextIndex + 1}`);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π
        setCurrentBackgroundIndex(nextIndex);
        
        // –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        setCurrentOpacity(1);
        setNextOpacity(0);
        setIsTransitioning(false);
        
        return nextIndex;
      });
    }, 100); // –£–º–µ–Ω—å—à–∏–ª–∏ –∑–∞–¥–µ—Ä–∂–∫—É
  };

  // ===== –§–£–ù–ö–¶–ò–Ø –û–ë–ù–û–í–õ–ï–ù–ò–Ø –í–´–°–û–¢–´ =====
  const updateViewportHeight = () => {
    setViewportHeight(window.innerHeight);
  };

  // ===== –û–ë–†–ê–ë–û–¢–ß–ò–ö –ò–ó–ú–ï–ù–ï–ù–ò–Ø –†–ê–ó–ú–ï–†–ê –û–ö–ù–ê =====
  useEffect(() => {
    window.addEventListener('resize', updateViewportHeight);
    window.addEventListener('orientationchange', updateViewportHeight);
    
    const handleOrientationChange = () => {
      setTimeout(updateViewportHeight, 100);
    };
    
    window.addEventListener('orientationchange', handleOrientationChange);
    
    return () => {
      window.removeEventListener('resize', updateViewportHeight);
      window.removeEventListener('orientationchange', updateViewportHeight);
      window.removeEventListener('orientationchange', handleOrientationChange);
    };
  }, []);

  // ===== –ü–†–ï–î–ó–ê–ì–†–£–ó–ö–ê –ü–†–ò –ú–û–ù–¢–ò–†–û–í–ê–ù–ò–ò (–°–ö–†–´–¢–ê–Ø) =====
  useEffect(() => {
    // –°—Ä–∞–∑—É –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    setImagesLoaded(false); // –§–æ–Ω—ã –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –Ω–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä—ã—Ç—É—é –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫—É –≤ —Ñ–æ–Ω–µ
    preloadImages();
  }, []);

  // ===== –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –°–ú–ï–ù–ê –§–û–ù–û–í –ö–ê–ñ–î–´–ï 15 –°–ï–ö–£–ù–î =====
  useEffect(() => {
    if (!imagesLoaded || availableBackgrounds.length <= 1) return;
    
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–π —Å–∏—Å—Ç–µ–º—ã —Å–º–µ–Ω—ã —Ñ–æ–Ω–æ–≤: –∫–∞–∂–¥—ã–µ 15 —Å–µ–∫—É–Ω–¥');
    
    // –ü–æ–≤—Ç–æ—Ä—è—é—â–∏–π—Å—è —Ç–∞–π–º–µ—Ä –∫–∞–∂–¥—ã–µ 15 —Å–µ–∫—É–Ω–¥
    const repeatTimer = setInterval(() => {
      startSimpleTransition();
    }, 15000);

    // Cleanup –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    return () => {
      clearInterval(repeatTimer);
    };
  }, [imagesLoaded]); // –£–±—Ä–∞–ª–∏ currentBackgroundIndex –∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π!

  // ===== –ì–õ–û–ë–ê–õ–¨–ù–´–ï –°–¢–ò–õ–ò –ö–û–ù–¢–ï–ô–ù–ï–†–ê + SAFE AREA =====
  const globalContainerStyle = {
    position: 'relative',
    width: '100%',
    height: `${viewportHeight}px`,
    minHeight: `${viewportHeight}px`,
    overflow: 'hidden',
    fontFamily: '"Segoe UI", sans-serif',
    
    // ‚ú® –ü–û–°–¢–û–Ø–ù–ù–´–ô –ö–û–†–ü–û–†–ê–¢–ò–í–ù–´–ô –§–û–ù
    background: `linear-gradient(135deg, 
      rgba(180, 0, 55, 0.95) 0%,
      rgba(153, 0, 55, 0.9) 25%,
      rgba(152, 164, 174, 0.8) 50%,
      rgba(118, 143, 146, 0.85) 75%,
      rgba(0, 40, 130, 0.95) 100%
    )`,
    
    // ‚ú® SAFE AREA: –æ—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∑–æ–Ω—ã
    paddingTop: 'env(safe-area-inset-top, 20px)',
    boxSizing: 'border-box'
  };

  // ===== –°–¢–ò–õ–¨ –û–°–ù–û–í–ù–û–ì–û –§–û–ù–ê =====
  const mainBackgroundStyle = {
    position: 'absolute',
    top: 0,
    left: 0,
    width: '100%',
    height: '100%',
    zIndex: 1,
    
    ...(availableBackgrounds.length > 0 && imagesLoaded ? {
      backgroundImage: `url(${availableBackgrounds[currentBackgroundIndex]})`,
      backgroundSize: 'cover',
      backgroundPosition: 'center',
      backgroundRepeat: 'no-repeat',
      opacity: currentOpacity
      // –£–±—Ä–∞–ª–∏ transition - –∞–Ω–∏–º–∞—Ü–∏—è –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è JavaScript
    } : {
      opacity: 0
    })
  };

  // ===== –°–¢–ò–õ–¨ –°–õ–ï–î–£–Æ–©–ï–ì–û –§–û–ù–ê =====
  const nextBackgroundStyle = {
    position: 'absolute',
    top: 0,
    left: 0,
    width: '100%',
    height: '100%',
    zIndex: isTransitioning ? 2 : 1,
    
    ...(availableBackgrounds.length > 0 && imagesLoaded ? {
      backgroundImage: `url(${availableBackgrounds[nextBackgroundIndex]})`,
      backgroundSize: 'cover',
      backgroundPosition: 'center',
      backgroundRepeat: 'no-repeat',
      opacity: nextOpacity
      // –£–±—Ä–∞–ª–∏ transition - –∞–Ω–∏–º–∞—Ü–∏—è –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è JavaScript
    } : {
      opacity: 0
    }),
    
    pointerEvents: 'none'
  };

  // ===== CSS-–í-JS –î–õ–Ø SAFE AREA =====
  const keyframesStyle = `
    /* ‚ú® –ì–õ–û–ë–ê–õ–¨–ù–´–ï CSS –ü–ï–†–ï–ú–ï–ù–ù–´–ï –î–õ–Ø SAFE AREA */
    :root {
      --safe-area-top: env(safe-area-inset-top, 50px);
      --safe-area-bottom: env(safe-area-inset-bottom, 0px);
      --safe-area-left: env(safe-area-inset-left, 0px);
      --safe-area-right: env(safe-area-inset-right, 0px);
    }
    
    /* ‚ú® –ì–õ–û–ë–ê–õ–¨–ù–´–ï –£–¢–ò–õ–ò–¢–ê–†–ù–´–ï –ö–õ–ê–°–°–´ –î–õ–Ø SAFE AREA */
    .safe-top { margin-top: var(--safe-area-top) !important; }
    .safe-top-padding { padding-top: var(--safe-area-top) !important; }
    .safe-bottom { margin-bottom: var(--safe-area-bottom) !important; }
    .safe-bottom-padding { padding-bottom: var(--safe-area-bottom) !important; }
    
    /* ‚ú® –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô SAFE AREA –î–õ–Ø –û–°–ù–û–í–ù–´–• –≠–õ–ï–ú–ï–ù–¢–û–í */
    .logo-safe { top: 110px !important; }
    .buttons-safe { top: 300px !important; }
    .title-safe { top: 260px !important; }
  `;

  // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –≤ head
  useEffect(() => {
    const styleId = 'global-safe-area-styles';
    if (!document.getElementById(styleId)) {
      const style = document.createElement('style');
      style.id = styleId;
      style.textContent = keyframesStyle;
      document.head.appendChild(style);
    }
  }, []);

  return (
    <ErrorBoundary>
      <div style={globalContainerStyle}>
        {/* –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–æ–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ */}
        {imagesLoaded && availableBackgrounds.length > 0 && (
          <div style={mainBackgroundStyle} />
        )}
        
        {/* –°–ª–µ–¥—É—é—â–∏–π —Ñ–æ–Ω –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ */}
        {imagesLoaded && availableBackgrounds.length > 1 && (
          <div style={nextBackgroundStyle} />
        )}
        
        {/* –†–æ—É—Ç–µ—Ä —Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ä–∞–∑—É */}
        <Router>
          <Routes>
            <Route path="/"           element={<WelcomePage />} />
            <Route path="/main-menu"  element={<MainMenu />} />
            <Route path="/polls"      element={<PollsPage />} />
            <Route path="/snp"        element={<SNPPage />} />
            <Route path="/employee"   element={<EmployeePage />} />
            <Route path="/assessment" element={<AssessmentPage />} />
            <Route path="/feedback"   element={<FeedbackPage />} />
            <Route path="/justincase" element={<JustincasePage />} />
            <Route path="/carefuture" element={<CareFuturePage />} />
            <Route path="/marzapoll"  element={<MarzaPollPage />} />
          </Routes>
        </Router>
      </div>
    </ErrorBoundary>
  );
}

export default MainApp;














