import React, { useEffect, useState } from 'react';
import { BrowserRouter as Router, Routes, Route, useLocation } from 'react-router-dom';

// ‚úÖ –ò–ú–ü–û–†–¢–´ –ì–õ–û–ë–ê–õ–¨–ù–´–• –§–û–ù–û–í
import backgroundImage1 from './components/background1.png';
import backgroundImage2 from './components/background2.png';
import backgroundImage3 from './components/background3.png';
import piImage from './components/pi.png';

import WelcomePage     from './WelcomePage';
import MainMenu        from './MainMenu';
import PollsPage       from './PollsPage';
import SNPPage         from './SNPPage';
import EmployeePage    from './EmployeePage';
import AssessmentPage  from './AssessmentPage';
import FeedbackPage    from './FeedbackPage';
import JustincasePage  from './JustincasePage';
import CareFuturePage  from './CareFuturePage';
import MarzaPollPage   from './MarzaPollPage';
import ThankYouPage    from './ThankYouPage';

class ErrorBoundary extends React.Component {
  constructor(props) {
    super(props);
    this.state = { error: null };
  }
  static getDerivedStateFromError(error) {
    return { error };
  }
  componentDidCatch(error, info) {
    console.error("ErrorBoundary caught:", error, info);
  }
  render() {
    if (this.state.error) {
      return (
        <div style={{ 
          padding: '20px', 
          color: 'white',
          fontFamily: '"Segoe UI", sans-serif',
          background: 'linear-gradient(135deg, rgb(180, 0, 55) 0%, rgb(0, 40, 130) 100%)',
          minHeight: '100vh',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          flexDirection: 'column'
        }}>
          <h2 style={{ fontFamily: '"Segoe UI", sans-serif', fontWeight: 'bold' }}>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞</h2>
          <pre style={{ fontFamily: '"Segoe UI", sans-serif', fontWeight: 'normal' }}>
            {this.state.error.toString()}
          </pre>
        </div>
      );
    }
    return this.props.children;
  }
}

// ‚úÖ –ì–õ–ê–í–ù–´–ô –ö–û–ú–ü–û–ù–ï–ù–¢ –° –ì–õ–û–ë–ê–õ–¨–ù–û–ô –õ–û–ì–ò–ö–û–ô –§–û–ù–û–í
function AppContent() {
  const location = useLocation();
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –≤—ã—Å–æ—Ç—ã viewport
  const [viewportHeight, setViewportHeight] = useState(window.innerHeight);
  
  // ‚úÖ –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø –õ–û–ì–ò–ö–ê –§–û–ù–û–í
  const [currentBgIndex, setCurrentBgIndex] = useState(0);
  const [auroraOffset, setAuroraOffset] = useState(0);
  
  // ‚úÖ –ú–ê–°–°–ò–í –§–û–ù–û–í (–æ–¥–∏–Ω —Ä–∞–∑, –¥–ª—è –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è)
  const backgrounds = [
    backgroundImage1,
    backgroundImage2,
    backgroundImage3
  ];

  // ‚úÖ –ê–í–¢–û–°–ú–ï–ù–ê –§–û–ù–û–í –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥ (–≥–ª–æ–±–∞–ª—å–Ω–æ)
  useEffect(() => {
    const bgInterval = setInterval(() => {
      setCurrentBgIndex(prev => (prev + 1) % backgrounds.length);
      console.log('üé® –°–º–µ–Ω–∞ —Ñ–æ–Ω–∞:', (currentBgIndex + 1) % backgrounds.length);
    }, 10000); // 10 —Å–µ–∫—É–Ω–¥

    return () => clearInterval(bgInterval);
  }, [backgrounds.length, currentBgIndex]);

  // ‚úÖ AURORA –ê–ù–ò–ú–ê–¶–ò–Ø (–≥–ª–æ–±–∞–ª—å–Ω–æ)
  useEffect(() => {
    const auroraInterval = setInterval(() => {
      setAuroraOffset(prev => (prev + 1) % 100);
    }, 150); // –ö–∞–∂–¥—ã–µ 150–º—Å

    return () => clearInterval(auroraInterval);
  }, []);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞ –¥–ª—è Safari
  useEffect(() => {
    const updateHeight = () => {
      setViewportHeight(window.innerHeight);
    };

    window.addEventListener('resize', updateHeight);
    window.addEventListener('orientationchange', updateHeight);

    return () => {
      window.removeEventListener('resize', updateHeight);
      window.removeEventListener('orientationchange', updateHeight);
    };
  }, []);

  // ‚úÖ –ì–õ–û–ë–ê–õ–¨–ù–´–ô –§–û–ù —Å –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏
  const globalBackgroundStyle = {
    position: 'fixed',
    top: 0,
    left: 0,
    width: '100%',
    height: `${viewportHeight}px`,
    zIndex: -1,
    overflow: 'hidden'
  };

  // ‚úÖ –°–¢–ò–õ–¨ –§–û–ù–û–í–û–ô –ö–ê–†–¢–ò–ù–ö–ò
  const backgroundImageStyle = {
    position: 'absolute',
    top: 0,
    left: 0,
    width: '100%',
    height: '100%',
    backgroundSize: 'cover',
    backgroundPosition: 'center',
    backgroundRepeat: 'no-repeat',
    transition: 'opacity 2s ease-in-out', // –ü–ª–∞–≤–Ω—ã–π crossfade
  };

  // ‚úÖ AURORA OVERLAY —Å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º–∏ —Ü–≤–µ—Ç–∞–º–∏
  const auroraOverlayStyle = {
    position: 'absolute',
    top: 0,
    left: 0,
    width: '100%',
    height: '100%',
    background: `
      radial-gradient(circle at ${20 + auroraOffset * 0.3}% ${30 + auroraOffset * 0.2}%, 
        rgba(180, 0, 55, 0.4) 0%,      /* –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –∫—Ä–∞—Å–Ω—ã–π */
        rgba(153, 0, 55, 0.3) 25%,     /* –¢–µ–º–Ω—ã–π –∫—Ä–∞—Å–Ω—ã–π */ 
        rgba(0, 40, 130, 0.4) 50%,     /* –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —Å–∏–Ω–∏–π */
        rgba(0, 32, 104, 0.3) 75%,     /* –¢–µ–º–Ω—ã–π —Å–∏–Ω–∏–π */
        transparent 100%),
      radial-gradient(circle at ${80 - auroraOffset * 0.2}% ${70 - auroraOffset * 0.4}%, 
        rgba(152, 164, 174, 0.3) 0%,   /* –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —Å–µ—Ä—ã–π */
        rgba(118, 143, 146, 0.4) 30%,  /* –¢–µ–º–Ω—ã–π —Å–µ—Ä—ã–π */
        rgba(180, 0, 55, 0.3) 60%,     /* –ö—Ä–∞—Å–Ω—ã–π —Å–Ω–æ–≤–∞ */
        transparent 100%),
      linear-gradient(135deg, 
        rgba(180, 0, 55, 0.2) 0%,      /* –ö—Ä–∞—Å–Ω—ã–π –æ–≤–µ—Ä–ª–µ–π */
        rgba(0, 40, 130, 0.3) 50%,     /* –°–∏–Ω–∏–π –æ–≤–µ—Ä–ª–µ–π */ 
        rgba(152, 164, 174, 0.2) 100%) /* –°–µ—Ä—ã–π –æ–≤–µ—Ä–ª–µ–π */
    `,
    mixBlendMode: 'overlay',
    pointerEvents: 'none',
    zIndex: 1
  };

  // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  const appContainerStyle = {
    position: 'relative',
    width: '100%',
    height: `${viewportHeight}px`,
    overflow: 'hidden',
    
    // –®—Ä–∏—Ñ—Ç—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    fontFamily: '"Segoe UI", -apple-system, BlinkMacSystemFont, system-ui, sans-serif',
    fontWeight: 'normal',
    color: 'white',
    
    // –°–≥–ª–∞–∂–∏–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
    WebkitFontSmoothing: 'antialiased',
    MozOsxFontSmoothing: 'grayscale',
    textRendering: 'optimizeLegibility'
  };

  // –û–±–µ—Ä—Ç–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
  const contentWrapperStyle = {
    position: 'relative',
    width: '100%',
    height: '100%',
    zIndex: 10 // –ü–æ–≤–µ—Ä—Ö —Ñ–æ–Ω–æ–≤
  };

  // –ì–ª–æ–±–∞–ª—å–Ω–∞—è Pi –∏–∫–æ–Ω–∫–∞
  const globalPiStyle = {
    position: 'fixed',
    width: '50px',
    height: '50px',
    opacity: 0.6,
    zIndex: 15, // –ü–æ–≤–µ—Ä—Ö –≤—Å–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    animation: 'globalPiMove 80s linear infinite, globalPiRotate 8s linear infinite',
    filter: 'drop-shadow(0 2px 8px rgba(255, 255, 255, 0.3))',
    pointerEvents: 'none',
    transition: 'opacity 0.3s ease'
  };

  // ‚úÖ –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –†–£–ß–ù–û–ô –°–ú–ï–ù–´ –§–û–ù–ê (—ç–∫—Å–ø–æ—Ä—Ç —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
  const changeBg = (index) => {
    if (index >= 0 && index < backgrounds.length) {
      setCurrentBgIndex(index);
      console.log('üé® –†—É—á–Ω–∞—è —Å–º–µ–Ω–∞ —Ñ–æ–Ω–∞ –Ω–∞:', index);
    }
  };

  return (
    <>
      {/* –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ */}
      <style>
        {`
          /* –°–±—Ä–æ—Å –∏ –±–∞–∑–æ–≤—ã–µ —Å—Ç–∏–ª–∏ */
          * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
          }
          
          html, body, #root {
            width: 100%;
            height: 100%;
            overflow-x: hidden;
          }
          
          /* –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è Safari iOS */
          @supports (-webkit-touch-callout: none) {
            html, body, #root {
              height: -webkit-fill-available;
            }
          }
          
          /* –®—Ä–∏—Ñ—Ç—ã */
          body, input, textarea, button, select {
            font-family: "Segoe UI", -apple-system, BlinkMacSystemFont, system-ui, sans-serif;
            font-weight: normal;
          }
          
          h1, h2, h3, h4, h5, h6 {
            font-family: "Segoe UI", -apple-system, BlinkMacSystemFont, system-ui, sans-serif;
            font-weight: bold;
          }
          
          /* –ì–ª–æ–±–∞–ª—å–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è Pi —ç–ª–µ–º–µ–Ω—Ç–∞ */
          @keyframes globalPiMove {
            0% { 
              left: -60px; 
              top: 15%; 
            }
            20% { 
              left: 20%; 
              top: 10%; 
            }
            40% { 
              left: calc(100% - 60px); 
              top: 25%; 
            }
            60% { 
              left: 80%; 
              top: 75%; 
            }
            80% { 
              left: 15%; 
              top: 85%; 
            }
            100% { 
              left: -60px; 
              top: 15%; 
            }
          }
          
          @keyframes globalPiRotate {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
          }
          
          /* –ü–ª–∞–≤–Ω—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã –¥–ª—è —Ñ–æ–Ω–æ–≤ */
          .bg-transition {
            transition: opacity 2s ease-in-out;
          }
          
          /* –°–∫—Ä—ã—Ç–∏–µ —Å–∫—Ä–æ–ª–ª–±–∞—Ä–æ–≤ */
          ::-webkit-scrollbar {
            display: none;
          }
          
          /* –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ Safari */
          body {
            position: fixed;
            width: 100%;
            height: 100%;
          }
          
          /* –°–≥–ª–∞–∂–∏–≤–∞–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–π */
          * {
            -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0);
          }
          
          /* –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –≤—ã–¥–µ–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–∞—Ö */
          .no-select {
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
          }
        `}
      </style>

      {/* ‚úÖ –ì–õ–û–ë–ê–õ–¨–ù–´–ô –§–û–ù –° –¢–†–ï–ú–Ø –ö–ê–†–¢–ò–ù–ö–ê–ú–ò */}
      <div style={globalBackgroundStyle}>
        {/* –†–µ–Ω–¥–µ—Ä–∏–º –≤—Å–µ 3 —Ñ–æ–Ω–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—É—â–∏–π */}
        {backgrounds.map((bg, index) => (
          <div
            key={index}
            style={{
              ...backgroundImageStyle,
              backgroundImage: `url(${bg})`,
              opacity: index === currentBgIndex ? 1 : 0,
              zIndex: index === currentBgIndex ? 1 : 0
            }}
            className="bg-transition"
          />
        ))}
        
        {/* ‚úÖ AURORA OVERLAY –ø–æ–≤–µ—Ä—Ö —Ñ–æ–Ω–æ–≤ */}
        <div style={auroraOverlayStyle} />
      </div>
      
      {/* ‚úÖ –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø PI –ò–ö–û–ù–ö–ê */}
      <img 
        src={piImage} 
        alt="Pi" 
        style={globalPiStyle}
      />
      
      {/* ‚úÖ –ò–ù–î–ò–ö–ê–¢–û–†–´ –§–û–ù–û–í (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –¥–ª—è –¥–µ–±–∞–≥–∞) */}
      <div style={{
        position: 'fixed',
        bottom: '20px',
        right: '20px',
        display: 'flex',
        gap: '8px',
        zIndex: 20,
        background: 'rgba(0, 0, 0, 0.3)',
        padding: '8px',
        borderRadius: '12px',
        backdropFilter: 'blur(10px)'
      }}>
        {backgrounds.map((_, index) => (
          <div
            key={index}
            onClick={() => changeBg(index)}
            style={{
              width: '12px',
              height: '12px',
              borderRadius: '50%',
              background: index === currentBgIndex 
                ? 'rgba(180, 0, 55, 1)' 
                : 'rgba(255, 255, 255, 0.4)',
              border: index === currentBgIndex 
                ? '2px solid white' 
                : '1px solid rgba(255, 255, 255, 0.2)',
              cursor: 'pointer',
              transition: 'all 0.3s ease',
              boxShadow: index === currentBgIndex 
                ? '0 0 10px rgba(180, 0, 55, 0.8)' 
                : 'none'
            }}
            title={`–§–æ–Ω ${index + 1}`}
          />
        ))}
      </div>
      
      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è */}
      <div style={appContainerStyle}>
        <div style={contentWrapperStyle}>
          <Routes>
            <Route path="/"           element={<WelcomePage />} />
            <Route path="/main-menu"  element={<MainMenu />} />
            <Route path="/polls"      element={<PollsPage />} />
            <Route path="/snp"        element={<SNPPage />} />
            <Route path="/employee"   element={<EmployeePage />} />
            <Route path="/assessment" element={<AssessmentPage />} />
            <Route path="/feedback"   element={<FeedbackPage />} />
            <Route path="/justincase" element={<JustincasePage />} />
            <Route path="/carefuture" element={<CareFuturePage />} />
            <Route path="/marzapoll"  element={<MarzaPollPage />} />
            <Route path="/thankyou"   element={<ThankYouPage />} />
          </Routes>
        </div>
      </div>
    </>
  );
}

function MainApp() {
  return (
    <ErrorBoundary>
      <Router>
        <AppContent />
      </Router>
    </ErrorBoundary>
  );
}

export default MainApp;















