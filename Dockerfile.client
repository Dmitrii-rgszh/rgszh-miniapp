# Dockerfile.client

# === Сборка React-приложения ===
FROM node:18-alpine AS build-client
WORKDIR /app

# Копируем манифесты и устанавливаем зависимости
COPY package.json package-lock.json craco.config.js config-overrides.js ./
RUN npm install --legacy-peer-deps

# Копируем весь исходник и собираем
COPY public ./public
COPY src    ./src
RUN npm run build

# === Строим финальный образ с nginx ===
FROM nginx:stable-alpine AS serve-client

# Удаляем дефолтную статику nginx
RUN rm -rf /usr/share/nginx/html/*

# Копируем собранный React в папку nginx
COPY --from=build-client /app/build /usr/share/nginx/html

# Копируем ваш nginx-конфиг (из папки nginx/default.conf)
COPY nginx/default.conf /etc/nginx/conf.d/default.conf

# Открываем порты
EXPOSE 80
EXPOSE 443

# По умолчанию — запуск nginx
CMD ["nginx", "-g", "daemon off;"]