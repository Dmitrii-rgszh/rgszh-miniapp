#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–æ–π —Å—É–º–º—ã
"""

import requests
import json
from datetime import datetime, timedelta

def test_recommend_sum_endpoint():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç —Ä–∞—Å—á–µ—Ç–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–æ–π —Å—É–º–º—ã"""
    
    # URL —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞
    base_url = "https://176.108.243.189"
    endpoint = f"{base_url}/api/justincase/recommend-sum"
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_payload = {
        "birthDate": "1990-05-15",  # 35 –ª–µ—Ç
        "hasJob": True,
        "income2022": "1200000",     # 1.2 –º–ª–Ω
        "income2023": "1350000",     # 1.35 –º–ª–Ω
        "income2024": "1500000",     # 1.5 –º–ª–Ω
        "scholarship": "0",
        "unsecuredLoans": "500000",   # 500–∫ –¥–æ–ª–≥–æ–≤
        "breadwinnerStatus": "main_breadwinner",
        "incomeShare": "70",          # 70% –¥–æ—Ö–æ–¥–∞ —Å–µ–º—å–∏
        "childrenCount": "2",         # 2 –¥–µ—Ç–µ–π
        "specialCareRelatives": "1"   # 1 —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫ –Ω–∞ –ø–æ–ø–µ—á–µ–Ω–∏–∏
    }
    
    print("üß™ === –¢–ï–°–¢ –≠–ù–î–ü–û–ò–ù–¢–ê –†–ï–ö–û–ú–ï–ù–î–û–í–ê–ù–ù–û–ô –°–£–ú–ú–´ ===")
    print(f"üì° URL: {endpoint}")
    print(f"üì§ Payload: {json.dumps(test_payload, indent=2, ensure_ascii=False)}")
    print()
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
        print("üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å...")
        response = requests.post(
            endpoint,
            json=test_payload,
            headers={'Content-Type': 'application/json'},
            timeout=30,
            verify=False  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è —Ç–µ—Å—Ç–æ–≤
        )
        
        print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: {dict(response.headers)}")
        
        if response.headers.get('Content-Type', '').startswith('application/json'):
            result = response.json()
            print(f"üì• –†–µ–∑—É–ª—å—Ç–∞—Ç:")
            print(json.dumps(result, indent=2, ensure_ascii=False))
            
            if response.status_code == 200:
                if result.get('success'):
                    data = result.get('data', {})
                    recommended_sum = data.get('recommended_sum')
                    recommended_term = data.get('recommended_term')
                    calculation_details = data.get('calculation_details', {})
                    
                    print("\n‚úÖ –≠–ù–î–ü–û–ò–ù–¢ –†–ê–ë–û–¢–ê–ï–¢ –ö–û–†–†–ï–ö–¢–ù–û!")
                    print(f"üí∞ –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–∞—è —Å—É–º–º–∞: {recommended_sum:,} —Ä—É–±.")
                    print(f"üìÖ –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–π —Å—Ä–æ–∫: {recommended_term} –ª–µ—Ç")
                    print(f"üë§ –í–æ–∑—Ä–∞—Å—Ç: {calculation_details.get('age')} –ª–µ—Ç")
                    print(f"üíµ –°—Ä–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥: {calculation_details.get('average_income'):,} —Ä—É–±.")
                    print(f"üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –°–µ–º–µ–π–Ω—ã–π –º–Ω–æ–∂–∏—Ç–µ–ª—å: {calculation_details.get('family_multiplier')}")
                    print(f"üí≥ –î–æ–ª–≥–∏: {calculation_details.get('debt_factor'):,} —Ä—É–±.")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ: {result.get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
            else:
                print(f"‚ùå HTTP –æ—à–∏–±–∫–∞ {response.status_code}")
        else:
            print(f"üìù –¢–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç: {response.text}")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É")
        print("üí° –í–æ–∑–º–æ–∂–Ω–æ, —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω –∏–ª–∏ —ç–Ω–¥–ø–æ–∏–Ω—Ç –Ω–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç")
    except requests.exceptions.Timeout:
        print("‚è∞ –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞")
    except requests.exceptions.SSLError as e:
        print(f"üîí SSL –æ—à–∏–±–∫–∞: {e}")
    except Exception as e:
        print(f"üí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    test_recommend_sum_endpoint()
