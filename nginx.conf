# /etc/nginx/conf.d/default.conf

# HTTP → HTTPS (если нужно)
server {
    listen 80;
    server_name rgszh-miniapp.org;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name rgszh-miniapp.org;

    ssl_certificate     /etc/ssl/certs/fullchain.pem;
    ssl_certificate_key /etc/ssl/private/privkey.pem;

    root /usr/share/nginx/html;
    index index.html;

    # Статика React
    location ~* \.(?:js|css|ico|json|txt|xml|svg|png|jpg|jpeg|gif)$ {
        expires        max;
        access_log     off;
        add_header     Cache-Control "public, max-age=31536000, immutable";
        try_files      $uri =404;
    }

    # API proxy — только POST/GET/OPTIONS на /api/
    location ^~ /api/ {
        # preflight
        if ($request_method = OPTIONS) {
            add_header 'Access-Control-Allow-Origin'  '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
            return 204;
        }
        proxy_pass         http://127.0.0.1:5000;  # ваш Flask‑сервер
        proxy_http_version 1.1;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        add_header         Access-Control-Allow-Origin '*' always;
    }

    # Всё остальное — в точку входа React
    location / {
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        add_header Pragma        "no-cache";
        add_header Expires       "0";
    }

    error_log  /var/log/nginx/error.log warn;
    access_log /var/log/nginx/access.log;
}



