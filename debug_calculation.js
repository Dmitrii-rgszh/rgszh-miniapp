#!/usr/bin/env node

/**
 * –û—Ç–ª–∞–¥–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ –¥–ª—è —Å–ª—É—á–∞—è –∏–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
 * –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: 2.600.000 —Ä—É–±
 * Excel: 3.700.000 —Ä—É–±
 */

console.log('üîç –û–¢–õ–ê–î–ö–ê: –ê–Ω–∞–ª–∏–∑ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è –≤ —Ä–∞—Å—á–µ—Ç–∞—Ö');
console.log('==========================================');

// –î–∞–Ω–Ω—ã–µ –∏–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const appData = {
  birthDate: "1989-01-01", // –í–æ–∑—Ä–∞—Å—Ç 35
  income2021: "1000000",
  income2022: "1000000", 
  income2023: "1000000",
  scholarship: null,
  hasJob: "–î–∞",
  breadwinnerStatus: "–ù–µ—Ç", // –ù–µ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ—Ä–º–∏–ª–µ—Ü
  incomeShare: "75%-89%", // –î–æ–ª—è –¥–æ—Ö–æ–¥–∞ –≤ —Å–µ–º–µ–π–Ω–æ–º –±—é–¥–∂–µ—Ç–µ
  childrenCount: "2", // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π
  specialCareRelatives: "–ù–µ—Ç",
  existingLoans: "0"
};

// –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ (—Ç–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è)
function computeRecommended(params) {
  const {
    birthDate,
    income2021,
    income2022,
    income2023,
    scholarship,
    hasJob,
    breadwinnerStatus,
    incomeShare,
    childrenCount,
    specialCareRelatives,
    existingLoans
  } = params;

  const toNumber = (val) => {
    if (val === null || val === undefined || val === '') return null;
    const num = parseFloat(val);
    return isNaN(num) ? null : num;
  };

  const computeAge = (dateStr) => {
    if (!dateStr) return null;
    const bd = new Date(dateStr);
    const today = new Date();
    let a = today.getFullYear() - bd.getFullYear();
    const m = today.getMonth() - bd.getMonth();
    if (m < 0 || (m === 0 && today.getDate() < bd.getDate())) a--;
    return a;
  };

  const age = computeAge(birthDate);

  // –°–æ–±–∏—Ä–∞–µ–º –¥–æ—Ö–æ–¥—ã –∑–∞ 2021-2023 + —Å—Ç–∏–ø–µ–Ω–¥–∏—é
  const incomes = [income2021, income2022, income2023, scholarship]
    .map(toNumber)
    .filter(v => v !== null);
  const avgIncome = incomes.length > 0 ? incomes.reduce((a, b) => a + b, 0) / incomes.length : 0;

  const norm = (v) => (v || '').toString().toLowerCase().trim();
  const breadNorm = norm(breadwinnerStatus);
  const specialNorm = norm(specialCareRelatives);

  console.log('üìä –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:');
  console.log(`   –í–æ–∑—Ä–∞—Å—Ç: ${age} –ª–µ—Ç`);
  console.log(`   –î–æ—Ö–æ–¥—ã: [${incomes.join(', ')}]`);
  console.log(`   –°—Ä–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥: ${avgIncome} —Ä—É–±`);
  console.log(`   –°—Ç–∞—Ç—É—Å –∫–æ—Ä–º–∏–ª—å—Ü–∞: "${breadwinnerStatus}"`);
  console.log(`   –î–æ–ª—è –¥–æ—Ö–æ–¥–∞: "${incomeShare}"`);
  console.log(`   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π: ${childrenCount}`);
  console.log('');

  // –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç F13: —Å—Ç–∞—Ç—É—Å –∫–æ—Ä–º–∏–ª—å—Ü–∞ –∏ –¥–æ–ª—è –¥–æ—Ö–æ–¥–∞
  let breadwinnerCoeff = 1;
  if (breadNorm === '–¥–∞' || breadNorm === 'yes') {
    breadwinnerCoeff = 3;
    console.log('üçû –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∫–æ—Ä–º–∏–ª—å—Ü–∞: 3 (–µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ—Ä–º–∏–ª–µ—Ü)');
  } else if (breadNorm === '–Ω–µ—Ç' || breadNorm === 'no') {
    const shareMap = {
      '–¥–æ 10': 1,
      '10-24': 1.4,
      '25-49': 1.8,
      '50-74': 2.2,
      '75-89': 2.6,
      '–±–æ–ª–µ–µ 90': 3
    };
    const shareKey = norm(incomeShare).replace(/[%]/g, '');
    breadwinnerCoeff = shareMap[shareKey] ?? 1;
    console.log(`üçû –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∫–æ—Ä–º–∏–ª—å—Ü–∞: ${breadwinnerCoeff} (–Ω–µ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π, –¥–æ–ª—è "${shareKey}")`);
  } else {
    breadwinnerCoeff = 1;
    console.log('üçû –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∫–æ—Ä–º–∏–ª—å—Ü–∞: 1 (–Ω–µ –∫–æ—Ä–º–∏–ª–µ—Ü)');
  }

  // –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç F14: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π
  const childrenKey = norm(childrenCount);
  let childrenCoeff;
  switch (childrenKey) {
    case '1':
      childrenCoeff = 1.25;
      break;
    case '2':
      childrenCoeff = 1.40625;
      break;
    case '3 –∏ –±–æ–ª–µ–µ':
    case '3+':
      childrenCoeff = 1.523438;
      break;
    case '0':
    default:
      childrenCoeff = 1;
      break;
  }
  console.log(`üë∂ –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –¥–µ—Ç–µ–π: ${childrenCoeff} (–¥–µ—Ç–µ–π: "${childrenKey}")`);

  // –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç F15: –æ—Å–æ–±–∞—è –∑–∞–±–æ—Ç–∞ –æ–± –∏–∂–¥–∏–≤–µ–Ω—Ü–∞—Ö
  let specialCoeff = 1;
  if (specialNorm === '–¥–∞' || specialNorm === 'yes') {
    specialCoeff = 1.5;
  }
  console.log(`üë¥ –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∏–∂–¥–∏–≤–µ–Ω—Ü–µ–≤: ${specialCoeff}`);

  // –ò—Ç–æ–≥–æ–≤—ã–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç
  const productCoeff = breadwinnerCoeff * childrenCoeff * specialCoeff;
  console.log(`üî¢ –ò—Ç–æ–≥–æ–≤—ã–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç: ${breadwinnerCoeff} √ó ${childrenCoeff} √ó ${specialCoeff} = ${productCoeff.toFixed(3)}`);

  // –í–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã (F5)
  let ageFactor = 10;
  if (age !== null) {
    if (age <= 25) ageFactor = 10;
    else if (age <= 30) ageFactor = 9;
    else if (age <= 35) ageFactor = 8;
    else if (age <= 40) ageFactor = 7;
    else if (age <= 45) ageFactor = 6;
    else if (age <= 50) ageFactor = 5;
    else if (age <= 55) ageFactor = 4;
    else ageFactor = 3;
  }
  console.log(`üìÖ –í–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç (F5): ${ageFactor} (–≤–æ–∑—Ä–∞—Å—Ç ${age})`);

  // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞—Ö–æ–≤–∞—è —Å—É–º–º–∞
  const maxInsuranceSum = avgIncome * ageFactor;
  console.log(`üìà –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: ${avgIncome} √ó ${ageFactor} = ${maxInsuranceSum} —Ä—É–±`);

  // –ë–∞–∑–æ–≤–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–∞—è —Å—É–º–º–∞
  let baseRecommendedSum = avgIncome * productCoeff;
  console.log(`üí∞ –ë–∞–∑–æ–≤–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–∞—è: ${avgIncome} √ó ${productCoeff.toFixed(3)} = ${baseRecommendedSum} —Ä—É–±`);

  // –î–æ–±–∞–≤–ª—è–µ–º –∫—Ä–µ–¥–∏—Ç—ã
  const loans = toNumber(existingLoans) || 0;
  baseRecommendedSum += loans;
  console.log(`üí≥ –° —É—á–µ—Ç–æ–º –∫—Ä–µ–¥–∏—Ç–æ–≤: ${baseRecommendedSum} + ${loans} = ${baseRecommendedSum} —Ä—É–±`);

  // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º–æ–π
  const recommendedSum = Math.min(baseRecommendedSum, maxInsuranceSum);
  console.log(`üéØ –ò—Ç–æ–≥–æ–≤–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–∞—è: min(${baseRecommendedSum}, ${maxInsuranceSum}) = ${recommendedSum} —Ä—É–±`);

  // –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–π —Å—Ä–æ–∫
  let recommendedTerm = 15;
  if (age !== null && age >= 25) {
    recommendedTerm = Math.max(5, Math.min(20, 20 - (age - 25)));
  }
  console.log(`‚è∞ –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–π —Å—Ä–æ–∫: ${recommendedTerm} –ª–µ—Ç`);

  return {
    recommendedSum: Math.round(recommendedSum),
    recommendedTerm
  };
}

console.log('üßÆ –†–ê–°–ß–ï–¢ –ü–û –¢–ï–ö–£–©–ï–ô –õ–û–ì–ò–ö–ï:');
console.log('‚îÄ'.repeat(40));
const result = computeRecommended(appData);

console.log('');
console.log('üì± –†–µ–∑—É–ª—å—Ç–∞—Ç –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏: 2.600.000 —Ä—É–±');
console.log(`üíª –†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞—à–µ–≥–æ —Ä–∞—Å—á–µ—Ç–∞: ${result.recommendedSum.toLocaleString()} —Ä—É–±`);
console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –≤ Excel: 3.700.000 —Ä—É–±');
console.log('');

// –ê–Ω–∞–ª–∏–∑ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—Ä–∏—á–∏–Ω —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è
console.log('üîç –ê–ù–ê–õ–ò–ó –†–ê–°–•–û–ñ–î–ï–ù–ò–ô:');
console.log('‚îÄ'.repeat(40));

console.log('1. –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å–ª–∏ –±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç 3.7:');
const coeffFor37M = 3700000 / 1000000;
console.log(`   –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –¥–ª—è 3.7M: ${coeffFor37M}`);

console.log('2. –í–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:');
console.log(`   - –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ—Ä–º–∏–ª–µ—Ü (3) + 2 –¥–µ—Ç–µ–π (1.40625) = ${(3 * 1.40625).toFixed(3)}`);
console.log(`   - –ù–µ –∫–æ—Ä–º–∏–ª–µ—Ü —Å –¥–æ–ª–µ–π "–±–æ–ª–µ–µ 90%" (3) + 2 –¥–µ—Ç–µ–π (1.40625) = ${(3 * 1.40625).toFixed(3)}`);
console.log(`   - –û—Å–æ–±–∞—è –∑–∞–±–æ—Ç–∞ –≤–∫–ª—é—á–µ–Ω–∞: ${(2.6 * 1.40625 * 1.5).toFixed(3)}`);

console.log('');
console.log('ü§î –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è:');
console.log('   1. –í Excel –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å—Ç–∞—Ç—É—Å "–µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ—Ä–º–∏–ª–µ—Ü"');
console.log('   2. –ú–æ–∂–µ—Ç –±—ã—Ç—å –≤–∫–ª—é—á–µ–Ω–∞ "–æ—Å–æ–±–∞—è –∑–∞–±–æ—Ç–∞ –æ–± –∏–∂–¥–∏–≤–µ–Ω—Ü–∞—Ö"');
console.log('   3. –ú–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–æ–ª—è –¥–æ—Ö–æ–¥–∞ "–±–æ–ª–µ–µ 90%"');
console.log('   4. –í–æ–∑–º–æ–∂–Ω–æ —Ä–∞–∑–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ –¥–æ—Ö–æ–¥–∞—Ö');
