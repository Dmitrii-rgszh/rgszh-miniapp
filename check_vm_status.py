#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ HTTP webhook
"""

import requests
import time

def trigger_vm_update():
    """–ü—ã—Ç–∞–µ–º—Å—è –æ–±–Ω–æ–≤–∏—Ç—å VM —á–µ—Ä–µ–∑ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã"""
    
    vm_ip = "176.108.243.189"
    
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é API...")
    try:
        response = requests.get(f"https://{vm_ip}/api/justincase/health", 
                              timeout=10, verify=False)
        if response.status_code == 200:
            print("‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é...")
            print(f"üìä –û—Ç–≤–µ—Ç health: {response.json()}")
        else:
            print(f"‚ö†Ô∏è Health check –≤–µ—Ä–Ω—É–ª {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ health check: {e}")
    
    # –ü–æ–ø—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å POST –Ω–∞ –Ω–æ–≤—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤–æ–≥–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞...")
    try:
        response = requests.post(f"https://{vm_ip}/api/justincase/recommend-sum",
                               json={"test": "data"},
                               timeout=10, verify=False)
        print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 405:
            print("‚ö†Ô∏è –≠–Ω–¥–ø–æ–∏–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–æ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç POST - —Å—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è")
        elif response.status_code == 400:
            print("‚úÖ –≠–Ω–¥–ø–æ–∏–Ω—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç POST - –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")
        else:
            print(f"ü§î –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            print(f"üìù –û—Ç–≤–µ—Ç: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞: {e}")
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–º, —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å
    print("\nüìã –ò–ù–°–¢–†–£–ö–¶–ò–Ø –î–õ–Ø –†–£–ß–ù–û–ì–û –û–ë–ù–û–í–õ–ï–ù–ò–Ø:")
    print("1. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ VM –ø–æ SSH")
    print("2. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—ã:")
    print(f"   cd /opt/miniapp")
    print(f"   docker-compose down")
    print(f"   docker pull zerotlt/rgszh-miniapp-server:latest")
    print(f"   docker pull zerotlt/rgszh-miniapp-client:latest")
    print(f"   docker-compose up -d")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose logs server --tail=20")

if __name__ == "__main__":
    trigger_vm_update()
