#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–π SQLite –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å —Ç–∞—Ä–∏—Ñ–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
–°–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–µ—Ç SQLite –±–∞–∑—É —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º –Ω–∞–±–æ—Ä–æ–º —Ç–∞—Ä–∏—Ñ–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –ù–°–ñ
"""

import sqlite3
import os
import sys
from datetime import datetime

def create_sqlite_tariffs_db(db_path="miniapp.db"):
    """–°–æ–∑–¥–∞–Ω–∏–µ SQLite –±–∞–∑—ã —Å —Ç–∞—Ä–∏—Ñ–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    
    print(f"üîß –°–æ–∑–¥–∞–Ω–∏–µ SQLite –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {db_path}")
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –±–∞–∑—É –µ—Å–ª–∏ –µ—Å—Ç—å
    if os.path.exists(db_path):
        os.remove(db_path)
        print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–∞ —Å—Ç–∞—Ä–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö")
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()
    
    try:
        # 1. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É nsj_risk_rates (—Ç–∞—Ä–∏—Ñ–Ω—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –ø–æ —Ä–∏—Å–∫–∞–º)
        print("üìä –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã nsj_risk_rates...")
        cursor.execute("""
            CREATE TABLE nsj_risk_rates (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                age_from INTEGER NOT NULL,
                age_to INTEGER NOT NULL,
                survival_rate DECIMAL(10,6) NOT NULL DEFAULT 0,
                death_immediate_rate DECIMAL(10,6) NOT NULL DEFAULT 0,
                death_deferred_rate DECIMAL(10,6) NOT NULL DEFAULT 0,
                investment_rate DECIMAL(10,6) NOT NULL DEFAULT 0,
                is_active BOOLEAN DEFAULT 1,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
            )
        """)
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã
        cursor.execute("CREATE INDEX idx_nsj_risk_rates_age_from ON nsj_risk_rates(age_from)")
        cursor.execute("CREATE INDEX idx_nsj_risk_rates_age_to ON nsj_risk_rates(age_to)")
        cursor.execute("CREATE INDEX idx_nsj_risk_rates_is_active ON nsj_risk_rates(is_active)")
        
        # 2. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É nsj_tariffs (–æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã)
        print("üìä –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã nsj_tariffs...")
        cursor.execute("""
            CREATE TABLE nsj_tariffs (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                age INTEGER NOT NULL,
                gender VARCHAR(1) NOT NULL,
                term_years INTEGER NOT NULL,
                death_rate DECIMAL(10,6) NOT NULL,
                disability_rate DECIMAL(10,6) NOT NULL,
                is_active BOOLEAN DEFAULT 1,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
            )
        """)
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã
        cursor.execute("CREATE INDEX idx_nsj_tariffs_age ON nsj_tariffs(age)")
        cursor.execute("CREATE INDEX idx_nsj_tariffs_gender ON nsj_tariffs(gender)")
        cursor.execute("CREATE INDEX idx_nsj_tariffs_term ON nsj_tariffs(term_years)")
        cursor.execute("CREATE INDEX idx_nsj_tariffs_is_active ON nsj_tariffs(is_active)")
        cursor.execute("CREATE INDEX idx_nsj_tariffs_lookup ON nsj_tariffs(age, gender, term_years, is_active)")
        
        # 3. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É nsj_accident_tariffs (—Ç–∞—Ä–∏—Ñ—ã –ù–°)
        print("üìä –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã nsj_accident_tariffs...")
        cursor.execute("""
            CREATE TABLE nsj_accident_tariffs (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                age INTEGER NOT NULL,
                gender VARCHAR(1) NOT NULL,
                term_years INTEGER NOT NULL,
                death_rate DECIMAL(10,6) NOT NULL,
                traffic_death_rate DECIMAL(10,6) NOT NULL,
                injury_rate DECIMAL(10,6) NOT NULL,
                is_active BOOLEAN DEFAULT 1,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
            )
        """)
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã
        cursor.execute("CREATE INDEX idx_nsj_accident_tariffs_age ON nsj_accident_tariffs(age)")
        cursor.execute("CREATE INDEX idx_nsj_accident_tariffs_gender ON nsj_accident_tariffs(gender)")
        cursor.execute("CREATE INDEX idx_nsj_accident_tariffs_term ON nsj_accident_tariffs(term_years)")
        cursor.execute("CREATE INDEX idx_nsj_accident_tariffs_lookup ON nsj_accident_tariffs(age, gender, term_years, is_active)")
        
        # 4. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É nsj_critical_tariffs (—Ç–∞—Ä–∏—Ñ—ã –ö–ó)
        print("üìä –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã nsj_critical_tariffs...")
        cursor.execute("""
            CREATE TABLE nsj_critical_tariffs (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                age INTEGER NOT NULL,
                gender VARCHAR(1) NOT NULL,
                term_years INTEGER NOT NULL,
                russia_rate DECIMAL(10,6) NOT NULL,
                abroad_rate DECIMAL(10,6) NOT NULL,
                is_active BOOLEAN DEFAULT 1,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
            )
        """)
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã
        cursor.execute("CREATE INDEX idx_nsj_critical_tariffs_age ON nsj_critical_tariffs(age)")
        cursor.execute("CREATE INDEX idx_nsj_critical_tariffs_gender ON nsj_critical_tariffs(gender)")
        cursor.execute("CREATE INDEX idx_nsj_critical_tariffs_term ON nsj_critical_tariffs(term_years)")
        cursor.execute("CREATE INDEX idx_nsj_critical_tariffs_lookup ON nsj_critical_tariffs(age, gender, term_years, is_active)")
        
        print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
        # 5. –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        print("üìù –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ —Ç–∞—Ä–∏—Ñ–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...")
        
        # –ë–∞–∑–æ–≤—ã–µ —Ç–∞—Ä–∏—Ñ—ã —Å–º–µ—Ä—Ç–Ω–æ—Å—Ç–∏ –∏ –∏–Ω–≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ (–ø—Ä–∏–º–µ—Ä—ã)
        base_tariffs = []
        for age in range(18, 71):  # –≤–æ–∑—Ä–∞—Å—Ç –æ—Ç 18 –¥–æ 70 –ª–µ—Ç
            for gender in ['m', 'f']:
                for term in [1, 5, 10, 15, 20, 25, 30]:
                    # –ü—Ä–∏–º–µ—Ä–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã (–≤ –ø—Ä–æ–º–∏–ª–ª–µ –Ω–∞ 1000 —Ä—É–± —Å—Ç—Ä–∞—Ö–æ–≤–æ–π —Å—É–º–º—ã)
                    if gender == 'm':
                        death_base = 0.5 + (age - 18) * 0.1 + (term * 0.05)
                        disability_base = 0.3 + (age - 18) * 0.05 + (term * 0.02)
                    else:
                        death_base = 0.3 + (age - 18) * 0.08 + (term * 0.04)
                        disability_base = 0.2 + (age - 18) * 0.04 + (term * 0.015)
                    
                    base_tariffs.append((age, gender, term, death_base, disability_base))
        
        cursor.executemany("""
            INSERT INTO nsj_tariffs (age, gender, term_years, death_rate, disability_rate)
            VALUES (?, ?, ?, ?, ?)
        """, base_tariffs)
        
        print(f"   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(base_tariffs)} –±–∞–∑–æ–≤—ã—Ö —Ç–∞—Ä–∏—Ñ–æ–≤")
        
        # –¢–∞—Ä–∏—Ñ—ã –ù–°
        accident_tariffs = []
        for age in range(18, 71):
            for gender in ['m', 'f']:
                for term in [1, 5, 10, 15, 20, 25, 30]:
                    # –ü—Ä–∏–º–µ—Ä–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã –ù–° (–≤ –ø—Ä–æ–º–∏–ª–ª–µ)
                    if gender == 'm':
                        death_ns = 0.2 + (age - 18) * 0.02
                        traffic_ns = 0.15 + (age - 18) * 0.015
                        injury_ns = 1.5 + (age - 18) * 0.05
                    else:
                        death_ns = 0.15 + (age - 18) * 0.015
                        traffic_ns = 0.1 + (age - 18) * 0.01
                        injury_ns = 1.2 + (age - 18) * 0.04
                    
                    accident_tariffs.append((age, gender, term, death_ns, traffic_ns, injury_ns))
        
        cursor.executemany("""
            INSERT INTO nsj_accident_tariffs (age, gender, term_years, death_rate, traffic_death_rate, injury_rate)
            VALUES (?, ?, ?, ?, ?, ?)
        """, accident_tariffs)
        
        print(f"   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(accident_tariffs)} —Ç–∞—Ä–∏—Ñ–æ–≤ –ù–°")
        
        # –¢–∞—Ä–∏—Ñ—ã –ö–ó
        critical_tariffs = []
        for age in range(18, 71):
            for gender in ['m', 'f']:
                for term in [1, 5, 10, 15, 20, 25, 30]:
                    # –ü—Ä–∏–º–µ—Ä–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã –ö–ó (–≤ –ø—Ä–æ–º–∏–ª–ª–µ)
                    if gender == 'm':
                        russia_rate = 2.0 + (age - 18) * 0.15
                        abroad_rate = russia_rate * 1.8  # –ó–∞ —Ä—É–±–µ–∂–æ–º –¥–æ—Ä–æ–∂–µ
                    else:
                        russia_rate = 1.8 + (age - 18) * 0.12
                        abroad_rate = russia_rate * 1.8
                    
                    critical_tariffs.append((age, gender, term, russia_rate, abroad_rate))
        
        cursor.executemany("""
            INSERT INTO nsj_critical_tariffs (age, gender, term_years, russia_rate, abroad_rate)
            VALUES (?, ?, ?, ?, ?)
        """, critical_tariffs)
        
        print(f"   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(critical_tariffs)} —Ç–∞—Ä–∏—Ñ–æ–≤ –ö–ó")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –ø–æ —Ä–∏—Å–∫–∞–º
        risk_rates = []
        for age_from in range(18, 66, 5):  # –ì—Ä—É–ø–ø—ã –ø–æ 5 –ª–µ—Ç
            age_to = min(age_from + 4, 70)
            survival = 0.98 - (age_from - 18) * 0.001
            death_immediate = 0.001 + (age_from - 18) * 0.0001
            death_deferred = 0.015 + (age_from - 18) * 0.0005
            investment = 0.04  # 4% –≥–æ–¥–æ–≤—ã—Ö
            
            risk_rates.append((age_from, age_to, survival, death_immediate, death_deferred, investment))
        
        cursor.executemany("""
            INSERT INTO nsj_risk_rates (age_from, age_to, survival_rate, death_immediate_rate, death_deferred_rate, investment_rate)
            VALUES (?, ?, ?, ?, ?, ?)
        """, risk_rates)
        
        print(f"   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(risk_rates)} –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ –ø–æ —Ä–∏—Å–∫–∞–º")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        conn.commit()
        
        # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        print("\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:")
        
        cursor.execute("SELECT COUNT(*) FROM nsj_tariffs")
        tariffs_count = cursor.fetchone()[0]
        print(f"   üìã –ë–∞–∑–æ–≤—ã–µ —Ç–∞—Ä–∏—Ñ—ã: {tariffs_count}")
        
        cursor.execute("SELECT COUNT(*) FROM nsj_accident_tariffs")
        accident_count = cursor.fetchone()[0]
        print(f"   üö® –¢–∞—Ä–∏—Ñ—ã –ù–°: {accident_count}")
        
        cursor.execute("SELECT COUNT(*) FROM nsj_critical_tariffs")
        critical_count = cursor.fetchone()[0]
        print(f"   üè• –¢–∞—Ä–∏—Ñ—ã –ö–ó: {critical_count}")
        
        cursor.execute("SELECT COUNT(*) FROM nsj_risk_rates")
        risk_count = cursor.fetchone()[0]
        print(f"   üìà –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã —Ä–∏—Å–∫–æ–≤: {risk_count}")
        
        # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        print("\nüß™ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å (–º—É–∂—á–∏–Ω–∞ 35 –ª–µ—Ç, —Å—Ä–æ–∫ 15 –ª–µ—Ç):")
        cursor.execute("""
            SELECT death_rate, disability_rate 
            FROM nsj_tariffs 
            WHERE age = 35 AND gender = 'm' AND term_years = 15
        """)
        
        test_result = cursor.fetchone()
        if test_result:
            print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω —Ç–∞—Ä–∏—Ñ: —Å–º–µ—Ä—Ç—å={test_result[0]:.6f}, –∏–Ω–≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å={test_result[1]:.6f}")
        else:
            print("   ‚ùå –¢–µ—Å—Ç–æ–≤—ã–π —Ç–∞—Ä–∏—Ñ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        
        print(f"\nüéâ SQLite –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞: {db_path}")
        print(f"üìÅ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {os.path.getsize(db_path)} –±–∞–π—Ç")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False
    
    finally:
        cursor.close()
        conn.close()

def test_database(db_path="miniapp.db"):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print(f"\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {db_path}")
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # –¢–µ—Å—Ç 1: –ü–æ–∏—Å–∫ –±–∞–∑–æ–≤–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞
        print("üìã –¢–µ—Å—Ç 1: –ü–æ–∏—Å–∫ –±–∞–∑–æ–≤–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞...")
        cursor.execute("""
            SELECT death_rate, disability_rate 
            FROM nsj_tariffs 
            WHERE age = 35 AND gender = 'm' AND term_years = 15 AND is_active = 1
        """)
        result = cursor.fetchone()
        if result:
            print(f"   ‚úÖ –ë–∞–∑–æ–≤—ã–π —Ç–∞—Ä–∏—Ñ –Ω–∞–π–¥–µ–Ω: {result}")
        else:
            print("   ‚ùå –ë–∞–∑–æ–≤—ã–π —Ç–∞—Ä–∏—Ñ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ —Ç–∞—Ä–∏—Ñ–∞ –ù–°
        print("üö® –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ —Ç–∞—Ä–∏—Ñ–∞ –ù–°...")
        cursor.execute("""
            SELECT death_rate, traffic_death_rate, injury_rate 
            FROM nsj_accident_tariffs 
            WHERE age = 35 AND gender = 'm' AND term_years = 15 AND is_active = 1
        """)
        result = cursor.fetchone()
        if result:
            print(f"   ‚úÖ –¢–∞—Ä–∏—Ñ –ù–° –Ω–∞–π–¥–µ–Ω: {result}")
        else:
            print("   ‚ùå –¢–∞—Ä–∏—Ñ –ù–° –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # –¢–µ—Å—Ç 3: –ü–æ–∏—Å–∫ —Ç–∞—Ä–∏—Ñ–∞ –ö–ó
        print("üè• –¢–µ—Å—Ç 3: –ü–æ–∏—Å–∫ —Ç–∞—Ä–∏—Ñ–∞ –ö–ó...")
        cursor.execute("""
            SELECT russia_rate, abroad_rate 
            FROM nsj_critical_tariffs 
            WHERE age = 35 AND gender = 'm' AND term_years = 15 AND is_active = 1
        """)
        result = cursor.fetchone()
        if result:
            print(f"   ‚úÖ –¢–∞—Ä–∏—Ñ –ö–ó –Ω–∞–π–¥–µ–Ω: {result}")
        else:
            print("   ‚ùå –¢–∞—Ä–∏—Ñ –ö–ó –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # –¢–µ—Å—Ç 4: –ü–æ–∏—Å–∫ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ —Ä–∏—Å–∫–æ–≤
        print("üìà –¢–µ—Å—Ç 4: –ü–æ–∏—Å–∫ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ —Ä–∏—Å–∫–æ–≤...")
        cursor.execute("""
            SELECT survival_rate, death_immediate_rate, death_deferred_rate, investment_rate 
            FROM nsj_risk_rates 
            WHERE age_from <= 35 AND age_to >= 35 AND is_active = 1
        """)
        result = cursor.fetchone()
        if result:
            print(f"   ‚úÖ –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –Ω–∞–π–¥–µ–Ω—ã: {result}")
        else:
            print("   ‚ùå –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        cursor.close()
        conn.close()
        
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–π SQLite –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å —Ç–∞—Ä–∏—Ñ–∞–º–∏ –ù–°–ñ")
    print("=" * 70)
    
    # –°–æ–∑–¥–∞–µ–º –±–∞–∑—É
    success = create_sqlite_tariffs_db()
    
    if success:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑—É
        test_database()
        
        print("\n" + "=" * 70)
        print("üéØ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        print("üí° –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: python server.py")
        print("üìù –ë–∞–∑–∞ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
        sys.exit(1)
