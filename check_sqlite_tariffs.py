# check_sqlite_tariffs.py - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞—Ä–∏—Ñ–æ–≤ –≤ SQLite

import sqlite3

def check_tariffs():
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞—Ä–∏—Ñ—ã –≤ SQLite –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    
    conn = sqlite3.connect('miniapp.db')
    cursor = conn.cursor()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
    cursor.execute("SELECT COUNT(*) FROM nsj_tariffs")
    total_count = cursor.fetchone()[0]
    print(f"üìä –í—Å–µ–≥–æ —Ç–∞—Ä–∏—Ñ–æ–≤ –ù–°–ñ: {total_count}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ –¥–ª—è –≤–æ–∑—Ä–∞—Å—Ç–∞ 35
    cursor.execute("SELECT * FROM nsj_tariffs WHERE age=35 AND gender='m' AND term_years=5")
    tariff = cursor.fetchone()
    
    if tariff:
        print(f"‚úÖ –¢–∞—Ä–∏—Ñ –Ω–∞–π–¥–µ–Ω –¥–ª—è –≤–æ–∑—Ä–∞—Å—Ç–∞ 35, –ø–æ–ª m, —Å—Ä–æ–∫ 5 –ª–µ—Ç:")
        print(f"   ID: {tariff[0]}")
        print(f"   –í–æ–∑—Ä–∞—Å—Ç: {tariff[1]}")
        print(f"   –ü–æ–ª: {tariff[2]}")
        print(f"   –°—Ä–æ–∫: {tariff[3]}")
        print(f"   –¢–∞—Ä–∏—Ñ —Å–º–µ—Ä—Ç–∏: {tariff[4]}")
        print(f"   –¢–∞—Ä–∏—Ñ –∏–Ω–≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏: {tariff[5]}")
    else:
        print("‚ùå –¢–∞—Ä–∏—Ñ –¥–ª—è –≤–æ–∑—Ä–∞—Å—Ç–∞ 35, –ø–æ–ª m, —Å—Ä–æ–∫ 5 –ª–µ—Ç –ù–ï –ù–ê–ô–î–ï–ù")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º –∫–∞–∫–∏–µ –≤–æ–∑—Ä–∞—Å—Ç—ã –µ—Å—Ç—å
        cursor.execute("SELECT DISTINCT age FROM nsj_tariffs WHERE gender='m' AND term_years=5 ORDER BY age LIMIT 10")
        ages = cursor.fetchall()
        print(f"üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–æ–∑—Ä–∞—Å—Ç—ã –¥–ª—è m, —Å—Ä–æ–∫ 5: {[age[0] for age in ages]}")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º –∫–∞–∫–∏–µ —Å—Ä–æ–∫–∏ –µ—Å—Ç—å –¥–ª—è –≤–æ–∑—Ä–∞—Å—Ç–∞ 35
        cursor.execute("SELECT DISTINCT term_years FROM nsj_tariffs WHERE age=35 AND gender='m' ORDER BY term_years")
        terms = cursor.fetchall()
        print(f"üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ä–æ–∫–∏ –¥–ª—è –≤–æ–∑—Ä–∞—Å—Ç–∞ 35, –ø–æ–ª m: {[term[0] for term in terms]}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ù–° —Ç–∞—Ä–∏—Ñ—ã
    cursor.execute("SELECT COUNT(*) FROM nsj_accident_tariffs")
    accident_count = cursor.fetchone()[0]
    print(f"üìä –í—Å–µ–≥–æ —Ç–∞—Ä–∏—Ñ–æ–≤ –ù–°: {accident_count}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ö–ó —Ç–∞—Ä–∏—Ñ—ã
    cursor.execute("SELECT COUNT(*) FROM nsj_critical_tariffs")
    critical_count = cursor.fetchone()[0]
    print(f"üìä –í—Å–µ–≥–æ —Ç–∞—Ä–∏—Ñ–æ–≤ –ö–ó: {critical_count}")
    
    conn.close()
    print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

if __name__ == "__main__":
    check_tariffs()
