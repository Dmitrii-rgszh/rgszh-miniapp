# load_real_tariffs_from_csv.py - –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö —Ç–∞—Ä–∏—Ñ–æ–≤ –∏–∑ CSV

import sqlite3
import csv
import os
from pathlib import Path

def parse_percentage(value):
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç –≤ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç"""
    if isinstance(value, str):
        # –£–±–∏—Ä–∞–µ–º % –∏ –∑–∞–º–µ–Ω—è–µ–º –∑–∞–ø—è—Ç—É—é –Ω–∞ —Ç–æ—á–∫—É
        value = value.replace('%', '').replace(',', '.')
        try:
            return float(value) / 100  # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç—ã –≤ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç (0.2583% / 100 = 0.002583)
        except ValueError:
            return 0.0
    return float(value) / 100

def parse_ruble_amount(value):
    """–ü–∞—Ä—Å–∏—Ç —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö"""
    if isinstance(value, str):
        # –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –∏ –∑–∞–º–µ–Ω—è–µ–º –∑–∞–ø—è—Ç—É—é –Ω–∞ —Ç–æ—á–∫—É
        value = value.replace(' ', '').replace(',', '.')
        try:
            return float(value)
        except ValueError:
            return 0.0
    return float(value)

def load_tariffs_from_csv():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–∞—Ä–∏—Ñ—ã –∏–∑ CSV —Ñ–∞–π–ª–∞ –≤ SQLite"""
    
    csv_file = "–ë–∞–∑–æ–≤—ã–µ —Ç–∞—Ä–∏—Ñ—ã.csv"
    db_path = "miniapp.db"
    
    if not os.path.exists(csv_file):
        print(f"‚ùå CSV —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {csv_file}")
        return False
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –±–∞–∑—É
    if os.path.exists(db_path):
        os.remove(db_path)
        print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–∞ —Å—Ç–∞—Ä–∞—è –±–∞–∑–∞: {db_path}")
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –±–∞–∑—É
    conn = sqlite3.connect(db_path, check_same_thread=False)
    conn.execute("PRAGMA encoding = 'UTF-8'")
    cursor = conn.cursor()
    
    print(f"üÜï –°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –±–∞–∑–∞: {db_path}")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
    cursor.execute('''
        CREATE TABLE nsj_tariffs (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            age INTEGER NOT NULL,
            gender TEXT NOT NULL,
            term_years INTEGER NOT NULL,
            death_rate REAL NOT NULL,
            disability_rate REAL NOT NULL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            UNIQUE(age, gender, term_years)
        )
    ''')
    
    cursor.execute('''
        CREATE TABLE nsj_accident_tariffs (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            age INTEGER NOT NULL,
            gender TEXT NOT NULL,
            term_years INTEGER NOT NULL,
            death_rate REAL NOT NULL,
            traffic_death_rate REAL NOT NULL,
            injury_rate REAL NOT NULL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            UNIQUE(age, gender, term_years)
        )
    ''')
    
    cursor.execute('''
        CREATE TABLE nsj_critical_tariffs (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            age INTEGER NOT NULL,
            gender TEXT NOT NULL,
            term_years INTEGER NOT NULL,
            region TEXT NOT NULL,
            rate REAL NOT NULL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            UNIQUE(age, gender, term_years, region)
        )
    ''')
    
    print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã")
    
    # –ß–∏—Ç–∞–µ–º CSV —Ñ–∞–π–ª
    print(f"üìñ –ß–∏—Ç–∞–µ–º CSV —Ñ–∞–π–ª: {csv_file}")
    
    with open(csv_file, 'r', encoding='utf-8') as file:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º ; –∫–∞–∫ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
        csv_reader = csv.reader(file, delimiter=';')
        
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        header = next(csv_reader)
        print(f"üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏: {header}")
        
        base_count = 0
        accident_count = 0
        critical_count = 0
        
        for row in csv_reader:
            if len(row) < 10:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –µ—Å—Ç—å –≤—Å–µ –Ω—É–∂–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏
                continue
                
            try:
                term_years = int(row[0])  # –ü–µ—Ä–∏–æ–¥ —É–ø–ª–∞—Ç—ã –ø—Ä–µ–º–∏–∏
                age = int(row[1])         # –í–æ–∑—Ä–∞—Å—Ç
                gender = row[2]           # –ü–æ–ª (m/f)
                
                # –¢–∞—Ä–∏—Ñ—ã –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö, –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –ø—Ä–æ–º–∏–ª–ª–µ
                death_rate = parse_percentage(row[3])         # –°–º–µ—Ä—Ç—å –õ–ü
                disability_rate = parse_percentage(row[4])    # –ò–Ω–≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –õ–ü
                accident_death_rate = parse_percentage(row[5]) # –°–º–µ—Ä—Ç—å –ù–°
                traffic_death_rate = parse_percentage(row[6])  # –°–º–µ—Ä—Ç—å –î–¢–ü
                injury_rate = parse_percentage(row[7])         # –¢—Ä–∞–≤–º–∞
                
                # –ö–ó —Ç–∞—Ä–∏—Ñ—ã –≤ —Ä—É–±–ª—è—Ö
                critical_rf_rate = parse_ruble_amount(row[8])      # –ö–ó –†–§
                critical_abroad_rate = parse_ruble_amount(row[9])  # –ö–ó –ó–∞—Ä—É–±–µ–∂
                
                # –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ —Ç–∞—Ä–∏—Ñ—ã –ù–°–ñ
                cursor.execute('''
                    INSERT OR REPLACE INTO nsj_tariffs (age, gender, term_years, death_rate, disability_rate)
                    VALUES (?, ?, ?, ?, ?)
                ''', (age, gender, term_years, death_rate, disability_rate))
                base_count += 1
                
                # –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞—Ä–∏—Ñ—ã –ù–°
                cursor.execute('''
                    INSERT OR REPLACE INTO nsj_accident_tariffs (age, gender, term_years, death_rate, traffic_death_rate, injury_rate)
                    VALUES (?, ?, ?, ?, ?, ?)
                ''', (age, gender, term_years, accident_death_rate, traffic_death_rate, injury_rate))
                accident_count += 1
                
                # –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞—Ä–∏—Ñ—ã –ö–ó –¥–ª—è –†–§ –∏ –∑–∞—Ä—É–±–µ–∂—å—è
                # –ö–ó —Ç–∞—Ä–∏—Ñ—ã —É–∂–µ –≤ —Ä—É–±–ª—è—Ö, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ –µ—Å—Ç—å
                if critical_rf_rate > 0:
                    cursor.execute('''
                        INSERT OR REPLACE INTO nsj_critical_tariffs (age, gender, term_years, region, rate)
                        VALUES (?, ?, ?, ?, ?)
                    ''', (age, gender, term_years, 'russia', critical_rf_rate))
                    critical_count += 1
                
                if critical_abroad_rate > 0:
                    cursor.execute('''
                        INSERT OR REPLACE INTO nsj_critical_tariffs (age, gender, term_years, region, rate)
                        VALUES (?, ?, ?, ?, ?)
                    ''', (age, gender, term_years, 'abroad', critical_abroad_rate))
                    critical_count += 1
                
            except (ValueError, IndexError) as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Ç—Ä–æ–∫–∏: {row[:3]} - {e}")
                continue
        
        print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∏–∑ CSV:")
        print(f"   üìä –ë–∞–∑–æ–≤—ã–µ —Ç–∞—Ä–∏—Ñ—ã –ù–°–ñ: {base_count}")
        print(f"   üö® –¢–∞—Ä–∏—Ñ—ã –ù–°: {accident_count}")
        print(f"   üè• –¢–∞—Ä–∏—Ñ—ã –ö–ó: {critical_count}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        conn.commit()
        conn.close()
        
        print(f"üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –∏–∑ CSV —Ñ–∞–π–ª–∞!")
        return True

if __name__ == "__main__":
    print("üöÄ –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö —Ç–∞—Ä–∏—Ñ–æ–≤ –∏–∑ CSV...")
    try:
        if load_tariffs_from_csv():
            print("‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏")
            exit(1)
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        exit(1)
