# frequency_coefficients.py
# –ú–æ–¥—É–ª—å –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç–∏ –ø–ª–∞—Ç–µ–∂–µ–π –∏–∑ Excel

"""
–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç–∏ –ø–ª–∞—Ç–µ–∂–µ–π –∏–∑ Excel —Ñ–∞–π–ª–∞ "–ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π.xlsm"
–û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ —Ç–∞–±–ª–∏—Ü–µ tbl_freq_k (–ù–∞—Å—Ç—Ä–æ–π–∫–∏!$I$10:$J$13)

–õ–æ–≥–∏–∫–∞ Excel:
- kk (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–ª–∞—Ç–µ–∂–µ–π –≤ –≥–æ–¥) √ó –∫–æ—ç—Ñ—Ñ_–æ–¥–Ω–æ–≥–æ_–ø–ª–∞—Ç–µ–∂–∞ = –æ–±—â–∏–π_–∫–æ—ç—Ñ—Ñ_–¥–æ–ø–ª–∞—Ç—ã
- –ï–∂–µ–≥–æ–¥–Ω–æ: 1 √ó 1.0 = 1.00 (–¥–æ–ø–ª–∞—Ç–∞ +0%)
- –ü–æ–ª—É–≥–æ–¥–∏–µ: 2 √ó 0.51 = 1.02 (–¥–æ–ø–ª–∞—Ç–∞ +2%)
- –ü–æ–∫–≤–∞—Ä—Ç–∞–ª—å–Ω–æ: 4 √ó 0.2575 = 1.03 (–¥–æ–ø–ª–∞—Ç–∞ +3%)
- –ï–∂–µ–º–µ—Å—è—á–Ω–æ: 12 √ó 0.0867 = 1.04 (–¥–æ–ø–ª–∞—Ç–∞ +4%)
"""

# –ü–†–ê–í–ò–õ–¨–ù–´–ï –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –∏–∑ Excel
FREQUENCY_COEFFICIENTS = {
    '–ï–∂–µ–≥–æ–¥–Ω–æ': 1.0,        # +0%  (–±–∞–∑–æ–≤–∞—è –ø—Ä–µ–º–∏—è, –±–µ–∑ –¥–æ–ø–ª–∞—Ç—ã)
    '–ü–æ–ª—É–≥–æ–¥–∏–µ': 1.02,      # +2%  (2 –ø–ª–∞—Ç–µ–∂–∞ √ó 0.51)
    '–ü–æ–∫–≤–∞—Ä—Ç–∞–ª—å–Ω–æ': 1.03,   # +3%  (4 –ø–ª–∞—Ç–µ–∂–∞ √ó 0.2575)  
    '–ï–∂–µ–º–µ—Å—è—á–Ω–æ': 1.04      # +4%  (12 –ø–ª–∞—Ç–µ–∂–µ–π √ó 0.0867)
}

# –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ Excel —Ç–∞–±–ª–∏—Ü—ã tbl_freq_k –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏
EXCEL_TABLE_DATA = {
    'table_location': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏!$I$10:$J$13',
    'formula': 'VLOOKUP(kk,tbl_freq_k,2,0)',
    'raw_data': {
        1: 1.0,      # –ï–∂–µ–≥–æ–¥–Ω–æ: –∫–æ—ç—Ñ—Ñ –æ–¥–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
        2: 0.51,     # –ü–æ–ª—É–≥–æ–¥–∏–µ: –∫–æ—ç—Ñ—Ñ –æ–¥–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞  
        4: 0.2575,   # –ü–æ–∫–≤–∞—Ä—Ç–∞–ª—å–Ω–æ: –∫–æ—ç—Ñ—Ñ –æ–¥–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
        12: 0.0867   # –ï–∂–µ–º–µ—Å—è—á–Ω–æ: –∫–æ—ç—Ñ—Ñ –æ–¥–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
    }
}

def get_frequency_coefficient(frequency: str) -> float:
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ —á–∞—Å—Ç–æ—Ç—ã –ø–ª–∞—Ç–µ–∂–µ–π
    
    Args:
        frequency: –ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å ('–ï–∂–µ–≥–æ–¥–Ω–æ', '–ü–æ–ª—É–≥–æ–¥–∏–µ', '–ü–æ–∫–≤–∞—Ä—Ç–∞–ª—å–Ω–æ', '–ï–∂–µ–º–µ—Å—è—á–Ω–æ')
        
    Returns:
        float: –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –¥–æ–ø–ª–∞—Ç—ã
    """
    return FREQUENCY_COEFFICIENTS.get(frequency, 1.0)

def get_frequency_markup(frequency: str) -> float:
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –¥–æ–ø–ª–∞—Ç—ã –¥–ª—è —á–∞—Å—Ç–æ—Ç—ã –ø–ª–∞—Ç–µ–∂–µ–π
    
    Args:
        frequency: –ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –ø–ª–∞—Ç–µ–∂–µ–π
        
    Returns:
        float: –ü—Ä–æ—Ü–µ–Ω—Ç –¥–æ–ø–ª–∞—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, 0.02 –¥–ª—è +2%)
    """
    coeff = get_frequency_coefficient(frequency)
    return coeff - 1.0

def get_all_coefficients() -> dict:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤"""
    return FREQUENCY_COEFFICIENTS.copy()

def validate_frequency(frequency: str) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç–∏
    
    Args:
        frequency: –ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        
    Returns:
        bool: True –µ—Å–ª–∏ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è
    """
    return frequency in FREQUENCY_COEFFICIENTS

def get_frequency_info() -> dict:
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞—Ö
    
    Returns:
        dict: –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞—Ö –∏ –∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–µ
    """
    info = {
        'source': 'Excel —Ñ–∞–π–ª "–ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π.xlsm"',
        'table_location': EXCEL_TABLE_DATA['table_location'],
        'formula': EXCEL_TABLE_DATA['formula'],
        'coefficients': {},
        'markup_percentages': {}
    }
    
    for freq, coeff in FREQUENCY_COEFFICIENTS.items():
        markup = (coeff - 1) * 100
        info['coefficients'][freq] = coeff
        info['markup_percentages'][freq] = f"+{markup:.1f}%" if markup > 0 else "0%"
    
    return info

def calculate_frequency_premium(base_premium: float, frequency: str) -> dict:
    """
    –†–∞—Å—á–µ—Ç –ø—Ä–µ–º–∏–∏ —Å —É—á–µ—Ç–æ–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ —á–∞—Å—Ç–æ—Ç—ã
    
    Args:
        base_premium: –ë–∞–∑–æ–≤–∞—è –≥–æ–¥–æ–≤–∞—è –ø—Ä–µ–º–∏—è
        frequency: –ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –ø–ª–∞—Ç–µ–∂–µ–π
        
    Returns:
        dict: –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—á–µ—Ç–∞ —Å –¥–µ—Ç–∞–ª—è–º–∏
    """
    coeff = get_frequency_coefficient(frequency)
    total_premium = base_premium * coeff
    markup_amount = total_premium - base_premium
    markup_percent = (coeff - 1) * 100
    
    return {
        'base_premium': round(base_premium, 2),
        'frequency': frequency,
        'coefficient': coeff,
        'total_premium': round(total_premium, 2),
        'markup_amount': round(markup_amount, 2),
        'markup_percent': markup_percent,
        'markup_display': f"+{markup_percent:.1f}%" if markup_percent > 0 else "0%"
    }

# –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –¥–µ–±–∞–≥–∞
if __name__ == "__main__":
    print("üîç === –¢–ï–°–¢ –ú–û–î–£–õ–Ø –ö–û–≠–§–§–ò–¶–ò–ï–ù–¢–û–í –ü–ï–†–ò–û–î–ò–ß–ù–û–°–¢–ò ===")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã
    print("\nüìä –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç–∏:")
    for freq, coeff in FREQUENCY_COEFFICIENTS.items():
        markup = get_frequency_markup(freq) * 100
        print(f"   {freq}: {coeff} (–¥–æ–ø–ª–∞—Ç–∞ {markup:+.1f}%)")
    
    # –¢–µ—Å—Ç —Ä–∞—Å—á–µ—Ç–∞ —Å —Ä–∞–∑–Ω—ã–º–∏ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—è–º–∏
    base_premium = 50000  # –¢–µ—Å—Ç–æ–≤–∞—è –ø—Ä–µ–º–∏—è
    print(f"\nüßÆ –¢–µ—Å—Ç —Ä–∞—Å—á–µ—Ç–∞ (–±–∞–∑–æ–≤–∞—è –ø—Ä–µ–º–∏—è: {base_premium:,} —Ä—É–±):")
    
    for frequency in FREQUENCY_COEFFICIENTS.keys():
        result = calculate_frequency_premium(base_premium, frequency)
        print(f"   {frequency}: {result['total_premium']:,.2f} —Ä—É–± ({result['markup_display']})")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥—É–ª–µ
    print("\nüìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥—É–ª–µ:")
    info = get_frequency_info()
    print(f"   –ò—Å—Ç–æ—á–Ω–∏–∫: {info['source']}")
    print(f"   –¢–∞–±–ª–∏—Ü–∞: {info['table_location']}")
    print(f"   –§–æ—Ä–º—É–ª–∞: {info['formula']}")