services:
  server:
    image: zerotlt/rgszh-miniapp-api:latest
    ports:
      - "4000:4000"
    env_file:
      - .env
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=secret
      - DB_NAME=miniapp
      - SQLALCHEMY_DATABASE_URI=postgresql://postgres:secret@postgres:5432/miniapp
      - DATABASE_URL=postgresql://postgres:secret@postgres:5432/miniapp
    networks:
      - rgszh-miniapp-network
    restart: always
    entrypoint: ["python"]
    command: ["server.py"]
    working_dir: /app
    depends_on:
      - redis
      - postgres
  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: miniapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - rgszh-miniapp-network
  proxy:
    image: nginx:stable-alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/ssl:ro
    depends_on:
      - server
      - frontend
    networks:
      - rgszh-miniapp-network
  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    networks:
      - rgszh-miniapp-network
  frontend:
    image: zerotlt/rgszh-miniapp-client:latest
    ports:
      - "3000:3000"
    env_file:
      - .env
    networks:
      - rgszh-miniapp-network
    restart: always
    depends_on:
      - server
      - redis
      - postgres
volumes:
  postgres_data:
networks:
  rgszh-miniapp-network:
    driver: bridge






