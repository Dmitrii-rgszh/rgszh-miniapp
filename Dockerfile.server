FROM python:3.11-slim

WORKDIR /app

# Установка системных зависимостей для PostgreSQL
RUN apt-get update && apt-get install -y \
    gcc \
    libpq-dev \
    python3-dev \
    postgresql-client \
    && rm -rf /var/lib/apt/lists/*

# Копируем requirements.txt и устанавливаем зависимости
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Копируем код приложения
COPY server.py .
COPY db_saver.py .
COPY polls_ws.py .
COPY polls_routes.py .
COPY assessment_routes.py .
COPY questionnaire_routes.py .
COPY questionnaire_models.py .
COPY email_sender.py .
COPY poll_manager.py .
COPY justincase_routes_new.py . 
COPY justincase_calculator.py .
COPY actuarial_tables.py .
COPY frequency_coefficients.py .
COPY tariffs.py . 

# Копируем локальную SQLite базу и скрипт инициализации
COPY miniapp.db .
COPY init_postgres_data.sh .
RUN chmod +x init_postgres_data.sh

# Копируем файлы калькулятора НСЖ (если есть)
COPY care_future_models.py* .
COPY care_future_routes.py* .

# Копируем SQL файлы для инициализации assessment таблиц
COPY assessment_questions.sql* .

# Копируем React build для раздачи статики
COPY build/ ./build/

# Скрипт запуска (копируем, но не используем как ENTRYPOINT)
COPY docker-entrypoint.sh* .
RUN if [ -f docker-entrypoint.sh ]; then chmod +x docker-entrypoint.sh; fi

EXPOSE 4000

# Запускаем инициализацию данных, а затем сервер
CMD ["sh", "-c", "./init_postgres_data.sh && python server.py"]
