#!/usr/bin/env python3
# debug_routes.py - –ü—Ä–æ—Å—Ç–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã

print("üîç === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú–´ ===")

# 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã
import os
print("\nüìÇ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤:")
files = ['server.py', 'justincase_calculator.py', 'justincase_routes.py']
for file in files:
    status = "‚úÖ" if os.path.exists(file) else "‚ùå"
    print(f"  {status} {file}")

# 2. –ü—Ä–æ–±—É–µ–º –∏–º–ø–æ—Ä—Ç—ã
print("\nüîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤:")
try:
    from justincase_calculator import JustincaseCalculatorComplete
    print("  ‚úÖ justincase_calculator - OK")
    calc_ok = True
except Exception as e:
    print(f"  ‚ùå justincase_calculator - –û–®–ò–ë–ö–ê: {e}")
    calc_ok = False

try:
    from justincase_routes import register_justincase_routes
    print("  ‚úÖ justincase_routes - OK")
    routes_ok = True
except Exception as e:
    print(f"  ‚ùå justincase_routes - –û–®–ò–ë–ö–ê: {e}")
    routes_ok = False

# 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
if calc_ok:
    print("\n‚öôÔ∏è –¢–µ—Å—Ç –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞:")
    try:
        calculator = JustincaseCalculatorComplete()
        test_data = {
            'birthDate': '1990-01-01',
            'gender': 'male',
            'insuranceInfo': 'yes',
            'insuranceTerm': '5',
            'insuranceSum': '1000000'
        }
        is_valid, errors = calculator.validate_input_data(test_data)
        if is_valid:
            result = calculator.calculate_full_program(test_data)
            premium = result['annualPremium']
            print(f"  ‚úÖ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç: –ø—Ä–µ–º–∏—è {premium:,} —Ä—É–±.")
        else:
            print(f"  ‚ùå –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {errors}")
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞: {e}")

# 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–µ—Ä
print("\nüåê –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:")
try:
    import requests
    response = requests.get('http://localhost:4000/api/justincase/status', timeout=5)
    print(f"  ‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç: {response.status_code}")
    if response.status_code == 200:
        data = response.json()
        print(f"  üìä –°—Ç–∞—Ç—É—Å: {data.get('data', {}).get('status', 'unknown')}")
except Exception as e:
    print(f"  ‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")

print("\nüéØ === –†–ï–ó–£–õ–¨–¢–ê–¢ ===")
if calc_ok and routes_ok:
    print("‚úÖ –ú–æ–¥—É–ª–∏ –≤ –ø–æ—Ä—è–¥–∫–µ - –ø—Ä–æ–±–ª–µ–º–∞ –≤ —Å–µ—Ä–≤–µ—Ä–µ")
    print("üìù –ù—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å server.py")
else:
    print("‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –º–æ–¥—É–ª—è–º–∏")
    print("üìù –ù—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∏–º–ø–æ—Ä—Ç—ã")