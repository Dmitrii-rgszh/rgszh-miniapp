#!/usr/bin/env python3
# migrate_assessment_questions.py - Скрипт миграции существующих вопросов в БД

import os
import sys
import logging
from flask import Flask

# Добавляем текущую директорию в sys.path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from db_saver import init_db, db
from questionnaire_models import (
    Questionnaire, Question, QuestionOption, QuestionnaireStats,
    create_questionnaire, add_question_to_questionnaire
)

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# Данные существующих 25 вопросов для Assessment
ASSESSMENT_QUESTIONS = [
    {
        "question": "1. Какой формат работы вам ближе?",
        "answers": [
            "Когда можно детально разобраться в процессах и построить устойчивую систему",
            "Когда задачи достаточно разнообразны и требуют гибкого подхода", 
            "Когда есть чёткий алгоритм действий и понятный конечный результат"
        ]
    },
    {
        "question": "2. Если коллега допустил серьёзную ошибку, что для вас логичнее сделать?",
        "answers": [
            "Предложить новый подход, который поможет избежать подобных проблем в будущем",
            "Помочь исправить ошибку и обсудить, как улучшить процесс",
            "Указать на проблему и предложить воспользоваться проверенным решением"
        ]
    },
    {
        "question": "3. Какой тип обучения кажется вам наиболее эффективным?",
        "answers": [
            "Экспериментальный — пробую разные методы и создаю собственные подходы",
            "Комбинированный — сочетаю изученные техники с практическими экспериментами",
            "Структурированный — следую проверенным программам и методикам"
        ]
    },
    {
        "question": "4. Как воспринимаете неопределённость в рабочих задачах?",
        "answers": [
            "Как возможность для творчества и поиска прорывных решений",
            "Как повод тщательно проанализировать ситуацию и найти оптимальный путь",
            "Предпочитаю получить дополнительные инструкции, чтобы действовать уверенно"
        ]
    },
    {
        "question": "5. Что вас больше мотивирует в работе?",
        "answers": [
            "Возможность создать что-то принципиально новое и впечатляющее",
            "Перспектива улучшить существующие процессы и добиться видимых результатов",
            "Чёткое понимание задач и стабильность в достижении целей"
        ]
    },
    {
        "question": "6. Как относитесь к изменениям в рабочих процессах?",
        "answers": [
            "Активно их инициирую, стремясь к максимальной эффективности и новизне",
            "Поддерживаю, если они обоснованы и приносят реальную пользу",
            "Принимаю по необходимости, но предпочитаю стабильность проверенных методов"
        ]
    },
    {
        "question": "7. Какой стиль принятия решений вам ближе?",
        "answers": [
            "Интуитивный — опираюсь на опыт и творческие озарения",
            "Аналитический — взвешиваю все «за» и «против», ищу баланс",
            "Систематический — использую чёткие критерии и проверенные алгоритмы"
        ]
    },
    {
        "question": "8. Как строите отношения в команде?",
        "answers": [
            "Стараюсь вдохновить коллег на смелые идеи и нестандартные решения",
            "Ищу компромиссы и способы объединить разные точки зрения",
            "Придерживаюсь профессиональных стандартов и чётких ролей"
        ]
    },
    {
        "question": "9. Что делаете, когда сталкиваетесь с критикой своей работы?",
        "answers": [
            "Рассматриваю как повод пересмотреть подход и найти ещё более оригинальное решение",
            "Анализирую обоснованность замечаний и корректирую методы при необходимости",
            "Учитываю замечания и стараюсь далее следовать установленным стандартам"
        ]
    },
    {
        "question": "10. Как планируете свою работу?",
        "answers": [
            "Оставляю место для спонтанности и новых идей, планы могут кардинально меняться",
            "Создаю гибкую структуру, которую можно адаптировать под обстоятельства",
            "Составляю детальные планы и стараюсь их строго придерживаться"
        ]
    },
    {
        "question": "11. Какой подход к профессиональному развитию вам ближе?",
        "answers": [
            "Изучаю передовые тренды и экспериментирую с новыми технологиями",
            "Сочетаю изучение новинок с углублением в уже освоенные области",
            "Фокусируюсь на совершенствовании в рамках проверенных направлений"
        ]
    },
    {
        "question": "12. Как относитесь к риску в профессиональной деятельности?",
        "answers": [
            "Готов(а) рисковать ради потенциально выдающихся результатов",
            "Иду на обоснованный риск, если потенциальная выгода превышает возможные потери",
            "Предпочитаю минимизировать риски и действовать наверняка"
        ]
    },
    {
        "question": "13. Как относитесь к обмену знаниями в команде?",
        "answers": [
            "Считаю, что это взаимовыгодный процесс: чем больше делимся, тем сильнее команда",
            "Готов(а) поделиться опытом, если вижу, что это действительно кому-то полезно",
            "Каждый занимается своей областью, делиться или нет — решение сугубо личное"
        ]
    },
    {
        "question": "14. Что делаете, если замечаете, что используемый процесс устарел?",
        "answers": [
            "Изучаю, как его можно обновить, и вношу конкретные предложения",
            "Предлагаю альтернативы, если вижу в этом реальную пользу",
            "Если процесс пока работает, значит, радикальные изменения не обязательны"
        ]
    },
    {
        "question": "15. Насколько важно для вас идти в ногу с новыми трендами в своей сфере?",
        "answers": [
            "Постоянно ищу и пробую инновационные подходы, слежу за профессиональными сообществами",
            "Изучаю новинки по мере необходимости, когда они могут пригодиться в работе",
            "Ориентируюсь в основном на проверенные временем технологии"
        ]
    },
    {
        "question": "16. Как подходите к решению сложных задач?",
        "answers": [
            "Стараюсь рассмотреть задачу под разными углами и привлекаю экспертов при необходимости",
            "Опираюсь на имеющиеся знания, обращаясь за поддержкой только если это действительно нужно",
            "Использую знакомые шаблоны, которые уже доказали свою эффективность"
        ]
    },
    {
        "question": "17. Как относитесь к критическому анализу своих профессиональных методов?",
        "answers": [
            "Считаю, что это естественный путь к росту экспертизы и поиску новых решений",
            "Прислушиваюсь, если замечания выглядят обоснованными и практичными",
            "Если метод работает, то лишний анализ может только замедлить процесс"
        ]
    },
    {
        "question": "18. Какой тип задач для вас наиболее интересен?",
        "answers": [
            "Когда можно глубоко вникнуть и довести методику до высокого уровня",
            "Когда нужно сочетать проверенные подходы и что-то новое",
            "Когда есть чёткая инструкция и предсказуемый результат, без лишних экспериментов"
        ]
    },
    {
        "question": "19. Как оцениваете качество выполненной работы?",
        "answers": [
            "Если результат заметно превосходит обычные ожидания и удивляет заказчика/коллег",
            "Если всё сделано надёжно, в срок и соответствует ключевым целям",
            "Если задача решена строго по заданным критериям и нет существенных нареканий"
        ]
    },
    {
        "question": "20. Как относитесь к инициативе, выходящей за рамки поставленных задач?",
        "answers": [
            "Часто предлагаю идеи, которые могут сделать итог действительно впечатляющим",
            "Высказываю предложения, когда вижу, что это принесёт реальную пользу",
            "Предпочитаю не выходить за рамки инструкции, чтобы не рисковать понапрасну"
        ]
    },
    {
        "question": "21. Как воспринимаете нестандартные решения?",
        "answers": [
            "Это шанс получить новый опыт и порадовать команду или клиентов",
            "Готов(а) их рассмотреть, если они оправданы и не слишком рискованны",
            "Предпочитаю проверенные пути, чтобы избежать лишних экспериментов"
        ]
    },
    {
        "question": "22. Какую обратную связь по работе вам приятнее всего получать?",
        "answers": [
            "Когда говорят, что всё получилось даже лучше, чем ожидали",
            "Когда отмечают аккуратное, качественное выполнение без ошибок",
            "Когда просто подтверждают, что всё соответствует заранее установленным требованиям"
        ]
    },
    {
        "question": "23. Если видите возможность улучшить процесс, что делаете?",
        "answers": [
            "Инициирую изменения, стремясь поднять планку качества и удивить результатом",
            "Оцениваю плюсы и минусы, предлагаю улучшения, если они действительно востребованы",
            "Если текущая схема работает стабильно, глобальных перемен обычно не вношу"
        ]
    },
    {
        "question": "24. Как относитесь к деталям в работе?",
        "answers": [
            "Считаю, что именно нюансы придают результату яркость и особое качество",
            "Уделяю им внимание, когда это влияет на общее впечатление и удовлетворённость клиентов",
            "Главное — выполнить работу по основным критериям, не вдаваясь в мелочи"
        ]
    },
    {
        "question": "25. Как воспринимаете конечных пользователей или клиентов вашей работы?",
        "answers": [
            "Стараюсь удивить их качеством и оригинальностью, чтобы оставить сильное впечатление",
            "Важно, чтобы они получили то, что нужно, и остались довольны",
            "Главное — соответствие техническим требованиям и срокам, без лишних нюансов"
        ]
    }
]

def migrate_assessment_questions():
    """Создает опросник и переносит существующие вопросы в БД"""
    
    app = Flask(__name__)
    init_db(app)
    
    with app.app_context():
        try:
            # Создаем таблицы для опросников
            db.create_all()
            logger.info("✅ Questionnaire tables created")
            
            # Проверяем, есть ли уже опросник "Оценка кандидата"
            existing = db.session.query(Questionnaire)\
                .filter_by(title="Оценка кандидата").first()
            
            if existing:
                logger.info(f"📋 Questionnaire already exists: {existing.title} (ID: {existing.id})")
                return existing.id
            
            # Создаем основной опросник для Assessment
            questionnaire = create_questionnaire(
                title="Оценка кандидата",
                description="Психологическая оценка личностных качеств кандидата для определения типа личности: Новатор, Оптимизатор или Исполнитель",
                category="assessment",
                created_by="migration_script",
                max_time_minutes=30,
                randomize_questions=False,  # не перемешиваем для Assessment
                randomize_options=False     # не перемешиваем варианты ответов
            )
            
            logger.info(f"✅ Created questionnaire: {questionnaire.title} (ID: {questionnaire.id})")
            
            # Переносим все 25 вопросов
            for i, question_data in enumerate(ASSESSMENT_QUESTIONS, 1):
                # Формируем варианты ответов с правильными типами личности
                options = []
                for j, answer_text in enumerate(question_data['answers']):
                    # Определяем тип личности для каждого варианта ответа
                    # 0 = Новатор (innovator), 1 = Оптимизатор (optimizer), 2 = Исполнитель (executor)
                    score_types = ['innovator', 'optimizer', 'executor']
                    
                    options.append({
                        'text': answer_text,
                        'score_type': score_types[j],
                        'score_value': 1  # каждый ответ дает 1 балл своему типу
                    })
                
                # Добавляем вопрос в опросник
                question = add_question_to_questionnaire(
                    questionnaire_id=questionnaire.id,
                    text=question_data['question'],
                    options=options,
                    order_index=i,
                    question_type='single_choice',
                    description=None,
                    is_required=True
                )
                
                logger.info(f"✅ Added question {i}/25: {question_data['question'][:50]}...")
            
            logger.info(f"🎉 Successfully migrated {len(ASSESSMENT_QUESTIONS)} questions!")
            logger.info(f"📊 Questionnaire ID: {questionnaire.id}")
            
            return questionnaire.id
            
        except Exception as e:
            logger.error(f"❌ Migration failed: {e}")
            db.session.rollback()
            raise

def create_sample_questionnaires():
    """Создает дополнительные примеры опросников"""
    
    app = Flask(__name__)
    init_db(app)
    
    with app.app_context():
        try:
            # Создаем простой опросник для демонстрации
            demo_questionnaire = create_questionnaire(
                title="Демо опрос",
                description="Простой демонстрационный опросник из 3 вопросов",
                category="demo",
                created_by="migration_script",
                max_time_minutes=5,
                randomize_questions=True,
                randomize_options=True
            )
            
            # Добавляем несколько простых вопросов
            demo_questions = [
                {
                    "question": "Как вы предпочитаете работать?",
                    "answers": [
                        {"text": "В команде", "score_type": "optimizer"},
                        {"text": "Самостоятельно", "score_type": "executor"},
                        {"text": "Гибридно", "score_type": "innovator"}
                    ]
                },
                {
                    "question": "Ваш подход к новым задачам?",
                    "answers": [
                        {"text": "Изучаю все возможности", "score_type": "innovator"},
                        {"text": "Использую проверенные методы", "score_type": "executor"},
                        {"text": "Комбинирую разные подходы", "score_type": "optimizer"}
                    ]
                },
                {
                    "question": "Что важнее в работе?",
                    "answers": [
                        {"text": "Качество результата", "score_type": "executor"},
                        {"text": "Инновационность решения", "score_type": "innovator"},
                        {"text": "Эффективность процесса", "score_type": "optimizer"}
                    ]
                }
            ]
            
            for i, q_data in enumerate(demo_questions, 1):
                add_question_to_questionnaire(
                    questionnaire_id=demo_questionnaire.id,
                    text=q_data['question'],
                    options=q_data['answers'],
                    order_index=i,
                    question_type='single_choice'
                )
            
            logger.info(f"✅ Created demo questionnaire: {demo_questionnaire.title} (ID: {demo_questionnaire.id})")
            
        except Exception as e:
            logger.error(f"❌ Error creating demo questionnaires: {e}")

def show_migration_results():
    """Показывает результаты миграции"""
    
    app = Flask(__name__)
    init_db(app)
    
    with app.app_context():
        try:
            # Получаем статистику
            questionnaires = db.session.query(Questionnaire).all()
            total_questions = db.session.query(Question).count()
            total_options = db.session.query(QuestionOption).count()
            
            logger.info("📊 Migration Results:")
            logger.info(f"   Questionnaires: {len(questionnaires)}")
            logger.info(f"   Total Questions: {total_questions}")
            logger.info(f"   Total Options: {total_options}")
            
            for q in questionnaires:
                questions_count = len(q.questions)
                logger.info(f"   - {q.title}: {questions_count} questions (ID: {q.id})")
                
        except Exception as e:
            logger.error(f"❌ Error showing results: {e}")

def main():
    """Главная функция миграции"""
    logger.info("🚀 Starting Assessment questions migration...")
    
    try:
        # Мигрируем основной опросник Assessment
        questionnaire_id = migrate_assessment_questions()
        
        # Создаем демо опросники
        create_sample_questionnaires()
        
        # Показываем результаты
        show_migration_results()
        
        logger.info("✅ Migration completed successfully!")
        logger.info(f"🎯 Main Assessment questionnaire ID: {questionnaire_id}")
        logger.info("📱 You can now use the API to get questionnaires:")
        logger.info(f"   GET /api/questionnaire/{questionnaire_id}")
        logger.info("   GET /api/questionnaires")
        
    except Exception as e:
        logger.error(f"❌ Migration failed: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()