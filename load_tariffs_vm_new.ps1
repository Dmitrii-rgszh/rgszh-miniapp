# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–∞—Ä–∏—Ñ–æ–≤ –Ω–∞ –í–ú
param(
    [string]$VmIp = "176.108.243.189"
)

$ErrorActionPreference = "Stop"

Write-Host "üöÄ === –ó–ê–ì–†–£–ó–ö–ê –¢–ê–†–ò–§–û–í –ù–ê –í–ú ===" -ForegroundColor Green
Write-Host "   –í–ú: $VmIp" -ForegroundColor Yellow
Write-Host ""

try {
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..." -ForegroundColor Cyan
    if (-not (Test-Path "miniapp.db")) {
        throw "–õ–æ–∫–∞–ª—å–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö miniapp.db –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
    }
    
    $fileSize = (Get-Item "miniapp.db").Length
    Write-Host "   üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: $([math]::Round($fileSize/1MB, 2)) MB" -ForegroundColor Green
    
    # 2. –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    Write-Host ""
    Write-Host "üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–∞ –í–ú..." -ForegroundColor Cyan
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ Docker
    Write-Host "   üîÑ –ö–æ–ø–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–µ—Ä–≤–µ—Ä–∞..."
    
    # –°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –Ω–∞ –í–ú
    Write-Host "   üì° –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –Ω–∞ –í–ú..."
    scp miniapp.db "root@${VmIp}:/root/miniapp_new.db"
    if ($LASTEXITCODE -ne 0) {
        throw "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –Ω–∞ –í–ú"
    }
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    Write-Host "   üì¶ –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
    ssh "root@$VmIp" "docker cp /root/miniapp_new.db rgszh-miniapp-server-1:/app/miniapp_new.db"
    if ($LASTEXITCODE -ne 0) {
        throw "–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
    }
    
    # 3. –ó–∞–º–µ–Ω—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
    Write-Host "   üîÑ –ó–∞–º–µ–Ω—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ..."
    ssh "root@$VmIp" "docker exec rgszh-miniapp-server-1 mv /app/miniapp_new.db /app/miniapp.db"
    if ($LASTEXITCODE -ne 0) {
        throw "–û—à–∏–±–∫–∞ –∑–∞–º–µ–Ω—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
    }
    
    # 4. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    Write-Host "   üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä..."
    ssh "root@$VmIp" "cd /root && docker-compose restart server"
    if ($LASTEXITCODE -ne 0) {
        throw "–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"
    }
    
    # 5. –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
    Write-Host "   ‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞..."
    Start-Sleep -Seconds 15
    
    # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    Write-Host "   üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    ssh "root@$VmIp" "docker ps --filter name=rgszh-miniapp-server"
    
    Write-Host ""
    Write-Host "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≥—Ä—É–∂–µ–Ω–∞!" -ForegroundColor Green
    
    # 7. –¢–µ—Å—Ç–∏—Ä—É–µ–º API
    Write-Host ""
    Write-Host "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞–º–∏..." -ForegroundColor Cyan
    
    try {
        $testBody = @{
            age = 35
            gender = "–ú—É–∂—Å–∫–æ–π"
            insuranceTerm = 5
            insuranceSum = 1000000
            includeAccidentInsurance = "–¥–∞"
            criticalIllnessOption = "–õ–µ—á–µ–Ω–∏–µ –∑–∞ —Ä—É–±–µ–∂–æ–º"
            insuranceFrequency = "–ï–∂–µ–≥–æ–¥–Ω–æ"
            email = "test@rgsl.ru"
        } | ConvertTo-Json
        
        Write-Host "   üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å..."
        $response = Invoke-WebRequest -Uri "https://$VmIp/api/proxy/calculator/save" -Method POST -Headers @{"Content-Type"="application/json"} -Body $testBody -SkipCertificateCheck
        
        $result = $response.Content | ConvertFrom-Json
        
        if ($result.success) {
            Write-Host "   ‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç!" -ForegroundColor Green
            Write-Host "   üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: $($result.data.insuranceCost)" -ForegroundColor Yellow
            Write-Host "   üìß Email: $($result.data.email)" -ForegroundColor Yellow
            Write-Host "   üìä –ß–∞—Å—Ç–æ—Ç–∞: $($result.data.insuranceFrequency)" -ForegroundColor Yellow
        } else {
            Write-Host "   ‚ö†Ô∏è  API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: $($result.error)" -ForegroundColor Red
        }
        
    } catch {
        Write-Host "   ‚ö†Ô∏è  –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API: $($_.Exception.Message)" -ForegroundColor Red
        Write-Host "   üí° –í–æ–∑–º–æ–∂–Ω–æ, —Å–µ—Ä–≤–µ—Ä –µ—â–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ç–µ—Å—Ç –ø–æ–∑–∂–µ." -ForegroundColor Yellow
    }
    
    # 8. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —Ä–∞–∑–Ω—ã–º–∏ –¥–æ–º–µ–Ω–∞–º–∏
    Write-Host ""
    Write-Host "üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤..." -ForegroundColor Cyan
    
    $testEmails = @(
        @{ email = "test@rgsl.ru"; expected = "+5%" },
        @{ email = "test@vtb.ru"; expected = "+20%" },
        @{ email = "test@external.com"; expected = "+30%/+35%" }
    )
    
    foreach ($test in $testEmails) {
        Write-Host "   üìß –¢–µ—Å—Ç–∏—Ä—É–µ–º $($test.email) (–æ–∂–∏–¥–∞–µ–º $($test.expected))..."
        
        try {
            $testBody = @{
                age = 30
                gender = "–ú—É–∂—Å–∫–æ–π"
                insuranceTerm = 10
                insuranceSum = 500000
                includeAccidentInsurance = "–Ω–µ—Ç"
                criticalIllnessOption = "–Ω–µ—Ç"
                insuranceFrequency = "–ï–∂–µ–≥–æ–¥–Ω–æ"
                email = $test.email
            } | ConvertTo-Json
            
            $response = Invoke-WebRequest -Uri "https://$VmIp/api/justincase/calculate" -Method POST -Headers @{"Content-Type"="application/json"} -Body $testBody -SkipCertificateCheck
            $result = $response.Content | ConvertFrom-Json
            
            if ($result.success) {
                Write-Host "      ‚úÖ –ü—Ä–µ–º–∏—è: $($result.data.final_premium) —Ä—É–±." -ForegroundColor Green
            } else {
                Write-Host "      ‚ö†Ô∏è  –û—à–∏–±–∫–∞: $($result.error)" -ForegroundColor Yellow
            }
        } catch {
            Write-Host "      ‚ö†Ô∏è  –ó–∞–ø—Ä–æ—Å –Ω–µ –ø—Ä–æ—à–µ–ª: $($_.Exception.Message)" -ForegroundColor Yellow
        }
    }
    
} catch {
    Write-Host ""
    Write-Host "‚ùå –û—à–∏–±–∫–∞: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

Write-Host ""
Write-Host "üéâ === –ó–ê–ì–†–£–ó–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê ===" -ForegroundColor Green
Write-Host "   üåê –§—Ä–æ–Ω—Ç–µ–Ω–¥: https://$VmIp/" -ForegroundColor Yellow
Write-Host "   üîß API: https://$VmIp/api/" -ForegroundColor Yellow
Write-Host "   üí° –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –≥–æ—Ç–æ–≤—ã –∫ —Ä–∞–±–æ—Ç–µ!" -ForegroundColor Yellow
