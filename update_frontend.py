#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Å–µ—Ä–≤–µ—Ä–µ
"""

import requests
import base64
import os
import json

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SERVER_URL = "https://176.108.243.189"
SERVER_API = f"{SERVER_URL}/api"

def update_frontend_files():
    """–ü–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–∏—Ç—å —Ñ–∞–π–ª—ã —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞"""
    
    files_to_update = [
        {
            'path': 'src/Styles/BackButton.css',
            'content': open('src/Styles/BackButton.css', 'r', encoding='utf-8').read()
        },
        {
            'path': 'src/CareFuturePage.js', 
            'content': open('src/CareFuturePage.js', 'r', encoding='utf-8').read()
        }
    ]
    
    # –ü–æ–ø—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã —á–µ—Ä–µ–∑ API
    for file_info in files_to_update:
        try:
            # –ö–æ–¥–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ base64
            content_b64 = base64.b64encode(file_info['content'].encode('utf-8')).decode('utf-8')
            
            payload = {
                'action': 'update_file',
                'path': file_info['path'],
                'content': content_b64
            }
            
            print(f"–û–±–Ω–æ–≤–ª—è–µ–º {file_info['path']}...")
            
            # –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ endpoints
            endpoints = [
                f"{SERVER_API}/update",
                f"{SERVER_API}/deploy", 
                f"{SERVER_API}/webhook",
                f"{SERVER_API}/frontend/update"
            ]
            
            for endpoint in endpoints:
                try:
                    response = requests.post(
                        endpoint,
                        json=payload,
                        verify=False,
                        timeout=30
                    )
                    if response.status_code in [200, 201, 202]:
                        print(f"‚úÖ –§–∞–π–ª {file_info['path']} –æ–±–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ {endpoint}")
                        break
                except requests.exceptions.RequestException as e:
                    continue
                    
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è {file_info['path']}: {e}")

def rebuild_frontend():
    """–ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–±–æ—Ä–∫—É —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞"""
    try:
        endpoints = [
            f"{SERVER_API}/rebuild",
            f"{SERVER_API}/frontend/rebuild",
            f"{SERVER_API}/deploy/rebuild"
        ]
        
        for endpoint in endpoints:
            try:
                response = requests.post(endpoint, verify=False, timeout=60)
                if response.status_code in [200, 201, 202]:
                    print(f"‚úÖ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–±–æ—Ä–∫–∏ —á–µ—Ä–µ–∑ {endpoint}")
                    return True
            except requests.exceptions.RequestException:
                continue
                
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞: {e}")
        return False

if __name__ == "__main__":
    print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞...")
    
    # –ü–æ–ø—ã—Ç–∫–∞ 1: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
    update_frontend_files()
    
    # –ü–æ–ø—ã—Ç–∫–∞ 2: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–±–æ—Ä–∫–∏
    rebuild_frontend()
    
    print("‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω")
    print(f"üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ {SERVER_URL}")
