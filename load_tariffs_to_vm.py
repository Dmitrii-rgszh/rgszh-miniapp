#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–∞—Ä–∏—Ñ–æ–≤ –Ω–∞ –í–ú —á–µ—Ä–µ–∑ Docker
"""

import subprocess
import sys
import json

def run_command(cmd, description):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    print(f"üîÑ {description}...")
    try:
        result = subprocess.run(cmd, shell=True, capture_output=True, text=True, check=True)
        print(f"‚úÖ {description} - —É—Å–ø–µ—à–Ω–æ")
        return result.stdout
    except subprocess.CalledProcessError as e:
        print(f"‚ùå {description} - –æ—à–∏–±–∫–∞:")
        print(f"   Stdout: {e.stdout}")
        print(f"   Stderr: {e.stderr}")
        return None

def load_tariffs_to_vm():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–∞—Ä–∏—Ñ—ã –Ω–∞ –í–ú"""
    vm_ip = "176.108.243.189"
    
    print("üöÄ –ó–ê–ì–†–£–ó–ö–ê –¢–ê–†–ò–§–û–í –ù–ê –í–ú")
    print("=" * 50)
    
    # 1. –ö–æ–ø–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    print(f"üì§ –ö–æ–ø–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –±–∞–∑—É miniapp.db –Ω–∞ –í–ú {vm_ip}...")
    
    commands = [
        # –ö–æ–ø–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –í–ú
        f'scp miniapp.db root@{vm_ip}:/root/miniapp.db',
        
        # –ö–æ–ø–∏—Ä—É–µ–º –±–∞–∑—É –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–µ—Ä–≤–µ—Ä–∞
        f'ssh root@{vm_ip} "docker cp /root/miniapp.db rgszh-miniapp-server-1:/app/miniapp.db"',
        
        # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
        f'ssh root@{vm_ip} "cd /root && docker-compose restart server"',
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
        f'ssh root@{vm_ip} "docker ps --filter name=rgszh-miniapp-server"'
    ]
    
    for cmd in commands:
        result = run_command(cmd, f"–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ: {cmd}")
        if result is None:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã")
            return False
    
    print("\n‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–∞—Ä–∏—Ñ–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    return True

def test_vm_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API –Ω–∞ –í–ú –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–∞—Ä–∏—Ñ–æ–≤"""
    print("\nüß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API –ù–ê –í–ú")
    print("=" * 50)
    
    test_cmd = '''
    curl -k -X POST "https://176.108.243.189/api/proxy/calculator/save" \
    -H "Content-Type: application/json" \
    -d '{
        "age": 35,
        "gender": "–ú—É–∂—Å–∫–æ–π", 
        "insuranceTerm": 5,
        "insuranceSum": 1000000,
        "includeAccidentInsurance": "–¥–∞",
        "criticalIllnessOption": "–õ–µ—á–µ–Ω–∏–µ –∑–∞ —Ä—É–±–µ–∂–æ–º",
        "insuranceFrequency": "–ï–∂–µ–≥–æ–¥–Ω–æ",
        "email": "test@rgsl.ru"
    }'
    '''
    
    result = run_command(test_cmd, "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞–º–∏")
    if result:
        print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        print(result)

if __name__ == "__main__":
    print("üéØ –ó–ê–ì–†–£–ó–ö–ê –¢–ê–†–ò–§–û–í –ù–ê –í–ú –î–õ–Ø –ö–û–†–ü–û–†–ê–¢–ò–í–ù–´–• –ö–û–≠–§–§–ò–¶–ò–ï–ù–¢–û–í")
    print("=" * 70)
    
    if load_tariffs_to_vm():
        test_vm_api()
    
    print("\n" + "=" * 70)
    print("üéâ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω!")
