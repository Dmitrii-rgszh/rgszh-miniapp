#!/usr/bin/env node

/**
 * –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π –ª–æ–≥–∏–∫–∏ —Ä–∞—Å—á–µ—Ç–∞
 * –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */

console.log('üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ö–õ–ò–ï–ù–¢–°–ö–û–ô –õ–û–ì–ò–ö–ò');
console.log('===================================');

// –¢–æ—á–Ω–∞—è –∫–æ–ø–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ computeRecommended –∏–∑ JustincasePage.js
function computeRecommended({
  birthDate,
  hasJob,
  income2022,
  income2023,
  income2024,
  scholarship,
  unsecuredLoans,
  breadwinnerStatus,
  incomeShare,
  childrenCount,
  specialCareRelatives
}) {
  // –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫ —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º–∏ –≤ —á–∏—Å–ª–∞
  const toNumber = (v) => {
    if (!v) return null;
    // —É–¥–∞–ª—è–µ–º —Ç–æ—á–∫–∏ –∏ –ø—Ä–æ–±–µ–ª—ã, –∑–∞—Ç–µ–º –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Ü–µ–ª–æ–µ
    const str = v.toString().replace(/[.\s]/g, '');
    const num = parseInt(str, 10);
    return isNaN(num) ? null : num;
  };

  // –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏–π
  const norm = (s) => (s || '').toString().toLowerCase().trim();

  // –†–∞—Å—á–µ—Ç –≤–æ–∑—Ä–∞—Å—Ç–∞
  const computeAge = (dateStr) => {
    if (!dateStr) return null;
    const birthDateObj = new Date(dateStr);
    const today = new Date();
    let age = today.getFullYear() - birthDateObj.getFullYear();
    const monthDiff = today.getMonth() - birthDateObj.getMonth();
    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDateObj.getDate())) {
      age--;
    }
    return age;
  };

  const age = computeAge(birthDate);

  // –†–∞—Å—á–µ—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ –¥–æ—Ö–æ–¥–∞
  const incomes = [
    toNumber(income2022),
    toNumber(income2023), 
    toNumber(income2024),
    toNumber(scholarship)
  ].filter(v => v !== null && v > 0);

  const avgIncome = incomes.length > 0 ? incomes.reduce((a, b) => a + b) / incomes.length : 0;

  // –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç F13: —Å—Ç–∞—Ç—É—Å –∫–æ—Ä–º–∏–ª—å—Ü–∞ –∏ –¥–æ–ª—è –¥–æ—Ö–æ–¥–∞
  const breadNorm = norm(breadwinnerStatus);
  let breadwinnerCoeff = 1;
  
  if (breadNorm === '–¥–∞' || breadNorm === 'yes') {
    breadwinnerCoeff = 3;
  } else if (breadNorm === '–Ω–µ—Ç' || breadNorm === 'no') {
    const shareMap = {
      '–¥–æ 10': 1,
      '10-24': 1.4,
      '25-49': 1.8,
      '50-74': 2.2,
      '75-89': 2.6,
      '–±–æ–ª–µ–µ 90': 3
    };
    const shareKey = norm(incomeShare).replace(/[%]/g, '');
    breadwinnerCoeff = shareMap[shareKey] ?? 1;
  }

  // –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç F14: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π
  // –ï—Å–ª–∏ childrenCount –ø—É—Å—Ç–æ–π, –∏—Å–ø–æ–ª—å–∑—É–µ–º "0" –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  const childrenKey = norm(childrenCount || "0");
  let childrenCoeff;
  
  switch (childrenKey) {
    case '1':
      childrenCoeff = 1.25;
      break;
    case '2':
      childrenCoeff = 1.40625;
      break;
    case '3 –∏ –±–æ–ª–µ–µ':
    case '3+':
      childrenCoeff = 1.523438;
      break;
    case '0':
    default:
      childrenCoeff = 1;
      break;
  }

  // –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç F15: –æ—Å–æ–±–∞—è –∑–∞–±–æ—Ç–∞
  const specialNorm = norm(specialCareRelatives);
  let specialCoeff = 1;
  if (specialNorm === '–¥–∞' || specialNorm === 'yes') {
    specialCoeff = 1.5;
  }

  // –ò—Ç–æ–≥–æ–≤—ã–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç
  const productCoeff = breadwinnerCoeff * childrenCoeff * specialCoeff;

  // –í–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã (F5)
  let ageFactor = 10;
  if (age !== null) {
    if (age <= 25) ageFactor = 10;
    else if (age <= 30) ageFactor = 9;
    else if (age <= 35) ageFactor = 8;
    else if (age <= 40) ageFactor = 7;
    else if (age <= 45) ageFactor = 6;
    else if (age <= 50) ageFactor = 5;
    else if (age <= 55) ageFactor = 4;
    else ageFactor = 3;
  }

  // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞—Ö–æ–≤–∞—è —Å—É–º–º–∞
  const maxInsuranceSum = avgIncome * ageFactor;

  // –ë–∞–∑–æ–≤–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–∞—è —Å—É–º–º–∞
  let baseRecommendedSum = avgIncome * productCoeff;

  // –î–æ–±–∞–≤–ª—è–µ–º –∫—Ä–µ–¥–∏—Ç—ã
  const loans = toNumber(unsecuredLoans) || 0;
  baseRecommendedSum += loans;

  // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º–æ–π
  const recommendedSum = Math.min(baseRecommendedSum, maxInsuranceSum);

  // –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–π —Å—Ä–æ–∫
  let recommendedTerm = 15;
  if (age !== null && age >= 25) {
    recommendedTerm = Math.max(5, Math.min(20, 20 - (age - 25)));
  }

  return {
    recommendedSum: Math.round(recommendedSum),
    recommendedTerm,
    debugInfo: {
      age,
      avgIncome,
      breadwinnerCoeff,
      childrenCoeff,
      specialCoeff,
      productCoeff,
      ageFactor,
      maxInsuranceSum,
      baseRecommendedSum,
      loans
    }
  };
}

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
const testData = {
  birthDate: "1989-01-01", // 36 –ª–µ—Ç
  hasJob: "–¥–∞",
  income2022: "1000000",
  income2023: "1000000", 
  income2024: "1000000",
  scholarship: null,
  unsecuredLoans: "0",
  breadwinnerStatus: "–ù–µ—Ç", // –ù–µ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ—Ä–º–∏–ª–µ—Ü
  incomeShare: "75%-89%", // –î–æ–ª—è –¥–æ—Ö–æ–¥–∞ –≤ —Å–µ–º–µ–π–Ω–æ–º –±—é–¥–∂–µ—Ç–µ
  childrenCount: "2", // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π
  specialCareRelatives: "–ù–µ—Ç"
};

console.log('üìä –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:');
Object.entries(testData).forEach(([key, value]) => {
  console.log(`   ${key}: ${JSON.stringify(value)}`);
});

console.log('\nüßÆ –í—ã–ø–æ–ª–Ω—è–µ–º —Ä–∞—Å—á–µ—Ç...');
const result = computeRecommended(testData);

console.log('\n‚úÖ –†–ï–ó–£–õ–¨–¢–ê–¢–´:');
console.log(`   –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–∞—è —Å—É–º–º–∞: ${(result.recommendedSum / 1000000).toFixed(1)}M —Ä—É–±`);
console.log(`   –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–π —Å—Ä–æ–∫: ${result.recommendedTerm} –ª–µ—Ç`);

console.log('\nüîç –î–ï–¢–ê–õ–ò –†–ê–°–ß–ï–¢–ê:');
console.log(`   –í–æ–∑—Ä–∞—Å—Ç: ${result.debugInfo.age} –ª–µ—Ç`);
console.log(`   –°—Ä–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥: ${(result.debugInfo.avgIncome / 1000000).toFixed(1)}M —Ä—É–±`);
console.log(`   –ö–æ—ç—Ñ. –∫–æ—Ä–º–∏–ª—å—Ü–∞: ${result.debugInfo.breadwinnerCoeff}`);
console.log(`   –ö–æ—ç—Ñ. –¥–µ—Ç–µ–π: ${result.debugInfo.childrenCoeff}`);
console.log(`   –ö–æ—ç—Ñ. –æ—Å–æ–±–æ–π –∑–∞–±–æ—Ç—ã: ${result.debugInfo.specialCoeff}`);
console.log(`   –ò—Ç–æ–≥–æ–≤—ã–π –∫–æ—ç—Ñ.: ${result.debugInfo.productCoeff.toFixed(3)}`);
console.log(`   –í–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –∫–æ—ç—Ñ. (F5): ${result.debugInfo.ageFactor}`);
console.log(`   –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: ${(result.debugInfo.maxInsuranceSum / 1000000).toFixed(1)}M —Ä—É–±`);

console.log('\nüìà –°–†–ê–í–ù–ï–ù–ò–ï:');
console.log(`   üì± –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–∫–∞–∑—ã–≤–∞–ª–æ: 2.6M —Ä—É–± (–ø—Ä–æ–±–ª–µ–º–∞ –±—ã–ª–∞ –≤ –ø—É—Å—Ç–æ–º childrenCount)`);
console.log(`   üìä Excel –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç: 3.7M —Ä—É–±`);
console.log(`   üíª –ù–∞—à –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ä–∞—Å—á–µ—Ç: ${(result.recommendedSum / 1000000).toFixed(2)}M —Ä—É–±`);

if (Math.abs(result.recommendedSum - 3700000) < 100000) {
  console.log('\nüéâ –£–°–ü–ï–•! –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—á–µ–Ω—å –±–ª–∏–∑–æ–∫ –∫ Excel!');
} else if (Math.abs(result.recommendedSum - 3656250) < 1000) {
  console.log('\n‚úÖ –û–¢–õ–ò–ß–ù–û! –õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ (–Ω–µ–±–æ–ª—å—à–∞—è —Ä–∞–∑–Ω–∏—Ü–∞ —Å Excel –≤ —Ä–∞–º–∫–∞—Ö –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç–∏)');
} else {
  console.log('\n‚ö†Ô∏è  –ï—Å—Ç—å —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ —Å –æ–∂–∏–¥–∞–µ–º—ã–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º');
}

console.log('\nüöÄ –ö–ª–∏–µ–Ω—Ç—Å–∫–∞—è –ª–æ–≥–∏–∫–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!');
console.log('   –°–µ—Ä–≤–µ—Ä –±–æ–ª—å—à–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç /api/justincase/recommend-sum');
console.log('   –í–µ—Å—å —Ä–∞—Å—á–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –∫–ª–∏–µ–Ω—Ç–∞');
