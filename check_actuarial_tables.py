# check_actuarial_tables.py
# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–µ–∞–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –≤ –∞–∫—Ç—É–∞—Ä–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã

print("üîç === –ê–ù–ê–õ–ò–ó –ê–ö–¢–£–ê–†–ù–´–• –¢–ê–ë–õ–ò–¶ –°–ë–°–ñ ===")

try:
    from justincase_calculator import JustincaseCalculatorComplete
    
    calculator = JustincaseCalculatorComplete()
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –º—É–∂—Å–∫–∏–µ —Ç–∞–±–ª–∏—Ü—ã
    male_table = calculator.LIFE_TARIFFS_MALE
    female_table = calculator.LIFE_TARIFFS_FEMALE
    
    print("\nüìä –ú–£–ñ–°–ö–ò–ï –¢–ê–ë–õ–ò–¶–´:")
    male_ages = sorted(male_table.keys())
    print(f"   –í–æ–∑—Ä–∞—Å—Ç–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ: {male_ages}")
    print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–∑—Ä–∞—Å—Ç–æ–≤: {len(male_ages)}")
    print(f"   –î–∏–∞–ø–∞–∑–æ–Ω: {min(male_ages)} - {max(male_ages)} –ª–µ—Ç")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–æ–∫–∏ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞
    if male_ages:
        first_age = male_ages[0]
        terms = sorted(male_table[first_age].keys())
        print(f"   –°—Ä–æ–∫–∏ –¥–ª—è –≤–æ–∑—Ä–∞—Å—Ç–∞ {first_age}: {terms}")
        print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ä–æ–∫–æ–≤: {len(terms)}")
        print(f"   –î–∏–∞–ø–∞–∑–æ–Ω —Å—Ä–æ–∫–æ–≤: {min(terms)} - {max(terms)} –ª–µ—Ç")
    
    print("\nüìä –ñ–ï–ù–°–ö–ò–ï –¢–ê–ë–õ–ò–¶–´:")
    female_ages = sorted(female_table.keys())
    print(f"   –í–æ–∑—Ä–∞—Å—Ç–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ: {female_ages}")
    print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–∑—Ä–∞—Å—Ç–æ–≤: {len(female_ages)}")
    print(f"   –î–∏–∞–ø–∞–∑–æ–Ω: {min(female_ages)} - {max(female_ages)} –ª–µ—Ç")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–Ω–æ—Ç—É —Ç–∞–±–ª–∏—Ü
    print("\nüîç –ê–ù–ê–õ–ò–ó –ü–û–õ–ù–û–¢–´:")
    
    # –û–∂–∏–¥–∞–µ–º—ã–µ –≤–æ–∑—Ä–∞—Å—Ç–∞ (18-70 = 53 –≤–æ–∑—Ä–∞—Å—Ç–∞)
    expected_ages = list(range(18, 71))
    missing_ages = [age for age in expected_ages if age not in male_ages]
    
    print(f"   –û–∂–∏–¥–∞–µ—Ç—Å—è –≤–æ–∑—Ä–∞—Å—Ç–æ–≤ (18-70): {len(expected_ages)}")
    print(f"   –ó–∞–≥—Ä—É–∂–µ–Ω–æ –≤–æ–∑—Ä–∞—Å—Ç–æ–≤: {len(male_ages)}")
    print(f"   –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤–æ–∑—Ä–∞—Å—Ç–æ–≤: {len(missing_ages)}")
    
    if missing_ages:
        print(f"   –ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –≤–æ–∑—Ä–∞—Å—Ç–∞: {missing_ages[:10]}{'...' if len(missing_ages) > 10 else ''}")
    
    # –û–∂–∏–¥–∞–µ–º—ã–µ —Å—Ä–æ–∫–∏ (1-30 = 30 —Å—Ä–æ–∫–æ–≤)
    if male_ages:
        first_age = male_ages[0]
        actual_terms = sorted(male_table[first_age].keys())
        expected_terms = list(range(1, 31))
        missing_terms = [term for term in expected_terms if term not in actual_terms]
        
        print(f"   –û–∂–∏–¥–∞–µ—Ç—Å—è —Å—Ä–æ–∫–æ–≤ (1-30): {len(expected_terms)}")
        print(f"   –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Å—Ä–æ–∫–æ–≤: {len(actual_terms)}")
        print(f"   –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å—Ä–æ–∫–æ–≤: {len(missing_terms)}")
        
        if missing_terms:
            print(f"   –ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ —Å—Ä–æ–∫–∏: {missing_terms}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤ —Ç–∞—Ä–∏—Ñ–æ–≤
    print("\nüìã –ü–†–ò–ú–ï–†–´ –¢–ê–†–ò–§–û–í:")
    test_cases = [
        (25, 10), (30, 15), (35, 5), (50, 20), (60, 10)
    ]
    
    for age, term in test_cases:
        if age in male_table and term in male_table[age]:
            male_tariff = male_table[age][term]
            female_tariff = female_table.get(age, {}).get(term, '–ù–ï–¢')
            print(f"   –í–æ–∑—Ä–∞—Å—Ç {age}, —Å—Ä–æ–∫ {term}: –ú={male_tariff}, –ñ={female_tariff}")
        else:
            print(f"   –í–æ–∑—Ä–∞—Å—Ç {age}, —Å—Ä–æ–∫ {term}: ‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—é
    print("\nüßÆ –¢–ï–°–¢ –ò–ù–¢–ï–†–ü–û–õ–Ø–¶–ò–ò:")
    test_age = 33  # –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç
    test_term = 7   # –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π —Å—Ä–æ–∫
    
    try:
        tariff = calculator.get_life_tariff(test_age, 'male', test_term)
        print(f"   –í–æ–∑—Ä–∞—Å—Ç {test_age}, —Å—Ä–æ–∫ {test_term}: —Ç–∞—Ä–∏—Ñ {tariff:.4f}")
        print("   ‚úÖ –ò–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏–∏: {e}")
    
    # –í—ã–≤–æ–¥—ã
    print("\nüéØ –í–´–í–û–î–´:")
    
    if len(male_ages) < 53:
        print(f"   ‚ö†Ô∏è –ù–ï–ü–û–õ–ù–´–ï –¢–ê–ë–õ–ò–¶–´: –∑–∞–≥—Ä—É–∂–µ–Ω–æ —Ç–æ–ª—å–∫–æ {len(male_ages)} –∏–∑ 53 –≤–æ–∑—Ä–∞—Å—Ç–æ–≤")
        print("   üìù –ù—É–∂–Ω–æ –¥–æ–ø–æ–ª–Ω–∏—Ç—å —Ç–∞–±–ª–∏—Ü—ã –≤—Å–µ–º–∏ –≤–æ–∑—Ä–∞—Å—Ç–∞–º–∏ 18-70")
    else:
        print("   ‚úÖ –í–æ–∑—Ä–∞—Å—Ç–∞: –ø–æ–ª–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞")
    
    if len(actual_terms) < 30:
        print(f"   ‚ö†Ô∏è –ù–ï–ü–û–õ–ù–´–ï –°–†–û–ö–ò: –∑–∞–≥—Ä—É–∂–µ–Ω–æ —Ç–æ–ª—å–∫–æ {len(actual_terms)} –∏–∑ 30 —Å—Ä–æ–∫–æ–≤") 
        print("   üìù –ù—É–∂–Ω–æ –¥–æ–ø–æ–ª–Ω–∏—Ç—å —Ç–∞–±–ª–∏—Ü—ã —Å—Ä–æ–∫–∞–º–∏ 1-30")
    else:
        print("   ‚úÖ –°—Ä–æ–∫–∏: –ø–æ–ª–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
    print("\n‚öôÔ∏è –û–ì–†–ê–ù–ò–ß–ï–ù–ò–Ø –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–†–ê:")
    print(f"   MIN_AGE: {calculator.MIN_AGE}")
    print(f"   MAX_AGE: {calculator.MAX_AGE}")
    print(f"   MIN_INSURANCE_TERM: {calculator.MIN_INSURANCE_TERM}")
    print(f"   MAX_INSURANCE_TERM: {calculator.MAX_INSURANCE_TERM}")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {e}")
    import traceback
    traceback.print_exc()