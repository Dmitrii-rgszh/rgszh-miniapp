#!/usr/bin/env python3
# add_yearly_income_column.py - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ yearly_income –≤ —Ç–∞–±–ª–∏—Ü—É nsj_calculations

import os
import sys
import logging
from flask import Flask
from sqlalchemy import text

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ sys.path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from db_saver import init_db, db

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def add_yearly_income_column():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –∫–æ–ª–æ–Ω–∫—É yearly_income –≤ —Ç–∞–±–ª–∏—Ü—É nsj_calculations"""
    app = Flask(__name__)
    init_db(app)
    
    with app.app_context():
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∫–æ–ª–æ–Ω–∫–∞
            check_query = text("""
                SELECT column_name 
                FROM information_schema.columns 
                WHERE table_name = 'nsj_calculations' 
                AND column_name = 'yearly_income'
            """)
            
            result = db.session.execute(check_query)
            if result.fetchone():
                logger.info("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ yearly_income —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                return True
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É
            logger.info("üìä –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É yearly_income...")
            alter_query = text("""
                ALTER TABLE nsj_calculations 
                ADD COLUMN yearly_income VARCHAR(20)
            """)
            
            db.session.execute(alter_query)
            db.session.commit()
            
            logger.info("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ yearly_income —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞")
            
            # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è –Ω–æ–≤–æ–π –∫–æ–ª–æ–Ω–∫–∏
            index_query = text("""
                CREATE INDEX ix_nsj_calculations_yearly_income 
                ON nsj_calculations(yearly_income)
            """)
            
            try:
                db.session.execute(index_query)
                db.session.commit()
                logger.info("‚úÖ –ò–Ω–¥–µ–∫—Å –¥–ª—è yearly_income —Å–æ–∑–¥–∞–Ω")
            except Exception as e:
                logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∏–Ω–¥–µ–∫—Å (–≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç): {e}")
            
            return True
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–æ–ª–æ–Ω–∫–∏: {e}")
            db.session.rollback()
            return False

if __name__ == "__main__":
    logger.info("üîÑ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è yearly_income...")
    
    if add_yearly_income_column():
        logger.info("üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    else:
        logger.error("‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π")
        sys.exit(1)