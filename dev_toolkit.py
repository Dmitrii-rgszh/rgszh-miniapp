# -*- coding: utf-8 -*-
"""
Development Toolkit - –ú–∞—Ç–µ—Ä–∏–Ω—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –¥–æ—Å—Ç—É–ø–æ–º –∫–æ –≤—Å–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ MiniApp
"""

import sys
import subprocess
import os
import webbrowser
from pathlib import Path
import threading
import json
from datetime import datetime

try:
    import tkinter as tk
    from tkinter import ttk, messagebox
except ImportError:
    print("–û—à–∏–±–∫–∞: tkinter –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ tkinter: pip install tk")
    input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
    sys.exit(1)

class DevelopmentToolkit:
    def __init__(self):
        self.root = tk.Tk()
        self.root.title("üöÄ Development Toolkit - MiniApp")
        self.root.geometry("1000x700")
        self.root.minsize(800, 600)
        
        # –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ü–≤–µ—Ç–∞
        self.colors = {
            'primary_red': '#B40037',
            'secondary_red': '#990037',
            'primary_gray': '#98A4AE',
            'secondary_gray': '#769394',
            'primary_blue': '#002882',
            'secondary_blue': '#002068',
            'background': '#f5f6fa',
            'card_bg': '#ffffff',
            'text_primary': '#2c3e50',
            'text_secondary': '#7f8c8d',
            'success': '#27ae60',
            'warning': '#f39c12',
            'error': '#e74c3c'
        }
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π
        self.setup_styles()
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.create_interface()
        
        # –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        self.load_settings()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
        self.check_tools_availability()
    
    def setup_styles(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Å—Ç–∏–ª–µ–π"""
        self.root.configure(bg=self.colors['background'])
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ ttk —Å—Ç–∏–ª–µ–π
        style = ttk.Style()
        style.theme_use('clam')
        
        # –°—Ç–∏–ª—å –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
        style.configure(
            'Primary.TButton',
            background=self.colors['primary_red'],
            foreground='white',
            borderwidth=0,
            focuscolor='none',
            padding=(20, 12),
            font=('Segoe UI', 12, 'bold')
        )
        
        style.map(
            'Primary.TButton',
            background=[('active', self.colors['secondary_red']),
                       ('pressed', self.colors['secondary_red'])]
        )
        
        # –°—Ç–∏–ª—å –¥–ª—è –≤—Ç–æ—Ä–∏—á–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
        style.configure(
            'Secondary.TButton',
            background=self.colors['primary_gray'],
            foreground='white',
            borderwidth=0,
            focuscolor='none',
            padding=(15, 10),
            font=('Segoe UI', 11)
        )
        
        style.map(
            'Secondary.TButton',
            background=[('active', self.colors['secondary_gray']),
                       ('pressed', self.colors['secondary_gray'])]
        )
        
        # –°—Ç–∏–ª—å –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
        style.configure(
            'Tool.TFrame',
            background=self.colors['card_bg'],
            relief='raised',
            borderwidth=1
        )
    
    def create_interface(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        header_frame = tk.Frame(self.root, bg=self.colors['primary_red'], height=80)
        header_frame.pack(fill=tk.X)
        header_frame.pack_propagate(False)
        
        # –õ–æ–≥–æ—Ç–∏–ø –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ
        title_frame = tk.Frame(header_frame, bg=self.colors['primary_red'])
        title_frame.pack(expand=True, fill=tk.BOTH)
        
        title_label = tk.Label(
            title_frame,
            text="üöÄ Development Toolkit",
            font=('Segoe UI', 24, 'bold'),
            fg='white',
            bg=self.colors['primary_red']
        )
        title_label.pack(pady=15)
        
        subtitle_label = tk.Label(
            title_frame,
            text="–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è MiniApp",
            font=('Segoe UI', 12),
            fg='white',
            bg=self.colors['primary_red']
        )
        subtitle_label.pack()
        
        # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        main_container = tk.Frame(self.root, bg=self.colors['background'])
        main_container.pack(fill=tk.BOTH, expand=True, padx=20, pady=20)
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
        self.create_tools_section(main_container)
        self.create_utilities_section(main_container)
        self.create_status_bar()
    
    def create_tools_section(self, parent):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ–∫—Ü–∏–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤"""
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏
        tools_label = tk.Label(
            parent,
            text="üõ† –û—Å–Ω–æ–≤–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã",
            font=('Segoe UI', 18, 'bold'),
            fg=self.colors['text_primary'],
            bg=self.colors['background']
        )
        tools_label.pack(anchor='w', pady=(0, 15))
        
        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
        tools_frame = tk.Frame(parent, bg=self.colors['background'])
        tools_frame.pack(fill=tk.X, pady=(0, 30))
        
        # –°–µ—Ç–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ (2 –∫–æ–ª–æ–Ω–∫–∏)
        self.create_tool_card(
            tools_frame, 
            row=0, col=0,
            title="üé® CSS Text Editor",
            description="–í–∏–∑—É–∞–ª—å–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö\n–¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç–∏–ª–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
            status="–ì–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é",
            action=self.open_css_editor,
            style="primary"
        )
        
        self.create_tool_card(
            tools_frame,
            row=0, col=1,
            title="üì± Component Generator",
            description="–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤\n—Å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º–∏ —Å—Ç–∏–ª—è–º–∏",
            status="–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ",
            action=self.show_component_generator,
            style="secondary"
        )
        
        self.create_tool_card(
            tools_frame,
            row=1, col=0,
            title="üîç Code Analyzer",
            description="–ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –∫–æ–¥–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞\n—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º",
            status="–ü–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è",
            action=self.show_code_analyzer,
            style="secondary"
        )
        
        self.create_tool_card(
            tools_frame,
            row=1, col=1,
            title="üì¶ Build Manager",
            description="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–±–æ—Ä–∫–æ–π –∏ –¥–µ–ø–ª–æ–µ–º\n–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
            status="–ü–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è",
            action=self.show_build_manager,
            style="secondary"
        )
    
    def create_tool_card(self, parent, row, col, title, description, status, action, style="primary"):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞"""
        
        # –û—Å–Ω–æ–≤–Ω–∞—è —Ä–∞–º–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏
        card_frame = tk.Frame(
            parent,
            bg=self.colors['card_bg'],
            relief='raised',
            borderwidth=2
        )
        card_frame.grid(row=row, column=col, padx=10, pady=10, sticky='nsew', ipadx=15, ipady=15)
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ç–∫–∏
        parent.columnconfigure(col, weight=1)
        parent.rowconfigure(row, weight=1)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
        title_label = tk.Label(
            card_frame,
            text=title,
            font=('Segoe UI', 14, 'bold'),
            fg=self.colors['text_primary'],
            bg=self.colors['card_bg']
        )
        title_label.pack(anchor='w', pady=(0, 10))
        
        # –û–ø–∏—Å–∞–Ω–∏–µ
        desc_label = tk.Label(
            card_frame,
            text=description,
            font=('Segoe UI', 11),
            fg=self.colors['text_secondary'],
            bg=self.colors['card_bg'],
            justify=tk.LEFT
        )
        desc_label.pack(anchor='w', pady=(0, 15))
        
        # –°—Ç–∞—Ç—É—Å
        status_color = self.colors['success'] if status == "–ì–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é" else self.colors['warning']
        status_label = tk.Label(
            card_frame,
            text=f"üìä {status}",
            font=('Segoe UI', 10),
            fg=status_color,
            bg=self.colors['card_bg']
        )
        status_label.pack(anchor='w', pady=(0, 15))
        
        # –ö–Ω–æ–ø–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è
        button_style = 'Primary.TButton' if style == 'primary' else 'Secondary.TButton'
        action_btn = ttk.Button(
            card_frame,
            text="–û—Ç–∫—Ä—ã—Ç—å" if status == "–ì–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é" else "–°–∫–æ—Ä–æ...",
            style=button_style,
            command=action if status == "–ì–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é" else None,
            state='normal' if status == "–ì–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é" else 'disabled'
        )
        action_btn.pack(anchor='w')
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ hover —ç—Ñ—Ñ–µ–∫—Ç–∞
        self.add_hover_effect(card_frame)
    
    def create_utilities_section(self, parent):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ–∫—Ü–∏–∏ —É—Ç–∏–ª–∏—Ç"""
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏
        utils_label = tk.Label(
            parent,
            text="‚ö° –ë—ã—Å—Ç—Ä—ã–µ —É—Ç–∏–ª–∏—Ç—ã",
            font=('Segoe UI', 18, 'bold'),
            fg=self.colors['text_primary'],
            bg=self.colors['background']
        )
        utils_label.pack(anchor='w', pady=(0, 15))
        
        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —É—Ç–∏–ª–∏—Ç
        utils_frame = tk.Frame(parent, bg=self.colors['background'])
        utils_frame.pack(fill=tk.X)
        
        # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —É—Ç–∏–ª–∏—Ç
        utils_buttons_frame = tk.Frame(utils_frame, bg=self.colors['background'])
        utils_buttons_frame.pack(fill=tk.X)
        
        # –ö–Ω–æ–ø–∫–∏ —É—Ç–∏–ª–∏—Ç
        utilities = [
            ("üìÅ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ–µ–∫—Ç", self.open_project_folder),
            ("üåê –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä", self.start_dev_server),
            ("üìã –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", self.show_system_info),
            ("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", self.open_settings),
            ("‚ùì –°–ø—Ä–∞–≤–∫–∞", self.show_help)
        ]
        
        for i, (text, command) in enumerate(utilities):
            btn = ttk.Button(
                utils_buttons_frame,
                text=text,
                style='Secondary.TButton',
                command=command
            )
            btn.grid(row=0, column=i, padx=5, pady=5, sticky='ew')
            utils_buttons_frame.columnconfigure(i, weight=1)
    
    def create_status_bar(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ —Å—Ç–∞—Ç—É—Å–∞"""
        
        self.status_frame = tk.Frame(self.root, bg=self.colors['primary_gray'], height=30)
        self.status_frame.pack(side=tk.BOTTOM, fill=tk.X)
        self.status_frame.pack_propagate(False)
        
        self.status_label = tk.Label(
            self.status_frame,
            text="–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ",
            font=('Segoe UI', 10),
            fg='white',
            bg=self.colors['primary_gray']
        )
        self.status_label.pack(side=tk.LEFT, padx=10, pady=5)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ
        project_info = tk.Label(
            self.status_frame,
            text=f"–ü—Ä–æ–µ–∫—Ç: {self.get_project_name()} | Python {sys.version.split()[0]}",
            font=('Segoe UI', 10),
            fg='white',
            bg=self.colors['primary_gray']
        )
        project_info.pack(side=tk.RIGHT, padx=10, pady=5)
    
    def add_hover_effect(self, widget):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ hover —ç—Ñ—Ñ–µ–∫—Ç–∞ –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫"""
        original_bg = widget.cget('bg')
        
        def on_enter(event):
            widget.configure(bg='#f8f9fa')
        
        def on_leave(event):
            widget.configure(bg=original_bg)
        
        widget.bind("<Enter>", on_enter)
        widget.bind("<Leave>", on_leave)
    
    def update_status(self, message, color=None):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ —Å—Ç–∞—Ç—É—Å–∞"""
        self.status_label.configure(text=message)
        if color:
            self.status_label.configure(fg=color)
        
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–±—Ä–æ—Å —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        self.root.after(5000, lambda: self.status_label.configure(text="–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ", fg='white'))
    
    # ======================================
    # –î–ï–ô–°–¢–í–ò–Ø –ò–ù–°–¢–†–£–ú–ï–ù–¢–û–í
    # ======================================
    
    def open_css_editor(self):
        """–ó–∞–ø—É—Å–∫ CSS Text Editor"""
        self.update_status("üé® –ó–∞–ø—É—Å–∫ CSS Text Editor...", self.colors['success'])
        
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
            editor_path = Path(__file__).parent / "text_css_editor.py"
            if not editor_path.exists():
                # –ï—Å–ª–∏ –≤–µ–±-–≤–µ—Ä—Å–∏–∏ –Ω–µ—Ç, –∏—â–µ–º desktop –≤–µ—Ä—Å–∏—é
                editor_path = Path(__file__).parent / "css_editor.py"
            
            if editor_path.exists():
                # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ
                threading.Thread(
                    target=self.run_tool,
                    args=(str(editor_path), "CSS Text Editor"),
                    daemon=True
                ).start()
            else:
                self.show_tool_not_found("CSS Text Editor", "text_css_editor.py –∏–ª–∏ css_editor.py")
        
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å CSS Editor:\n{str(e)}")
            self.update_status("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ CSS Editor", self.colors['error'])
    
    def show_component_generator(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ (–∑–∞–≥–ª—É—à–∫–∞)"""
        messagebox.showinfo(
            "Component Generator",
            "üöß –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n\n"
            "–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:\n"
            "‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤\n"
            "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π\n"
            "‚Ä¢ –®–∞–±–ª–æ–Ω—ã –¥–ª—è —Ç–∏–ø–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n"
            "‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º–∏ —Å—Ç–∏–ª—è–º–∏"
        )
    
    def show_code_analyzer(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –∫–æ–¥–∞ (–∑–∞–≥–ª—É—à–∫–∞)"""
        messagebox.showinfo(
            "Code Analyzer",
            "üöß –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è\n\n"
            "–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:\n"
            "‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ ESLint –ø—Ä–∞–≤–∏–ª\n"
            "‚Ä¢ –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏\n"
            "‚Ä¢ –ü–æ–∏—Å–∫ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–≥–æ –∫–æ–¥–∞\n"
            "‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏"
        )
    
    def show_build_manager(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä —Å–±–æ—Ä–∫–∏ (–∑–∞–≥–ª—É—à–∫–∞)"""
        messagebox.showinfo(
            "Build Manager", 
            "üöß –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è\n\n"
            "–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:\n"
            "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞\n"
            "‚Ä¢ –î–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä\n"
            "‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏—è–º–∏\n"
            "‚Ä¢ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü–∏—è"
        )
    
    # ======================================
    # –£–¢–ò–õ–ò–¢–´
    # ======================================
    
    def open_project_folder(self):
        """–û—Ç–∫—Ä—ã—Ç–∏–µ –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞"""
        try:
            project_path = self.find_project_root()
            if project_path:
                if sys.platform == "win32":
                    os.startfile(project_path)
                elif sys.platform == "darwin":
                    subprocess.run(["open", project_path])
                else:
                    subprocess.run(["xdg-open", project_path])
                
                self.update_status(f"üìÅ –û—Ç–∫—Ä—ã—Ç–∞ –ø–∞–ø–∫–∞: {project_path}", self.colors['success'])
            else:
                messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞")
        
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞:\n{str(e)}")
    
    def start_dev_server(self):
        """–ó–∞–ø—É—Å–∫ dev —Å–µ—Ä–≤–µ—Ä–∞"""
        try:
            project_root = self.find_project_root()
            if project_root:
                # –ò—â–µ–º package.json –¥–ª—è npm start
                package_json = Path(project_root) / "package.json"
                if package_json.exists():
                    self.update_status("üåê –ó–∞–ø—É—Å–∫ React dev —Å–µ—Ä–≤–µ—Ä–∞...", self.colors['warning'])
                    
                    # –ó–∞–ø—É—Å–∫–∞–µ–º npm start –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ
                    if sys.platform == "win32":
                        subprocess.Popen(f'start cmd /k "cd /d {project_root} && npm start"', shell=True)
                    else:
                        subprocess.Popen(['gnome-terminal', '--', 'bash', '-c', f'cd {project_root} && npm start; exec bash'])
                    
                    self.update_status("‚úÖ Dev —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω", self.colors['success'])
                else:
                    messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "package.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞")
            else:
                messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞")
        
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä:\n{str(e)}")
    
    def show_system_info(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–∏—Å—Ç–µ–º–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é"""
        import platform
        
        info = f"""
üñ• –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: {platform.system()} {platform.release()}
–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: {platform.machine()}
–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä: {platform.processor()}
Python –≤–µ—Ä—Å–∏—è: {sys.version.split()[0]}
–†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}

üìÇ –ü—Ä–æ–µ–∫—Ç: {self.get_project_name()}
üìÅ –ü—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É: {self.find_project_root() or '–ù–µ –Ω–∞–π–¥–µ–Ω'}

üõ† –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:
‚Ä¢ CSS Text Editor: {'‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω' if self.check_css_editor() else '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω'}
‚Ä¢ Node.js: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if self.check_nodejs() else '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω'}
‚Ä¢ Git: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if self.check_git() else '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω'}
        """
        
        messagebox.showinfo("–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", info.strip())
    
    def open_settings(self):
        """–û—Ç–∫—Ä—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
        SettingsWindow(self)
    
    def show_help(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"""
        help_text = """
üöÄ Development Toolkit - –°–ø—Ä–∞–≤–∫–∞

–û–°–ù–û–í–ù–´–ï –ò–ù–°–¢–†–£–ú–ï–ù–¢–´:
üé® CSS Text Editor - –í–∏–∑—É–∞–ª—å–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
   –ü–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å —Å—Ç–∏–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ —É–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å

üì± Component Generator - –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)
   –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º–∏ —Å—Ç–∏–ª—è–º–∏

üîç Code Analyzer - –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –∫–æ–¥–∞ (–ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è)
   –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –∫–æ–¥–∞

üì¶ Build Manager - –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–±–æ—Ä–∫–∏ (–ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è)
   –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ —Å–±–æ—Ä–∫–∏ –∏ –¥–µ–ø–ª–æ—è

–ë–´–°–¢–†–´–ï –£–¢–ò–õ–ò–¢–´:
üìÅ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ–µ–∫—Ç - –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ —Ñ–∞–π–ª–æ–≤–æ–º –º–µ–Ω–µ–¥–∂–µ—Ä–µ
üåê –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä - –ó–∞–ø—É—Å–∫–∞–µ—Ç React dev —Å–µ—Ä–≤–µ—Ä (npm start)
üìã –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ
‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
‚ùì –°–ø—Ä–∞–≤–∫–∞ - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

–ì–û–†–Ø–ß–ò–ï –ö–õ–ê–í–ò–®–ò:
Ctrl+1 - CSS Text Editor
Ctrl+O - –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ–µ–∫—Ç
Ctrl+S - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä
F1 - –°–ø—Ä–∞–≤–∫–∞
        """
        
        messagebox.showinfo("–°–ø—Ä–∞–≤–∫–∞", help_text.strip())
    
    # ======================================
    # –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –ú–ï–¢–û–î–´
    # ======================================
    
    def run_tool(self, tool_path, tool_name):
        """–ó–∞–ø—É—Å–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ"""
        try:
            if sys.platform == "win32":
                # –î–ª—è Windows –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å
                subprocess.Popen([sys.executable, tool_path])
            else:
                subprocess.run([sys.executable, tool_path], check=True)
        except subprocess.CalledProcessError as e:
            error_msg = f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å {tool_name}:\n{str(e)}"
            self.root.after(0, lambda msg=error_msg: messagebox.showerror("–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞", msg))
        except Exception as e:
            error_msg = f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ {tool_name}:\n{str(e)}"
            self.root.after(0, lambda msg=error_msg: messagebox.showerror("–û—à–∏–±–∫–∞", msg))
    
    def show_tool_not_found(self, tool_name, filename):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"""
        messagebox.showerror(
            "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω",
            f"–ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª {filename}\n\n"
            f"–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª {tool_name} –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–æ–π –∂–µ –ø–∞–ø–∫–µ, "
            f"—á—Ç–æ –∏ —ç—Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞.\n\n"
            f"–û–∂–∏–¥–∞–µ–º—ã–π –ø—É—Ç—å: {Path(__file__).parent / filename}"
        )
    
    def find_project_root(self):
        """–ü–æ–∏—Å–∫ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞ (–ø–∞–ø–∫–∞ —Å package.json –∏–ª–∏ src/)"""
        current = Path.cwd()
        
        # –ò—â–µ–º –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ –≤—ã—à–µ
        for path in [current] + list(current.parents):
            if (path / "package.json").exists() or (path / "src").exists():
                return str(path)
        
        return None
    
    def get_project_name(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø—Ä–æ–µ–∫—Ç–∞"""
        project_root = self.find_project_root()
        if project_root:
            # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–º—è –∏–∑ package.json
            package_json = Path(project_root) / "package.json"
            if package_json.exists():
                try:
                    with open(package_json, 'r', encoding='utf-8') as f:
                        data = json.load(f)
                        return data.get('name', Path(project_root).name)
                except:
                    pass
            
            return Path(project_root).name
        
        return "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–æ–µ–∫—Ç"
    
    def check_tools_availability(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤"""
        # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ–±–Ω–æ–≤–∏—Ç—å UI —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ
        pass
    
    def check_css_editor(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è CSS —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞"""
        css_web = Path(__file__).parent / "text_css_editor.py"
        css_desktop = Path(__file__).parent / "css_editor.py"
        return css_web.exists() or css_desktop.exists()
    
    def check_nodejs(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Node.js"""
        try:
            subprocess.run(['node', '--version'], capture_output=True, check=True)
            return True
        except:
            return False
    
    def check_git(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Git"""
        try:
            subprocess.run(['git', '--version'], capture_output=True, check=True)
            return True
        except:
            return False
    
    def load_settings(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞
        pass
    
    def save_settings(self):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —Ñ–∞–π–ª
        pass
    
    def setup_hotkeys(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à"""
        self.root.bind('<Control-1>', lambda e: self.open_css_editor())
        self.root.bind('<Control-o>', lambda e: self.open_project_folder())
        self.root.bind('<Control-s>', lambda e: self.start_dev_server())
        self.root.bind('<F1>', lambda e: self.show_help())
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        self.setup_hotkeys()
        self.root.mainloop()


class SettingsWindow:
    """–û–∫–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    
    def __init__(self, parent):
        self.parent = parent
        self.window = tk.Toplevel(parent.root)
        self.window.title("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
        self.window.geometry("500x400")
        self.window.transient(parent.root)
        self.window.grab_set()
        
        self.create_interface()
    
    def create_interface(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = tk.Label(
            self.window,
            text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Development Toolkit",
            font=('Segoe UI', 16, 'bold'),
            fg=self.parent.colors['text_primary'],
            bg=self.parent.colors['background']
        )
        title_label.pack(pady=20)
        
        # Notebook –¥–ª—è –≤–∫–ª–∞–¥–æ–∫
        notebook = ttk.Notebook(self.window)
        notebook.pack(fill=tk.BOTH, expand=True, padx=20, pady=10)
        
        # –í–∫–ª–∞–¥–∫–∞ "–û–±—â–∏–µ"
        general_frame = ttk.Frame(notebook)
        notebook.add(general_frame, text="–û–±—â–∏–µ")
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–º—ã
        theme_label = tk.Label(general_frame, text="–¢–µ–º–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:", font=('Segoe UI', 12))
        theme_label.pack(anchor='w', pady=(10, 5))
        
        theme_var = tk.StringVar(value="–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞—è")
        theme_combo = ttk.Combobox(general_frame, textvariable=theme_var, values=["–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞—è", "–¢–µ–º–Ω–∞—è", "–°–≤–µ—Ç–ª–∞—è"])
        theme_combo.pack(anchor='w', pady=(0, 10))
        
        # –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫
        autostart_var = tk.BooleanVar()
        autostart_check = tk.Checkbutton(
            general_frame,
            text="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ —Å–∏—Å—Ç–µ–º—ã",
            variable=autostart_var,
            font=('Segoe UI', 11)
        )
        autostart_check.pack(anchor='w', pady=5)
        
        # –í–∫–ª–∞–¥–∫–∞ "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã"
        tools_frame = ttk.Frame(notebook)
        notebook.add(tools_frame, text="–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã")
        
        tools_info = tk.Label(
            tools_frame,
            text="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã\n–≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö",
            font=('Segoe UI', 12),
            justify=tk.CENTER
        )
        tools_info.pack(expand=True)
        
        # –ö–Ω–æ–ø–∫–∏
        buttons_frame = tk.Frame(self.window, bg=self.parent.colors['background'])
        buttons_frame.pack(fill=tk.X, padx=20, pady=10)
        
        save_btn = ttk.Button(
            buttons_frame,
            text="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å",
            style='Primary.TButton',
            command=self.save_settings
        )
        save_btn.pack(side=tk.RIGHT, padx=(5, 0))
        
        cancel_btn = ttk.Button(
            buttons_frame,
            text="–û—Ç–º–µ–Ω–∞",
            style='Secondary.TButton',
            command=self.window.destroy
        )
        cancel_btn.pack(side=tk.RIGHT)
    
    def save_settings(self):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        messagebox.showinfo("–ù–∞—Å—Ç—Ä–æ–π–∫–∏", "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")
        self.window.destroy()


def safe_print(message):
    """–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤—ã–≤–æ–¥ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–∏"""
    try:
        print(message)
    except UnicodeEncodeError:
        # –£–±–∏—Ä–∞–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è Windows –∫–æ–Ω—Å–æ–ª–∏
        clean_message = message.encode('ascii', 'ignore').decode('ascii')
        print(clean_message)

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    try:
        safe_print("–ó–∞–ø—É—Å–∫ Development Toolkit...")
        app = DevelopmentToolkit()
        safe_print("–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≥–æ—Ç–æ–≤")
        app.run()
    except ImportError as e:
        safe_print(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        safe_print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏")
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
        sys.exit(1)
    except Exception as e:
        safe_print(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        try:
            messagebox.showerror("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:\n{str(e)}")
        except:
            safe_print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–∫–∞–∑–∞—Ç—å –¥–∏–∞–ª–æ–≥ –æ—à–∏–±–∫–∏")
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
        sys.exit(1)